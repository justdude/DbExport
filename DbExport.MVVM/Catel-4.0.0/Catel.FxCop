<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="Catel">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>True</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
  <TargetFrameworkVersion>3.5</TargetFrameworkVersion>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/../output/Release/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Core/Catel.Core.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.Controls/Catel.Extensions.Controls.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.CSLA/Catel.Extensions.CSLA.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.Data/Catel.Extensions.Data.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.EntityFramework5/Catel.Extensions.EntityFramework5.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.FluentValidation/Catel.Extensions.FluentValidation.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.Prism/Catel.Extensions.Prism.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Mvc/Catel.Mvc.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../output/release/NET40/Catel.MVVM/Catel.MVVM.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="AbstractTypesShouldNotHaveConstructors" Enabled="True" BreaksBuild="True" />
    <Rule Name="AvoidEmptyInterfaces" Enabled="True" BreaksBuild="True" />
    <Rule Name="AvoidExcessiveParametersOnGenericTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="AvoidNamespacesWithFewTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="AvoidOutParameters" Enabled="True" BreaksBuild="True" />
    <Rule Name="CollectionsShouldImplementGenericInterface" Enabled="True" BreaksBuild="True" />
    <Rule Name="ConsiderPassingBaseTypesAsParameters" Enabled="True" BreaksBuild="True" />
    <Rule Name="DeclareEventHandlersCorrectly" Enabled="True" BreaksBuild="True" />
    <Rule Name="DeclareTypesInNamespaces" Enabled="True" BreaksBuild="True" />
    <Rule Name="DefineAccessorsForAttributeArguments" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotCatchGeneralExceptionTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotDeclareProtectedMembersInSealedTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotDeclareStaticMembersOnGenericTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotDeclareVirtualMembersInSealedTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotDeclareVisibleInstanceFields" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotExposeGenericLists" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotHideBaseClassMethods" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotNestGenericTypesInMemberSignatures" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotOverloadOperatorEqualsOnReferenceTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotPassTypesByReference" Enabled="True" BreaksBuild="True" />
    <Rule Name="DoNotRaiseExceptionsInUnexpectedLocations" Enabled="True" BreaksBuild="True" />
    <Rule Name="EnumeratorsShouldBeStronglyTyped" Enabled="True" BreaksBuild="True" />
    <Rule Name="EnumsShouldHaveZeroValue" Enabled="True" BreaksBuild="True" />
    <Rule Name="EnumStorageShouldBeInt32" Enabled="True" BreaksBuild="True" />
    <Rule Name="ExceptionsShouldBePublic" Enabled="True" BreaksBuild="True" />
    <Rule Name="GenericMethodsShouldProvideTypeParameter" Enabled="True" BreaksBuild="True" />
    <Rule Name="ICollectionImplementationsHaveStronglyTypedMembers" Enabled="True" BreaksBuild="True" />
    <Rule Name="ImplementIDisposableCorrectly" Enabled="True" BreaksBuild="True" />
    <Rule Name="ImplementStandardExceptionConstructors" Enabled="True" BreaksBuild="True" />
    <Rule Name="IndexersShouldNotBeMultidimensional" Enabled="True" BreaksBuild="True" />
    <Rule Name="InterfaceMethodsShouldBeCallableByChildTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="ListsAreStronglyTyped" Enabled="True" BreaksBuild="True" />
    <Rule Name="MarkAssembliesWithAssemblyVersion" Enabled="True" BreaksBuild="True" />
    <Rule Name="MarkAssembliesWithClsCompliant" Enabled="True" BreaksBuild="True" />
    <Rule Name="MarkAssembliesWithComVisible" Enabled="True" BreaksBuild="True" />
    <Rule Name="MarkAttributesWithAttributeUsage" Enabled="True" BreaksBuild="True" />
    <Rule Name="MarkEnumsWithFlags" Enabled="True" BreaksBuild="True" />
    <Rule Name="MembersShouldNotExposeCertainConcreteTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="MovePInvokesToNativeMethodsClass" Enabled="True" BreaksBuild="True" />
    <Rule Name="NestedTypesShouldNotBeVisible" Enabled="True" BreaksBuild="True" />
    <Rule Name="OverloadOperatorEqualsOnOverloadingAddAndSubtract" Enabled="True" BreaksBuild="True" />
    <Rule Name="OverrideMethodsOnComparableTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="PropertiesShouldNotBeWriteOnly" Enabled="True" BreaksBuild="True" />
    <Rule Name="ProvideObsoleteAttributeMessage" Enabled="True" BreaksBuild="True" />
    <Rule Name="ReplaceRepetitiveArgumentsWithParamsArray" Enabled="True" BreaksBuild="True" />
    <Rule Name="StaticHolderTypesShouldBeSealed" Enabled="True" BreaksBuild="True" />
    <Rule Name="StaticHolderTypesShouldNotHaveConstructors" Enabled="True" BreaksBuild="True" />
    <Rule Name="StringUriOverloadsCallSystemUriOverloads" Enabled="True" BreaksBuild="True" />
    <Rule Name="TypesShouldNotExtendCertainBaseTypes" Enabled="True" BreaksBuild="True" />
    <Rule Name="TypesThatOwnDisposableFieldsShouldBeDisposable" Enabled="True" BreaksBuild="True" />
    <Rule Name="TypesThatOwnNativeResourcesShouldBeDisposable" Enabled="True" BreaksBuild="True" />
    <Rule Name="UriParametersShouldNotBeStrings" Enabled="True" BreaksBuild="True" />
    <Rule Name="UriPropertiesShouldNotBeStrings" Enabled="True" BreaksBuild="True" />
    <Rule Name="UriReturnValuesShouldNotBeStrings" Enabled="True" BreaksBuild="True" />
    <Rule Name="UseEventsWhereAppropriate" Enabled="True" BreaksBuild="True" />
    <Rule Name="UseGenericEventHandlerInstances" Enabled="True" BreaksBuild="True" />
    <Rule Name="UseGenericsWhereAppropriate" Enabled="True" BreaksBuild="True" />
    <Rule Name="UseIntegralOrStringArgumentForIndexers" Enabled="True" BreaksBuild="True" />
    <Rule Name="UsePropertiesWhereAppropriate" Enabled="True" BreaksBuild="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" AllRulesBreakBuild="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Namespaces>
   <Namespace Name="Catel.Caching">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Caching</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Collections">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Collections</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Data.Expressions">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Data.Expressions</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Data.Repositories">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Data.Repositories</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Diagnostics">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Diagnostics</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.ExceptionHandling">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.ExceptionHandling</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Generics">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Generics</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.IO">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.IO</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.IoC">
    <Messages>
     <Message Id="Io" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>Io</Item>
       <Item>Catel.IoC</Item>
       <Item>IO</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Linq">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Linq</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Modules">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Modules</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Modules.ModuleManager">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Modules.ModuleManager</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Modules.ModuleManager.Models">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Modules.ModuleManager.Models</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Modules.ModuleManager.ViewModels">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Modules.ModuleManager.ViewModels</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Mvc">
    <Messages>
     <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>Mvc</Item>
       <Item>Catel.Mvc</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM">
    <Messages>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.Auditing">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.MVVM.Auditing</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.Auditing</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.CSLA">
    <Messages>
     <Message Id="CSLA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>CSLA</Item>
       <Item>Catel.MVVM.CSLA</Item>
       <Item>Csla</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.CSLA</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.Services">
    <Messages>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.Services</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.Services.Test">
    <Messages>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.Services.Test</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.Tasks">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.MVVM.Tasks</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.Tasks</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.ViewModels">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.MVVM.ViewModels</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.ViewModels</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.MVVM.Views">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.MVVM.Views</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.MVVM.Views</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Runtime.Serialization">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Runtime.Serialization</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Services">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Services</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Test">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Test</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Text">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Text</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Threading">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Threading</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Controls.MVVMProviders">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Windows.Controls.MVVMProviders</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.Windows.Controls.MVVMProviders</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Controls.MVVMProviders.Logic">
    <Messages>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Catel.Windows.Controls.MVVMProviders.Logic</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Markup">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Windows.Markup</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Media">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Windows.Media</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Media.Effects">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Windows.Media.Effects</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Media.Imaging">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Windows.Media.Imaging</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Catel.Windows.Threading">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue>
       <Item>Catel.Windows.Threading</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Ricciolo.StylesExplorer.MarkupReflection">
    <Messages>
     <Message Id="Ricciolo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
      <Issue Name="Namespace">
       <Item>Ricciolo</Item>
       <Item>Ricciolo.StylesExplorer.MarkupReflection</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Core/Catel.Core.dll">
    <Modules>
     <Module Name="catel.core.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel">
        <Types>
         <Type Name="Argument">
          <Members>
           <Member Name="#EnsureValidParamName(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Argument.EnsureValidParamName(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsInterface(System.String,System.Object,System.Type)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.ImplementsInterface(string, object, Type)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsInterface(System.String,System.Type,System.Type)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.ImplementsInterface(string, Type, Type)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.ImplementsInterface(string, Type, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsInterface`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Type)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.ImplementsInterface&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, Type)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsOneOfTheInterfaces(System.String,System.Object,System.Type[])">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.ImplementsOneOfTheInterfaces(string, object, Type[])'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsOneOfTheInterfaces(System.String,System.Type,System.Type[])">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.ImplementsOneOfTheInterfaces(string, Type, Type[])'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsOneOfTheInterfaces`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Type[])">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.ImplementsOneOfTheInterfaces&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, Type[])'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMatch(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;,System.String,System.Text.RegularExpressions.RegexOptions)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMatch(Expression&lt;Func&lt;string&gt;&gt;, string, RegexOptions)'</Item>
               <Item>'Expression&lt;Func&lt;string&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMatch(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMatch(string, string, string, RegexOptions)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMatch(string, string, string, RegexOptions)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsMatch(string, string, string, RegexOptions)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMaximum(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Int32&gt;&gt;,System.Int32)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMaximum(Expression&lt;Func&lt;int&gt;&gt;, int)'</Item>
               <Item>'Expression&lt;Func&lt;int&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMaximum(System.String,System.Int32,System.Int32)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMaximum(string, int, int)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMaximum(string, int, int)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMaximum`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,!!0)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMaximum&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, T)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMaximum`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,!!0,System.Func`3&lt;!!0,!!0,System.Boolean&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMaximum&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMaximum`1(System.String,!!0,!!0)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMaximum&lt;T&gt;(string, T, T)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMaximum&lt;T&gt;(string, T, T)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMaximum`1(System.String,!!0,!!0,System.Func`3&lt;!!0,!!0,System.Boolean&gt;)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMaximum&lt;T&gt;(string, T, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMaximum&lt;T&gt;(string, T, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsMaximum&lt;T&gt;(string, T, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMinimal(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Int32&gt;&gt;,System.Int32)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMinimal(Expression&lt;Func&lt;int&gt;&gt;, int)'</Item>
               <Item>'Expression&lt;Func&lt;int&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMinimal(System.String,System.Int32,System.Int32)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMinimal(string, int, int)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMinimal(string, int, int)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMinimal`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,!!0)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMinimal&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, T)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMinimal`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,!!0,System.Func`3&lt;!!0,!!0,System.Boolean&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsMinimal&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMinimal`1(System.String,!!0,!!0)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMinimal&lt;T&gt;(string, T, T)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMinimal&lt;T&gt;(string, T, T)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMinimal`1(System.String,!!0,!!0,System.Func`3&lt;!!0,!!0,System.Boolean&gt;)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMinimal&lt;T&gt;(string, T, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsMinimal&lt;T&gt;(string, T, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsMinimal&lt;T&gt;(string, T, T, Func&lt;T, T, bool&gt;)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotMatch(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;,System.String,System.Text.RegularExpressions.RegexOptions)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotMatch(Expression&lt;Func&lt;string&gt;&gt;, string, RegexOptions)'</Item>
               <Item>'Expression&lt;Func&lt;string&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotMatch(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotMatch(string, string, string, RegexOptions)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotMatch(string, string, string, RegexOptions)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsNotMatch(string, string, string, RegexOptions)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNull(System.String,System.Object)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNull(string, object)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNull(string, object)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNull`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotNull&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmpty(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Guid&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotNullOrEmpty(Expression&lt;Func&lt;Guid&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;Guid&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmpty(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Nullable`1&lt;System.Guid&gt;&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotNullOrEmpty(Expression&lt;Func&lt;Guid?&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;Guid?&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmpty(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotNullOrEmpty(Expression&lt;Func&lt;string&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;string&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmpty(System.String,System.Guid)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmpty(string, Guid)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmpty(string, Guid)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmpty(System.String,System.Nullable`1&lt;System.Guid&gt;)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmpty(string, Guid?)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmpty(string, Guid?)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Argument.IsNotNullOrEmpty(string, Guid?)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmpty(System.String,System.String)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmpty(string, string)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmpty(string, string)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Argument.IsNotNullOrEmpty(string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmptyArray(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Array&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotNullOrEmptyArray(Expression&lt;Func&lt;Array&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;Array&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrEmptyArray(System.String,System.Array)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmptyArray(string, Array)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrEmptyArray(string, Array)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Argument.IsNotNullOrEmptyArray(string, Array)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrWhitespace(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.String&gt;&gt;)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'Argument.IsNotNullOrWhitespace(Expression&lt;Func&lt;string&gt;&gt;)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotNullOrWhitespace(Expression&lt;Func&lt;string&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;string&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotNullOrWhitespace(System.String,System.String)">
            <Messages>
             <Message Id="Whitespace" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Whitespace</Item>
               <Item>'Argument.IsNotNullOrWhitespace(string, string)'</Item>
               <Item>WhiteSpace</Item>
              </Issue>
             </Message>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrWhitespace(string, string)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotNullOrWhitespace(string, string)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Argument.IsNotNullOrWhitespace(string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'Argument.IsNotNullOrWhitespace(string, string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOfOneOfTheTypes(System.String,System.Object,System.Type[])">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOfOneOfTheTypes(string, object, Type[])'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOfOneOfTheTypes(System.String,System.Type,System.Type[])">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOfOneOfTheTypes(string, Type, Type[])'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsNotOfOneOfTheTypes(string, Type, Type[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOfOneOfTheTypes`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Type[])">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotOfOneOfTheTypes&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, Type[])'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOfType(System.String,System.Object,System.Type)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOfType(string, object, Type)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOfType(System.String,System.Type,System.Type)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOfType(string, Type, Type)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsNotOfType(string, Type, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOfType`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Type)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotOfType&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, Type)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOutOfRange(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Int32&gt;&gt;,System.Int32,System.Int32)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotOutOfRange(Expression&lt;Func&lt;int&gt;&gt;, int, int)'</Item>
               <Item>'Expression&lt;Func&lt;int&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOutOfRange(System.String,System.Int32,System.Int32,System.Int32)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOutOfRange(string, int, int, int)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOutOfRange(string, int, int, int)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOutOfRange`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,!!0,!!0)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, T, T)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOutOfRange`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,!!0,!!0,System.Func`4&lt;!!0,!!0,!!0,System.Boolean&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, T, T, Func&lt;T, T, T, bool&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOutOfRange`1(System.String,!!0,!!0,!!0)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(string, T, T, T)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(string, T, T, T)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNotOutOfRange`1(System.String,!!0,!!0,!!0,System.Func`4&lt;!!0,!!0,!!0,System.Boolean&gt;)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(string, T, T, T, Func&lt;T, T, T, bool&gt;)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(string, T, T, T, Func&lt;T, T, T, bool&gt;)'</Item>
               <Item>param</Item>
               <Item>'paramValue'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'Argument.IsNotOutOfRange&lt;T&gt;(string, T, T, T, Func&lt;T, T, T, bool&gt;)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsOfOneOfTheTypes(System.String,System.Object,System.Type[])">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsOfOneOfTheTypes(string, object, Type[])'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsOfOneOfTheTypes(System.String,System.Type,System.Type[])">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsOfOneOfTheTypes(string, Type, Type[])'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsOfOneOfTheTypes`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Type[])">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsOfOneOfTheTypes&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, Type[])'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsOfType(System.String,System.Object,System.Type)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsOfType(string, object, Type)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsOfType(System.String,System.Type,System.Type)">
            <Messages>
             <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'Argument.IsOfType(string, Type, Type)'</Item>
               <Item>param</Item>
               <Item>'paramName'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Argument.IsOfType(string, Type, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsOfType`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Type)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Argument.IsOfType&lt;T&gt;(Expression&lt;Func&lt;T&gt;&gt;, Type)'</Item>
               <Item>'Expression&lt;Func&lt;T&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsSupported(System.Boolean,System.String,System.Object[])">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'isSupported'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'Argument.IsSupported(bool, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CoverageExcludeAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'CoverageExcludeAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="DynamicEventListener">
          <Members>
           <Member Name="#Instances">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DynamicEventListener.Instances'</Item>
               <Item>'DynamicEventListener.HandlerDictionary'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnEvent()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'DynamicEventListener.OnEvent()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToEvent()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'DynamicEventListener.SubscribeToEvent()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DynamicEventListener+HandlerDictionary">
          <Messages>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'DynamicEventListener.HandlerDictionary'</Item>
            </Issue>
           </Message>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'DynamicEventListener.HandlerDictionary'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="Enum`1">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'Enum&lt;TEnum&gt;'</Item>
             <Item>Enum</Item>
            </Issue>
           </Message>
           <Message Id="Enum" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>'Enum&lt;TEnum&gt;'</Item>
             <Item>Enum</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#ConvertFromOtherEnumValue(System.Object)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.ConvertFromOtherEnumValue(object)'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetName(System.Int32)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.GetName(int)'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetName(System.Int64)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.GetName(long)'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetNames()">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.GetNames()'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetValues()">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.GetValues()'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;TEnum&gt;'</Item>
               <Item>'Enum&lt;TEnum&gt;.GetValues()'</Item>
              </Issue>
             </Message>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'Enum&lt;TEnum&gt;.GetValues()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToList()">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.ToList()'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;TEnum&gt;'</Item>
               <Item>'Enum&lt;TEnum&gt;.ToList()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryParse(System.String,!0&amp;)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.TryParse(string, out TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryParse(System.String,System.Nullable`1&lt;!0&gt;&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.TryParse(string, out TEnum?)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.TryParse(string, out TEnum?)'</Item>
               <Item>'Enum&lt;TEnum&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Enum`1+DataBinding">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'Enum&lt;TEnum&gt;.DataBinding'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CreateList(Catel.Enum`1&lt;!0&gt;+DataBinding+FormatEnumName)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.DataBinding.CreateList(Enum&lt;TEnum&gt;.DataBinding.FormatEnumName)'</Item>
               <Item>'Enum&lt;TEnum&gt;.DataBinding'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.DataBinding.CreateList(Enum&lt;TEnum&gt;.DataBinding.FormatEnumName)'</Item>
               <Item>'IList&lt;IBindableEnum&lt;TEnum&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Enum`1+DataBinding+FormatEnumName">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'Enum&lt;TEnum&gt;.DataBinding.FormatEnumName'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="Enum`1+Flags">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
            </Issue>
           </Message>
           <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>Flags</Item>
             <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#ClearFlag(!0,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(TEnum, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(TEnum, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(TEnum, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToClear'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(TEnum, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ClearFlag(System.Int32,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToClear'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ClearFlag(System.Int32,System.Int32)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, int)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, int)'</Item>
               <Item>flag</Item>
               <Item>'flagToClear'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(int, int)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ClearFlag(System.Int64,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToClear'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ClearFlag(System.Int64,System.Int64)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, long)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, long)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, long)'</Item>
               <Item>flag</Item>
               <Item>'flagToClear'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.ClearFlag(long, long)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsFlagSet(!0,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(TEnum, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(TEnum, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(TEnum, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToFind'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(TEnum, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsFlagSet(System.Int32,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToFind'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsFlagSet(System.Int32,System.Int32)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, int)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, int)'</Item>
               <Item>flag</Item>
               <Item>'flagToFind'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(int, int)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsFlagSet(System.Int64,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToFind'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsFlagSet(System.Int64,System.Int64)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, long)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, long)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, long)'</Item>
               <Item>flag</Item>
               <Item>'flagToFind'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.IsFlagSet(long, long)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetFlag(!0,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(TEnum, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(TEnum, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(TEnum, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToSet'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(TEnum, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetFlag(System.Int32,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToSet'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetFlag(System.Int32,System.Int32)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, int)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, int)'</Item>
               <Item>flag</Item>
               <Item>'flagToSet'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(int, int)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetFlag(System.Int64,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToSet'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetFlag(System.Int64,System.Int64)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, long)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, long)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, long)'</Item>
               <Item>flag</Item>
               <Item>'flagToSet'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SetFlag(long, long)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SwapFlag(!0,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(TEnum, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(TEnum, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(TEnum, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToSwap'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(TEnum, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SwapFlag(System.Int32,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToSwap'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SwapFlag(System.Int32,System.Int32)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, int)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, int)'</Item>
               <Item>flag</Item>
               <Item>'flagToSwap'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(int, int)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SwapFlag(System.Int64,!0)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, TEnum)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, TEnum)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, TEnum)'</Item>
               <Item>flag</Item>
               <Item>'flagToSwap'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, TEnum)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SwapFlag(System.Int64,System.Int64)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, long)'</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags'</Item>
              </Issue>
             </Message>
             <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flag</Item>
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, long)'</Item>
              </Issue>
             </Message>
             <Message Id="flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, long)'</Item>
               <Item>flag</Item>
               <Item>'flagToSwap'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'Enum&lt;TEnum&gt;.Flags.SwapFlag(long, long)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="EnvironmentHelper">
          <Members>
           <Member Name="#IsProcessCurrentlyHostedByExpressionBlend()">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'EnvironmentHelper.IsProcessCurrentlyHostedByExpressionBlend()'</Item>
               <Item>'Process.GetCurrentProcess()'</Item>
               <Item>&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByExpressionBlend()'&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByExpressionBlend()'</Item>
              </Issue>
              <Issue>
               <Item>'EnvironmentHelper.IsProcessCurrentlyHostedByExpressionBlend()'</Item>
               <Item>'Process.ProcessName.get()'</Item>
               <Item>&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByExpressionBlend()'&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByExpressionBlend()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsProcessCurrentlyHostedByVisualStudio()">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'EnvironmentHelper.IsProcessCurrentlyHostedByVisualStudio()'</Item>
               <Item>'Process.GetCurrentProcess()'</Item>
               <Item>&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByVisualStudio()'&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByVisualStudio()'</Item>
              </Issue>
              <Issue>
               <Item>'EnvironmentHelper.IsProcessCurrentlyHostedByVisualStudio()'</Item>
               <Item>'Process.ProcessName.get()'</Item>
               <Item>&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByVisualStudio()'&#xD;&#xA;   -&gt;'EnvironmentHelper.IsProcessCurrentlyHostedByVisualStudio()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExpressionHelper">
          <Members>
           <Member Name="#GetOwner`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyExpression'</Item>
               <Item>'ExpressionHelper.GetOwner&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExpressionHelper.GetOwner&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyName`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyExpression'</Item>
               <Item>'ExpressionHelper.GetPropertyName&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExpressionHelper.GetPropertyName&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IBindableEnum`1">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'IBindableEnum&lt;TEnum&gt;'</Item>
             <Item>Enum</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="NotSupportedInSilverlightException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInSilverlightException'</Item>
             <Item>protected NotSupportedInSilverlightException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInSilverlightException'</Item>
             <Item>public NotSupportedInSilverlightException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInSilverlightException'</Item>
             <Item>public NotSupportedInSilverlightException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInSilverlightException'</Item>
             <Item>public NotSupportedInSilverlightException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'NotSupportedInSilverlightException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'NotSupportedInSilverlightException.NotSupportedInSilverlightException(string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NotSupportedInWindowsPhone7Exception">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindowsPhone7Exception'</Item>
             <Item>protected NotSupportedInWindowsPhone7Exception(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindowsPhone7Exception'</Item>
             <Item>public NotSupportedInWindowsPhone7Exception()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindowsPhone7Exception'</Item>
             <Item>public NotSupportedInWindowsPhone7Exception(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindowsPhone7Exception'</Item>
             <Item>public NotSupportedInWindowsPhone7Exception(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'NotSupportedInWindowsPhone7Exception'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'NotSupportedInWindowsPhone7Exception.NotSupportedInWindowsPhone7Exception(string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NotSupportedInWindows8Exception">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindows8Exception'</Item>
             <Item>protected NotSupportedInWindows8Exception(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindows8Exception'</Item>
             <Item>public NotSupportedInWindows8Exception()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindows8Exception'</Item>
             <Item>public NotSupportedInWindows8Exception(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'NotSupportedInWindows8Exception'</Item>
             <Item>public NotSupportedInWindows8Exception(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'NotSupportedInWindows8Exception'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'NotSupportedInWindows8Exception.NotSupportedInWindows8Exception(string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ObjectHelper">
          <Members>
           <Member Name="#AreEqual(System.Object,System.Object)">
            <Messages>
             <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ObjectHelper.AreEqual(object, object)'</Item>
               <Item>object</Item>
               <Item>'object1'</Item>
              </Issue>
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ObjectHelper.AreEqual(object, object)'</Item>
               <Item>object</Item>
               <Item>'object2'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AreEqualReferences(System.Object,System.Object)">
            <Messages>
             <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ObjectHelper.AreEqualReferences(object, object)'</Item>
               <Item>object</Item>
               <Item>'object1'</Item>
              </Issue>
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ObjectHelper.AreEqualReferences(object, object)'</Item>
               <Item>object</Item>
               <Item>'object2'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNull(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ObjectHelper.IsNull(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ResourceHelper">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ResourceHelper'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetResourceManager(System.Reflection.Assembly,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ResourceHelper.GetResourceManager(Assembly, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StringToObjectHelper">
          <Members>
           <Member Name="#CleanString(System.String)">
            <Messages>
             <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.EndsWith(string)'</Item>
               <Item>'StringToObjectHelper.CleanString(string)'</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'StringToObjectHelper.CleanString(string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToBool(System.String)">
            <Messages>
             <Message Id="bool" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageSpecificMember">
               <Item>Bool</Item>
               <Item>'StringToObjectHelper.ToBool(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToDateTime(System.String)">
            <Messages>
             <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'DateTime.Parse(string)'</Item>
               <Item>'StringToObjectHelper.ToDateTime(string)'</Item>
               <Item>'DateTime.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToFloat(System.String)">
            <Messages>
             <Message Id="float" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageSpecificMember">
               <Item>Float</Item>
               <Item>'StringToObjectHelper.ToFloat(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToInt(System.String)">
            <Messages>
             <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageSpecificMember">
               <Item>Int</Item>
               <Item>'StringToObjectHelper.ToInt(string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'StringToObjectHelper.ToInt(string)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToLong(System.String)">
            <Messages>
             <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageSpecificMember">
               <Item>Long</Item>
               <Item>'StringToObjectHelper.ToLong(string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int64.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'long.Parse(string)'</Item>
               <Item>'StringToObjectHelper.ToLong(string)'</Item>
               <Item>'long.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToRightType(System.Type,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'StringToObjectHelper.ToRightType(Type, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UniqueIdentifierHelper">
          <Members>
           <Member Name="#GetUniqueIdentifier`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UniqueIdentifierHelper.GetUniqueIdentifier&lt;T&gt;()'</Item>
               <Item>'T'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WeakAction`1">
          <Members>
           <Member Name="#Catel.IExecuteWithObject.ExecuteWithObject(System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakAction&lt;TParameter&gt;'</Item>
               <Item>'IExecuteWithObject.ExecuteWithObject(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WeakAction`1+OpenInstanceGenericAction`1">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'WeakAction&lt;TParameter&gt;.OpenInstanceGenericAction&lt;TTarget&gt;'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="WeakAction+OpenInstanceAction`1">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'WeakAction.OpenInstanceAction&lt;TTarget&gt;'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="WeakActionBase">
          <Members>
           <Member Name="#Log">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakActionBase.Log'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WeakEventListener`2">
          <Members>
           <Member Name="#SubscribeToWeakCollectionChangedEvent(!0,!1,System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.String)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;.SubscribeToWeakCollectionChangedEvent(TTarget, TSource, NotifyCollectionChangedEventHandler, string)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakEvent(!0,!1,System.String,System.Delegate)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;.SubscribeToWeakEvent(TTarget, TSource, string, Delegate)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;.SubscribeToWeakEvent(TTarget, TSource, string, Delegate)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakGenericEvent`1(!0,!1,System.String,System.EventHandler`1&lt;!!0&gt;)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;.SubscribeToWeakGenericEvent&lt;TEventArgs&gt;(TTarget, TSource, string, EventHandler&lt;TEventArgs&gt;)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakPropertyChangedEvent(!0,!1,System.ComponentModel.PropertyChangedEventHandler,System.String)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;.SubscribeToWeakPropertyChangedEvent(TTarget, TSource, PropertyChangedEventHandler, string)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WeakEventListener`3">
          <Messages>
           <Message TypeName="AvoidExcessiveParametersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1005" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#SubscribeToEvent(System.Object,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.SubscribeToEvent(object, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakCollectionChangedEvent(!0,!1,System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.String)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.SubscribeToWeakCollectionChangedEvent(TTarget, TSource, NotifyCollectionChangedEventHandler, string)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakEvent(!0,!1,System.String,System.Delegate)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.SubscribeToWeakEvent(TTarget, TSource, string, Delegate)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakGenericEvent(!0,!1,System.String,System.EventHandler`1&lt;!2&gt;)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.SubscribeToWeakGenericEvent(TTarget, TSource, string, EventHandler&lt;TEventArgs&gt;)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SubscribeToWeakPropertyChangedEvent(!0,!1,System.ComponentModel.PropertyChangedEventHandler,System.String)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.SubscribeToWeakPropertyChangedEvent(TTarget, TSource, PropertyChangedEventHandler, string)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UnsubscribeFromEvent(System.Object,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.UnsubscribeFromEvent(object, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.UnsubscribeFromEvent(object, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WeakEventListener`3+OpenInstanceHandler">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'WeakEventListener&lt;TTarget, TSource, TEventArgs&gt;.OpenInstanceHandler'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Caching">
        <Types>
         <Type Name="CacheStorage`2">
          <Messages>
           <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
            <Issue Name="DependsOnFix">
             <Item>'CacheStorage&lt;TKey, TValue&gt;'</Item>
             <Item>'Timer'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#_timer">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CacheStorage&lt;TKey, TValue&gt;._timer'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ICacheStorage`2">
          <Members>
           <Member Name="#Add(!0,!1,Catel.Caching.Policies.ExpirationPolicy,System.Boolean)">
            <Messages>
             <Message Id="override" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ICacheStorage&lt;TKey, TValue&gt;.Add(TKey, TValue, ExpirationPolicy, bool)'</Item>
               <Item>'override'</Item>
               <Item>override</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Add(!0,!1,System.Boolean,System.TimeSpan)">
            <Messages>
             <Message Id="override" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ICacheStorage&lt;TKey, TValue&gt;.Add(TKey, TValue, bool, TimeSpan)'</Item>
               <Item>'override'</Item>
               <Item>override</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Get(!0)">
            <Messages>
             <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'ICacheStorage&lt;TKey, TValue&gt;.Get(TKey)'</Item>
               <Item>Get</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFromCacheOrFetch(!0,System.Func`1&lt;!1&gt;,Catel.Caching.Policies.ExpirationPolicy,System.Boolean)">
            <Messages>
             <Message Id="override" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ICacheStorage&lt;TKey, TValue&gt;.GetFromCacheOrFetch(TKey, Func&lt;TValue&gt;, ExpirationPolicy, bool)'</Item>
               <Item>'override'</Item>
               <Item>override</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFromCacheOrFetch(!0,System.Func`1&lt;!1&gt;,System.Boolean,System.TimeSpan)">
            <Messages>
             <Message Id="override" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ICacheStorage&lt;TKey, TValue&gt;.GetFromCacheOrFetch(TKey, Func&lt;TValue&gt;, bool, TimeSpan)'</Item>
               <Item>'override'</Item>
               <Item>override</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Collections">
        <Types>
         <Type Name="CollectionExtensions">
          <Members>
           <Member Name="#MoveItemDownByIndex(System.Collections.IList,System.Int32)">
            <Messages>
             <Message Id="index+1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>index+1</Item>
               <Item>'CollectionExtensions.MoveItemDownByIndex(this IList, int)'</Item>
              </Issue>
             </Message>
             <Message Id="index-1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>index-1</Item>
               <Item>'CollectionExtensions.MoveItemDownByIndex(this IList, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MoveItemUpByIndex(System.Collections.IList,System.Int32)">
            <Messages>
             <Message Id="index-1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>index-1</Item>
               <Item>'CollectionExtensions.MoveItemUpByIndex(this IList, int)'</Item>
              </Issue>
              <Issue>
               <Item>index-1</Item>
               <Item>'CollectionExtensions.MoveItemUpByIndex(this IList, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Data">
        <Types>
         <Type Name="AllowNonSerializableMembersAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'AllowNonSerializableMembersAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="BusinessRuleValidationResult">
          <Members>
           <Member Name="#.ctor(Catel.Data.ValidationResultType,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'BusinessRuleValidationResult.BusinessRuleValidationResult(ValidationResultType, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateError(System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'BusinessRuleValidationResult.CreateError(string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateWarning(System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'BusinessRuleValidationResult.CreateWarning(string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="EditableObjectHelper">
          <Members>
           <Member Name="#BeginEditObject(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'EditableObjectHelper.BeginEditObject(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CancelEditObject(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'EditableObjectHelper.CancelEditObject(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#EndEditObject(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'EditableObjectHelper.EndEditObject(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FieldValidationResult">
          <Members>
           <Member Name="#.ctor(Catel.Data.PropertyData,Catel.Data.ValidationResultType,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'FieldValidationResult.FieldValidationResult(PropertyData, ValidationResultType, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor(System.String,Catel.Data.ValidationResultType,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'FieldValidationResult.FieldValidationResult(string, ValidationResultType, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateError(Catel.Data.PropertyData,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'FieldValidationResult.CreateError(PropertyData, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateError(System.String,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'FieldValidationResult.CreateError(string, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateWarning(Catel.Data.PropertyData,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'FieldValidationResult.CreateWarning(PropertyData, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateWarning(System.String,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'FieldValidationResult.CreateWarning(string, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IAdvancedNotifyPropertyChanged">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'IAdvancedNotifyPropertyChanged'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IAdvancedNotifyPropertyChanging">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'IAdvancedNotifyPropertyChanging'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IBusinessRuleValidationResult">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'IBusinessRuleValidationResult'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IModel">
          <Members>
           <Member Name="#GetDefaultValue(Catel.Data.PropertyData)">
            <Messages>
             <Message Id="Property" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'IModel.GetDefaultValue(PropertyData)'</Item>
               <Item>'property'</Item>
               <Item>Property</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDefaultValue`1(Catel.Data.PropertyData)">
            <Messages>
             <Message Id="Property" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'IModel.GetDefaultValue&lt;TValue&gt;(PropertyData)'</Item>
               <Item>'property'</Item>
               <Item>Property</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyType(Catel.Data.PropertyData)">
            <Messages>
             <Message Id="Property" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'IModel.GetPropertyType(PropertyData)'</Item>
               <Item>'property'</Item>
               <Item>Property</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="InvalidPropertyException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyException'</Item>
             <Item>protected InvalidPropertyException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyException'</Item>
             <Item>public InvalidPropertyException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyException'</Item>
             <Item>public InvalidPropertyException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'InvalidPropertyException'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="InvalidPropertyValueException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyValueException'</Item>
             <Item>protected InvalidPropertyValueException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyValueException'</Item>
             <Item>public InvalidPropertyValueException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyValueException'</Item>
             <Item>public InvalidPropertyValueException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidPropertyValueException'</Item>
             <Item>public InvalidPropertyValueException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'InvalidPropertyValueException'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ISavableModel">
          <Members>
           <Member Name="#Bytes">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ISavableModel.Bytes'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IValidationContext">
          <Members>
           <Member Name="#GetBusinessRuleErrors()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetBusinessRuleErrors()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleErrors(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetBusinessRuleErrors(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleValidations()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetBusinessRuleValidations()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleValidations(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetBusinessRuleValidations(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleWarnings()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetBusinessRuleWarnings()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleWarnings(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetBusinessRuleWarnings(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetErrors()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetErrors()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetErrors(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetErrors(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldErrors()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldErrors(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors(System.String)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldErrors(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldErrors(string, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldValidations()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldValidations(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations(System.String)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldValidations(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldValidations(string, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldWarnings()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldWarnings(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings(System.String)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldWarnings(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetFieldWarnings(string, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetValidations()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetValidations()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetValidations(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetValidations(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWarnings()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetWarnings()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWarnings(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'IValidationContext.GetWarnings(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IValidator">
          <Members>
           <Member Name="#AfterValidateBusinessRules(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidator.AfterValidateBusinessRules(object, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidateFields(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidator.AfterValidateFields(object, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidation(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidator.AfterValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidator.AfterValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidateBusinessRules(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidator.BeforeValidateBusinessRules(object, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidateFields(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidator.BeforeValidateFields(object, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidation(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidator.BeforeValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidator.BeforeValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateBusinessRules(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'IValidator.ValidateBusinessRules(object, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateFields(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'IValidator.ValidateFields(object, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IValidatorProvider">
          <Members>
           <Member Name="#GetValidator`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IValidatorProvider.GetValidator&lt;TTargetType&gt;()'</Item>
               <Item>'TTargetType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ModelBase">
          <Messages>
           <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ModelBase'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.Initialize(&#xD;&#xA;ModelBase.GetDataFromSerializationInfoInternal(SerializationInfo):Void&#xD;&#xA;ModelBase.FinishDeserialization():Void&#xD;&#xA;ModelBase.set_IsDirty(Boolean):Void&#xD;&#xA;Model&#xD;&#xA;ModelBase.OnInitialized():Void</Item>
              </Issue>
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.Initialize(&#xD;&#xA;ModelBase.GetDataFromSerializationInfoInternal(SerializationInfo):Void&#xD;&#xA;ModelBase.FinishDeserialization():Void&#xD;&#xA;ModelBase.set_IsDirty(Boolean):Void&#xD;&#xA;ModelBase.SetValue(PropertyData, Object):Void&#xD;&#xA;ModelBase.SetValue(PropertyData, Object, Boolean, Boolean):Void&#xD;&#xA;Obser&#xD;&#xA;ModelBase.OnDeserialized():Void</Item>
              </Issue>
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.Initialize(&#xD;&#xA;ModelBase.GetDataFromSerializationInfoInternal(SerializationInfo):Void&#xD;&#xA;ModelBase.FinishDeserialization():Void&#xD;&#xA;ModelBase.set_IsDirty(Boolean):Void&#xD;&#xA;ModelBase.SetValue(PropertyData, Object):Void&#xD;&#xA;ModelBase.SetValue(PropertyData, Object, Boolean, Boolean):Void&#xD;&#xA;ObservableObject.RaisePropertyChanging(Object, AdvancedPropertyChangingEventArgs):Void</Item>
              </Issue>
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.Initialize(&#xD;&#xA;ModelBase.GetDataFromSerializationInfoInternal(SerializationInfo):Void&#xD;&#xA;ModelBase.GetDataFromSerializationInfo(SerializationInfo):Void</Item>
              </Issue>
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.Initialize(&#xD;&#xA;ModelBase.GetDataFromSerializationInfoInternal(SerializationInfo):Void&#xD;&#xA;ModelBase.GetPropertyValueForDeserialization(PropertyData, Object):Object</Item>
              </Issue>
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.Initialize():Void&#xD;&#xA;ModelBase.InitializeP&#xD;&#xA;ModelBase.InitializeCustomProperties():Void</Item>
              </Issue>
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ModelBase..ctor(SerializationInfo, StreamingContext)&#xD;&#xA;ModelBase.OnInitializing():Void</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.ModelBase(SerializationInfo, StreamingContext)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.GetDefaultValue(Catel.Data.PropertyData)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IModel.GetDefaultValue(PropertyData)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.GetDefaultValue(System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IModel.GetDefaultValue(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.GetDefaultValue`1(Catel.Data.PropertyData)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IModel.GetDefaultValue&lt;TValue&gt;(PropertyData)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.GetDefaultValue`1(System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IModel.GetDefaultValue&lt;TValue&gt;(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.GetPropertyType(Catel.Data.PropertyData)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IModel.GetPropertyType(PropertyData)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.GetPropertyType(System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IModel.GetPropertyType(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.Data.IModel.IsHidingValidationResults">
            <Accessors>
             <Accessor Name="#Catel.Data.IModel.get_IsHidingValidationResults()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IModel.IsHidingValidationResults.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.Data.IModel.KeyName">
            <Accessors>
             <Accessor Name="#Catel.Data.IModel.get_KeyName()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IModel.KeyName.get()'</Item>
                </Issue>
               </Message>
               <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="IFormatProviderAlternateString">
                 <Item>'int.ToString()'</Item>
                 <Item>'ModelBase.IModel.KeyName.get()'</Item>
                 <Item>'int.ToString(IFormatProvider)'</Item>
                 <Item>'CultureInfo.CurrentCulture'</Item>
                 <Item>'CultureInfo.InvariantCulture'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.Data.IParent.Parent">
            <Accessors>
             <Accessor Name="#Catel.Data.IParent.get_Parent()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IParent.Parent.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Clone(System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.Clone(bool)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDataFromSerializationInfoInternal(System.Runtime.Serialization.SerializationInfo)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.GetDataFromSerializationInfoInternal(SerializationInfo)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetObjectFromXmlAttribute(System.Xml.XmlReader,Catel.Data.PropertyData)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.GetObjectFromXmlAttribute(XmlReader, PropertyData)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.GetObjectFromXmlAttribute(XmlReader, PropertyData)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetObjectFromXmlElement(System.Xml.XmlReader,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.GetObjectFromXmlElement(XmlReader, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyValueForDeserialization(Catel.Data.PropertyData,System.Object)">
            <Messages>
             <Message Id="Property" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ModelBase.GetPropertyValueForDeserialization(PropertyData, object)'</Item>
               <Item>'property'</Item>
               <Item>Property</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyValueForSerialization(Catel.Data.PropertyData,System.Object)">
            <Messages>
             <Message Id="Property" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ModelBase.GetPropertyValueForSerialization(PropertyData, object)'</Item>
               <Item>'property'</Item>
               <Item>Property</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsDirtyProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.IsDirtyProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsPropertyRegistered`1(System.String)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.IsPropertyRegistered&lt;T&gt;(string)'</Item>
               <Item>'T'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsReadOnlyProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.IsReadOnlyProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load`1(System.Byte[],System.Boolean)">
            <Messages>
             <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ModelBase.Load&lt;T&gt;(byte[], bool)'</Item>
               <Item>bytes</Item>
               <Item>'bytes'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load`1(System.IO.Stream,Catel.Data.SerializationMode,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.Load&lt;T&gt;(Stream, SerializationMode, bool)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnDeserialization(System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.OnDeserialization(object)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'e'</Item>
               <Item>'AdvancedPropertyChangedEventArgs'</Item>
               <Item>'ModelBase.RaisePropertyChanged(object, PropertyChangedEventArgs, bool, bool)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadValueFromXmlNode(System.Xml.XmlReader,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ModelBase.ReadValueFromXmlNode(XmlReader, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterProperty`2(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,!!1,System.Action`2&lt;!!0,Catel.Data.AdvancedPropertyChangedEventArgs&gt;,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyExpression'</Item>
               <Item>'ModelBase.RegisterProperty&lt;TModel, TValue&gt;(Expression&lt;Func&lt;TModel, TValue&gt;&gt;, TValue, Action&lt;TModel, AdvancedPropertyChangedEventArgs&gt;, bool, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.RegisterProperty&lt;TModel, TValue&gt;(Expression&lt;Func&lt;TModel, TValue&gt;&gt;, TValue, Action&lt;TModel, AdvancedPropertyChangedEventArgs&gt;, bool, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterProperty`2(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.Func`1&lt;!!1&gt;,System.Action`2&lt;!!0,Catel.Data.AdvancedPropertyChangedEventArgs&gt;,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyExpression'</Item>
               <Item>'ModelBase.RegisterProperty&lt;TModel, TValue&gt;(Expression&lt;Func&lt;TModel, TValue&gt;&gt;, Func&lt;TValue&gt;, Action&lt;TModel, AdvancedPropertyChangedEventArgs&gt;, bool, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.RegisterProperty&lt;TModel, TValue&gt;(Expression&lt;Func&lt;TModel, TValue&gt;&gt;, Func&lt;TValue&gt;, Action&lt;TModel, AdvancedPropertyChangedEventArgs&gt;, bool, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetBusinessRuleValidationResult(Catel.Data.IBusinessRuleValidationResult)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ModelBase.SetBusinessRuleValidationResult(IBusinessRuleValidationResult)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetFieldValidationResult(Catel.Data.IFieldValidationResult)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ModelBase.SetFieldValidationResult(IFieldValidationResult)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.IDataErrorInfo.Error">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IDataErrorInfo.get_Error()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IDataErrorInfo.Error.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.ComponentModel.IDataErrorInfo.Item[System.String]">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IDataErrorInfo.get_Item(System.String)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IDataErrorInfo.this.get(string)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.ComponentModel.IDataWarningInfo.Item[System.String]">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IDataWarningInfo.get_Item(System.String)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IDataWarningInfo.this.get(string)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.ComponentModel.IDataWarningInfo.Warning">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IDataWarningInfo.get_Warning()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IDataWarningInfo.Warning.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.ComponentModel.IEditableObject.BeginEdit()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IEditableObject.BeginEdit()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.IEditableObject.CancelEdit()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IEditableObject.CancelEdit()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.IEditableObject.EndEdit()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IEditableObject.EndEdit()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'INotifyDataErrorInfo.GetErrors(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.INotifyDataWarningInfo.GetWarnings(System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'INotifyDataWarningInfo.GetWarnings(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Xml.Serialization.IXmlSerializable.GetSchema()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IXmlSerializable.GetSchema()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IXmlSerializable.ReadXml(XmlReader)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase'</Item>
               <Item>'IXmlSerializable.WriteXml(XmlWriter)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Validate(System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateBusinessRules(System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ModelBase.ValidateBusinessRules(List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateFields(System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ModelBase.ValidateFields(List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidatePropertyUsingAnnotations(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.ValidatePropertyUsingAnnotations(string, object)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.IAdvancedEditableObject.BeginEditing" Kind="Event">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IAdvancedEditableObject.add_BeginEditing(System.EventHandler`1&lt;System.ComponentModel.BeginEditEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IAdvancedEditableObject.BeginEditing.add(EventHandler&lt;BeginEditEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#System.ComponentModel.IAdvancedEditableObject.remove_BeginEditing(System.EventHandler`1&lt;System.ComponentModel.BeginEditEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IAdvancedEditableObject.BeginEditing.remove(EventHandler&lt;BeginEditEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.ComponentModel.IAdvancedEditableObject.CancelEditing" Kind="Event">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IAdvancedEditableObject.add_CancelEditing(System.EventHandler`1&lt;System.ComponentModel.CancelEditEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IAdvancedEditableObject.CancelEditing.add(EventHandler&lt;CancelEditEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#System.ComponentModel.IAdvancedEditableObject.remove_CancelEditing(System.EventHandler`1&lt;System.ComponentModel.CancelEditEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IAdvancedEditableObject.CancelEditing.remove(EventHandler&lt;CancelEditEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#System.ComponentModel.IAdvancedEditableObject.EndEditing" Kind="Event">
            <Accessors>
             <Accessor Name="#System.ComponentModel.IAdvancedEditableObject.add_EndEditing(System.EventHandler`1&lt;System.ComponentModel.EndEditEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IAdvancedEditableObject.EndEditing.add(EventHandler&lt;EndEditEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#System.ComponentModel.IAdvancedEditableObject.remove_EndEditing(System.EventHandler`1&lt;System.ComponentModel.EndEditEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ModelBase'</Item>
                 <Item>'IAdvancedEditableObject.EndEditing.remove(EventHandler&lt;EndEditEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="ModelBase+BackupData">
          <Members>
           <Member Name="#RestoreBackup()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModelBase.BackupData.RestoreBackup()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ObservableObject">
          <Members>
           <Member Name="#RaisePropertyChanged(System.Object,Catel.Data.AdvancedPropertyChangedEventArgs)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(object, AdvancedPropertyChangedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.Object,System.String)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(object, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.Object,System.String,System.Object)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(object, string, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.Object,System.String,System.Object,System.Object)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(object, string, object, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.String)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.String,System.Object)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(string, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.String,System.Object,System.Object)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged(string, object, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Object)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;, object)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Object,System.Object)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;, object, object)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanged&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;, object, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanging(System.Object,Catel.Data.AdvancedPropertyChangingEventArgs)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanging(object, AdvancedPropertyChangingEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanging(System.Object,System.String)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanging(object, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanging(System.String)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanging(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanging`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanging&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TProperty&gt;&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ObservableObject.RaisePropertyChanging&lt;TProperty&gt;(Expression&lt;Func&lt;TProperty&gt;&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyAlreadyRegisteredException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'PropertyAlreadyRegisteredException'</Item>
             <Item>protected PropertyAlreadyRegisteredException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyAlreadyRegisteredException'</Item>
             <Item>public PropertyAlreadyRegisteredException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyAlreadyRegisteredException'</Item>
             <Item>public PropertyAlreadyRegisteredException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyAlreadyRegisteredException'</Item>
             <Item>public PropertyAlreadyRegisteredException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'PropertyAlreadyRegisteredException'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="PropertyData">
          <Members>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="BaseType">
               <Item>'PropertyData.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyDataManager">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyDataManager'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindFields(System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'PropertyDataManager.FindFields(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'PropertyDataManager.FindFields(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindProperties(System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'PropertyDataManager.FindProperties(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'PropertyDataManager.FindProperties(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyNotNullableException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotNullableException'</Item>
             <Item>protected PropertyNotNullableException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotNullableException'</Item>
             <Item>public PropertyNotNullableException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotNullableException'</Item>
             <Item>public PropertyNotNullableException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotNullableException'</Item>
             <Item>public PropertyNotNullableException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'PropertyNotNullableException'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="PropertyNotRegisteredException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotRegisteredException'</Item>
             <Item>protected PropertyNotRegisteredException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotRegisteredException'</Item>
             <Item>public PropertyNotRegisteredException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotRegisteredException'</Item>
             <Item>public PropertyNotRegisteredException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotRegisteredException'</Item>
             <Item>public PropertyNotRegisteredException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'PropertyNotRegisteredException'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="SavableModelBase`1">
          <Members>
           <Member Name="#Load(System.Byte[],System.Boolean)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SavableModelBase&lt;T&gt;.Load(byte[], bool)'</Item>
               <Item>'SavableModelBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
             <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'SavableModelBase&lt;T&gt;.Load(byte[], bool)'</Item>
               <Item>bytes</Item>
               <Item>'bytes'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load(System.IO.Stream,Catel.Data.SerializationMode,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SavableModelBase&lt;T&gt;.Load(Stream, SerializationMode, bool)'</Item>
               <Item>'SavableModelBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load(System.IO.Stream,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SavableModelBase&lt;T&gt;.Load(Stream, bool)'</Item>
               <Item>'SavableModelBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load(System.String,Catel.Data.SerializationMode,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SavableModelBase&lt;T&gt;.Load(string, SerializationMode, bool)'</Item>
               <Item>'SavableModelBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load(System.String,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SavableModelBase&lt;T&gt;.Load(string, bool)'</Item>
               <Item>'SavableModelBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Load(System.Xml.Linq.XDocument)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SavableModelBase&lt;T&gt;.Load(XDocument)'</Item>
               <Item>'SavableModelBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidationContext">
          <Members>
           <Member Name="#GetBusinessRuleErrors()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetBusinessRuleErrors()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleErrors(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetBusinessRuleErrors(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleValidations()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetBusinessRuleValidations()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleValidations(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetBusinessRuleValidations(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleWarnings()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetBusinessRuleWarnings()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBusinessRuleWarnings(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetBusinessRuleWarnings(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetErrors()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetErrors()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetErrors(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetErrors(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldErrors()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldErrors(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors(System.String)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldErrors(string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContext.GetFieldErrors(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldErrors(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldErrors(string, object)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContext.GetFieldErrors(string, object)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldValidations()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldValidations(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations(System.String)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldValidations(string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContext.GetFieldValidations(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldValidations(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldValidations(string, object)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContext.GetFieldValidations(string, object)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldWarnings()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldWarnings(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings(System.String)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldWarnings(string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContext.GetFieldWarnings(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldWarnings(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetFieldWarnings(string, object)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContext.GetFieldWarnings(string, object)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetValidations()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetValidations()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetValidations(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetValidations(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWarnings()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetWarnings()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWarnings(System.Object)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IValidationResult&gt;'</Item>
               <Item>'ValidationContext.GetWarnings(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidationContextHelper">
          <Members>
           <Member Name="#GetChanges(Catel.Data.IValidationContext,Catel.Data.IValidationContext)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;ValidationContextChange&gt;'</Item>
               <Item>'ValidationContextHelper.GetChanges(IValidationContext, IValidationContext)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContextHelper.GetChanges(IValidationContext, IValidationContext)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContextHelper.GetChanges(IValidationContext, IValidationContext)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContextHelper.GetChanges(IValidationContext, IValidationContext)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'ValidationContextHelper.GetChanges(IValidationContext, IValidationContext)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidationExtensions">
          <Members>
           <Member Name="#SynchronizeWithContext(Catel.Data.ValidationContext,Catel.Data.IValidationContext,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;ValidationContextChange&gt;'</Item>
               <Item>'ValidationExtensions.SynchronizeWithContext(this ValidationContext, IValidationContext, bool)'</Item>
              </Issue>
             </Message>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidatorBase`1">
          <Members>
           <Member Name="#AfterValidateBusinessRules(!0,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidateBusinessRules(TTargetType, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidateBusinessRules(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidateBusinessRules(object, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidateFields(!0,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidateFields(TTargetType, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidateFields(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidateFields(object, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidation(!0,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidation(TTargetType, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidation(TTargetType, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AfterValidation(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.AfterValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidateBusinessRules(!0,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidateBusinessRules(TTargetType, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidateBusinessRules(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidateBusinessRules(object, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidateFields(!0,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidateFields(TTargetType, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidateFields(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidateFields(object, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidation(!0,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidation(TTargetType, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidation(TTargetType, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BeforeValidation(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.BeforeValidation(object, List&lt;IFieldValidationResult&gt;, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Log">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ValidatorBase&lt;TTargetType&gt;.Log'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateBusinessRules(!0,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.ValidateBusinessRules(TTargetType, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateBusinessRules(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IBusinessRuleValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IBusinessRuleValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.ValidateBusinessRules(object, List&lt;IBusinessRuleValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateFields(!0,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.ValidateFields(TTargetType, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ValidateFields(System.Object,System.Collections.Generic.List`1&lt;Catel.Data.IFieldValidationResult&gt;)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;IFieldValidationResult&gt;'</Item>
               <Item>'ValidatorBase&lt;TTargetType&gt;.ValidateFields(object, List&lt;IFieldValidationResult&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidatorProviderBase">
          <Members>
           <Member Name="#Catel.Data.IValidatorProvider.GetValidator`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ValidatorProviderBase.IValidatorProvider.GetValidator&lt;TTargetType&gt;()'</Item>
               <Item>'TTargetType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.ExceptionHandling">
        <Types>
         <Type Name="ExceptionService">
          <Members>
           <Member Name="#Register`1(System.Action`1&lt;System.Exception&gt;)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExceptionService.Register&lt;TException&gt;(Action&lt;Exception&gt;)'</Item>
               <Item>'TException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Unregister`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExceptionService.Unregister&lt;TException&gt;()'</Item>
               <Item>'TException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IExceptionService">
          <Members>
           <Member Name="#Register`1(System.Action`1&lt;System.Exception&gt;)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IExceptionService.Register&lt;TException&gt;(Action&lt;Exception&gt;)'</Item>
               <Item>'TException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Unregister`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IExceptionService.Unregister&lt;TException&gt;()'</Item>
               <Item>'TException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Generics">
        <Types>
         <Type Name="Operator">
          <Messages>
           <Message Id="Operator" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>'Operator'</Item>
             <Item>Operator</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#AddIfNotNull`1(!!0&amp;,!!0)">
            <Messages>
             <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Level="CriticalWarning">
               <Item>'accumulator'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Operator`1">
          <Messages>
           <Message Id="Operator" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>'Operator&lt;T&gt;'</Item>
             <Item>Operator</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Add">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Add'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#And">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.And'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Divide">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Divide'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Equal">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Equal'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GreaterThan">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.GreaterThan'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GreaterThanOrEqual">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.GreaterThanOrEqual'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LessThan">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.LessThan'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LessThanOrEqual">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.LessThanOrEqual'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Multiply">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Multiply'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Negate">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Negate'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Not">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Not'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#NotEqual">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.NotEqual'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Or">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Or'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Subtract">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Subtract'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Xor">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Xor'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Zero">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;T&gt;.Zero'</Item>
               <Item>'Operator&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Operator`2">
          <Messages>
           <Message Id="Operator" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>'Operator&lt;TValue, TResult&gt;'</Item>
             <Item>Operator</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;TValue, TResult&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Add">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;TValue, TResult&gt;.Add'</Item>
               <Item>'Operator&lt;TValue, TResult&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Convert">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;TValue, TResult&gt;.Convert'</Item>
               <Item>'Operator&lt;TValue, TResult&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Divide">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;TValue, TResult&gt;.Divide'</Item>
               <Item>'Operator&lt;TValue, TResult&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Multiply">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;TValue, TResult&gt;.Multiply'</Item>
               <Item>'Operator&lt;TValue, TResult&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Subtract">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Operator&lt;TValue, TResult&gt;.Subtract'</Item>
               <Item>'Operator&lt;TValue, TResult&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.IO">
        <Types>
         <Type Name="Path">
          <Members>
           <Member Name="#GetFileName(System.String)">
            <Messages>
             <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.LastIndexOf(string)'</Item>
               <Item>'Path.GetFileName(string)'</Item>
               <Item>'string.LastIndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetParentDirectory(System.String)">
            <Messages>
             <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.LastIndexOf(string)'</Item>
               <Item>'Path.GetParentDirectory(string)'</Item>
               <Item>'string.LastIndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetRelativePath(System.String,System.String)">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.LastIndexOf(string)'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.LastIndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.LastIndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.LastIndexOf(string, int)'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.LastIndexOf(string, int, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Path.GetRelativePath(string, string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.IoC">
        <Types>
         <Type Name="DependencyInjectionHelper">
          <Members>
           <Member Name="#TryCreateWithConstructorInjection(System.Type,System.Reflection.ConstructorInfo,Catel.IoC.IServiceLocator)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DependencyInjectionHelper.TryCreateWithConstructorInjection(Type, ConstructorInfo, IServiceLocator)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'DependencyInjectionHelper.TryCreateWithConstructorInjection(Type, ConstructorInfo, IServiceLocator)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExternalContainerHelperBase">
          <Members>
           <Member Name="#GetContainerType(System.String,System.Object)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ExternalContainerHelperBase.GetContainerType(string, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExternalContainerNotSupportedException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'ExternalContainerNotSupportedException'</Item>
             <Item>protected ExternalContainerNotSupportedException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ExternalContainerNotSupportedException'</Item>
             <Item>public ExternalContainerNotSupportedException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ExternalContainerNotSupportedException'</Item>
             <Item>public ExternalContainerNotSupportedException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ExternalContainerNotSupportedException'</Item>
             <Item>public ExternalContainerNotSupportedException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'ExternalContainerNotSupportedException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#SupportedContainers">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExternalContainerNotSupportedException.SupportedContainers'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IoCConfigurationSection">
          <Messages>
           <Message Id="Io" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Io</Item>
             <Item>'IoCConfigurationSection'</Item>
             <Item>IO</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IServiceLocator">
          <Members>
           <Member Name="#IsTypeRegistered`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IServiceLocator.IsTypeRegistered&lt;TService&gt;()'</Item>
               <Item>'TService'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsTypeRegisteredAsSingleton`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IServiceLocator.IsTypeRegisteredAsSingleton&lt;TService&gt;()'</Item>
               <Item>'TService'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterType`2(Catel.IoC.RegistrationType,System.Boolean)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IServiceLocator.RegisterType&lt;TService, TServiceImplementation&gt;(RegistrationType, bool)'</Item>
               <Item>'TService'</Item>
              </Issue>
              <Issue>
               <Item>'IServiceLocator.RegisterType&lt;TService, TServiceImplementation&gt;(RegistrationType, bool)'</Item>
               <Item>'TServiceImplementation'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterTypeIfNotYetRegistered`2(Catel.IoC.RegistrationType)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IServiceLocator.RegisterTypeIfNotYetRegistered&lt;TService, TServiceImplementation&gt;(RegistrationType)'</Item>
               <Item>'TService'</Item>
              </Issue>
              <Issue>
               <Item>'IServiceLocator.RegisterTypeIfNotYetRegistered&lt;TService, TServiceImplementation&gt;(RegistrationType)'</Item>
               <Item>'TServiceImplementation'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MefHelper">
          <Members>
           <Member Name="#GetExportsFromKey(System.Object,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'MefHelper.GetExportsFromKey(object, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ResolveType(System.Object,System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'MefHelper.ResolveType(object, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NinjectHelper">
          <Members>
           <Member Name="#ResolveType(System.Object,System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'NinjectHelper.ResolveType(object, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ServiceLocator">
          <Members>
           <Member Name="#IsTypeRegistered`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ServiceLocator.IsTypeRegistered&lt;TService&gt;()'</Item>
               <Item>'TService'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsTypeRegisteredAsSingleton`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ServiceLocator.IsTypeRegisteredAsSingleton&lt;TService&gt;()'</Item>
               <Item>'TService'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterType`2(Catel.IoC.RegistrationType,System.Boolean)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ServiceLocator.RegisterType&lt;TService, TServiceImplementation&gt;(RegistrationType, bool)'</Item>
               <Item>'TService'</Item>
              </Issue>
              <Issue>
               <Item>'ServiceLocator.RegisterType&lt;TService, TServiceImplementation&gt;(RegistrationType, bool)'</Item>
               <Item>'TServiceImplementation'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterTypeIfNotYetRegistered`2(Catel.IoC.RegistrationType)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ServiceLocator.RegisterTypeIfNotYetRegistered&lt;TService, TServiceImplementation&gt;(RegistrationType)'</Item>
               <Item>'TService'</Item>
              </Issue>
              <Issue>
               <Item>'ServiceLocator.RegisterTypeIfNotYetRegistered&lt;TService, TServiceImplementation&gt;(RegistrationType)'</Item>
               <Item>'TServiceImplementation'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ResolveType(System.Type,System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ServiceLocator.ResolveType(Type, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ResolveTypeFromKnownContainer(System.Type,System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ServiceLocator.ResolveTypeFromKnownContainer(Type, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.IServiceProvider.GetService(System.Type)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ServiceLocator'</Item>
               <Item>'IServiceProvider.GetService(Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ServiceLocator+RegisteredTypeInfo">
          <Members>
           <Member Name="#DeclaringTypeName">
            <Accessors>
             <Accessor Name="#get_DeclaringTypeName()">
              <Messages>
               <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ServiceLocator.RegisteredTypeInfo.DeclaringTypeName.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#ImplementingTypeName">
            <Accessors>
             <Accessor Name="#get_ImplementingTypeName()">
              <Messages>
               <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ServiceLocator.RegisteredTypeInfo.ImplementingTypeName.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Tag">
            <Accessors>
             <Accessor Name="#get_Tag()">
              <Messages>
               <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ServiceLocator.RegisteredTypeInfo.Tag.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="ServiceLocatorAutoRegistrationManager">
          <Members>
           <Member Name="#.ctor(Catel.IoC.IServiceLocator)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ServiceLocatorAutoRegistrationManager.ServiceLocatorAutoRegistrationManager(IServiceLocator)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InspectLoadedAssemblies()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ServiceLocatorAutoRegistrationManager.InspectLoadedAssemblies()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ServiceLocatorConfiguration">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ServiceLocatorConfiguration'</Item>
             <Item>ICollection</Item>
            </Issue>
           </Message>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ServiceLocatorConfiguration'</Item>
             <Item>Collection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ServiceLocatorConfigurationCollection">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ServiceLocatorConfigurationCollection'</Item>
             <Item>ICollection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ServiceLocatorRegistrationAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ServiceLocatorRegistrationAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="TypeFactory">
          <Members>
           <Member Name="#CreateInstanceUsingActivator(System.Type)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeFactory.CreateInstanceUsingActivator(Type)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryCreateWithConstructorInjection(System.Type,System.Reflection.ConstructorInfo)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeFactory.TryCreateWithConstructorInjection(Type, ConstructorInfo)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryCreateWithConstructorInjectionWithParameters(System.Type,System.Reflection.ConstructorInfo,System.Object[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'TypeFactory.TryCreateWithConstructorInjectionWithParameters(Type, ConstructorInfo, object[])'</Item>
              </Issue>
             </Message>
             <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeFactory.TryCreateWithConstructorInjectionWithParameters(Type, ConstructorInfo, object[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UnityHelper">
          <Members>
           <Member Name="#ResolveType(System.Object,System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UnityHelper.ResolveType(object, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WindsorHelper">
          <Members>
           <Member Name="#ResolveType(System.Object,System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'WindsorHelper.ResolveType(object, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Linq">
        <Types>
         <Type Name="ExpressionUtil">
          <Messages>
           <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Util</Item>
             <Item>'ExpressionUtil'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#CreateExpression`2(System.Func`2&lt;System.Linq.Expressions.Expression,System.Linq.Expressions.UnaryExpression&gt;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExpressionUtil.CreateExpression&lt;TArg1, TResult&gt;(Func&lt;Expression, UnaryExpression&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateExpression`3(System.Func`3&lt;System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.BinaryExpression&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExpressionUtil.CreateExpression&lt;TArg1, TArg2, TResult&gt;(Func&lt;Expression, Expression, BinaryExpression&gt;, bool)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Logging">
        <Types>
         <Type Name="DebugLogListener">
          <Members>
           <Member Name="#Write(Catel.Logging.ILog,System.String,Catel.Logging.LogEvent,System.Object)">
            <Messages>
             <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.ToUpper()'</Item>
               <Item>'DebugLogListener.Write(ILog, string, LogEvent, object)'</Item>
               <Item>'string.ToUpper(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'DateTime.ToString(string)'</Item>
               <Item>'DebugLogListener.Write(ILog, string, LogEvent, object)'</Item>
               <Item>'DateTime.ToString(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'DebugLogListener.Write(ILog, string, LogEvent, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ILogListener">
          <Members>
           <Member Name="#Error(Catel.Logging.ILog,System.String,System.Object)">
            <Messages>
             <Message Id="Error" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'ILogListener.Error(ILog, string, object)'</Item>
               <Item>Error</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Log">
          <Members>
           <Member Name="#FormatException(System.Exception,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Log.FormatException(Exception, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Log.FormatException(Exception, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsCatelType(System.Type)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Log.IsCatelType(Type)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Log.IsCatelType(Type)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Log.IsCatelType(Type)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#WriteMessage(System.String,System.Object,Catel.Logging.LogEvent)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'Log.WriteMessage(string, object, LogEvent)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LogEvent">
          <Messages>
           <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'LogEvent'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="LogExtensions">
          <Members>
           <Member Name="#ErrorAndThrowException`1(Catel.Logging.ILog,System.String,System.Object[])">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LogExtensions.ErrorAndThrowException&lt;TException&gt;(this ILog, string, params object[])'</Item>
               <Item>'TException'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'LogExtensions.ErrorAndThrowException&lt;TException&gt;(this ILog, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'LogExtensions.ErrorAndThrowException&lt;TException&gt;(this ILog, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Write(Catel.Logging.ILog,Catel.Logging.LogEvent,System.Exception,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'LogExtensions.Write(this ILog, LogEvent, Exception, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Write(Catel.Logging.ILog,Catel.Logging.LogEvent,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'LogExtensions.Write(this ILog, LogEvent, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LogListenerBase">
          <Members>
           <Member Name="#Error(Catel.Logging.ILog,System.String,System.Object)">
            <Messages>
             <Message Id="Error" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'LogListenerBase.Error(ILog, string, object)'</Item>
               <Item>Error</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LogManager">
          <Members>
           <Member Name="#GetCurrentClassLogger()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'LogManager.GetCurrentClassLogger()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetListeners()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LogManager.GetListeners()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnLogMessage(System.Object,Catel.Logging.LogMessageEventArgs)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LogManager+LogInfo">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'LogManager.LogInfo'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Memento">
        <Types>
         <Type Name="MementoService">
          <Members>
           <Member Name="#Add(Catel.Memento.IMementoSupport,System.Boolean)">
            <Messages>
             <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MementoService.Add(IMementoSupport, bool)'</Item>
               <Item>'noInsertIfInUndoOperation'</Item>
               <Item>'noInsertIfExecutingOperation'</Item>
               <Item>'IMementoService.Add(IMementoSupport, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ObjectObserver">
          <Members>
           <Member Name="#ShouldPropertyBeIgnored(System.Object,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'ObjectObserver.ShouldPropertyBeIgnored(object, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Messaging">
        <Types>
         <Type Name="MessageBase`2">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MessageBase&lt;TMessage, TData&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Register(System.Object,System.Action`1&lt;!0&gt;,System.Object)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MessageBase&lt;TMessage, TData&gt;.Register(object, Action&lt;TMessage&gt;, object)'</Item>
               <Item>'MessageBase&lt;TMessage, TData&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SendWith(!1,System.Object)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MessageBase&lt;TMessage, TData&gt;.SendWith(TData, object)'</Item>
               <Item>'MessageBase&lt;TMessage, TData&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Unregister(System.Object,System.Action`1&lt;!0&gt;,System.Object)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MessageBase&lt;TMessage, TData&gt;.Unregister(object, Action&lt;TMessage&gt;, object)'</Item>
               <Item>'MessageBase&lt;TMessage, TData&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#With(!1)">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MessageBase&lt;TMessage, TData&gt;.With(TData)'</Item>
               <Item>'MessageBase&lt;TMessage, TData&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MessageMediator">
          <Members>
           <Member Name="#AreEqualHandlers`1(System.Action`1&lt;!!0&gt;,Catel.IWeakAction`1&lt;!!0&gt;)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'MessageMediator.AreEqualHandlers&lt;TMessage&gt;(Action&lt;TMessage&gt;, IWeakAction&lt;TMessage&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MessageMediatorHelper">
          <Members>
           <Member Name="#SubscribeRecipient(System.Object,Catel.Messaging.IMessageMediator)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'MessageMediatorHelper.SubscribeRecipient(object, IMessageMediator)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Reflection">
        <Types>
         <Type Name="AppDomainExtensions">
          <Members>
           <Member Name="#PreloadAssemblies(System.AppDomain,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'AppDomainExtensions.PreloadAssemblies(this AppDomain, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="AssemblyExtensions">
          <Members>
           <Member Name="#Version(System.Reflection.Assembly,System.Int32)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'AssemblyExtensions.Version(this Assembly, int)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="AssemblyHelper">
          <Members>
           <Member Name="#GetLoadedAssemblies()">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;Assembly&gt;'</Item>
               <Item>'AssemblyHelper.GetLoadedAssemblies()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetLoadedAssemblies(System.AppDomain)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;Assembly&gt;'</Item>
               <Item>'AssemblyHelper.GetLoadedAssemblies(AppDomain)'</Item>
              </Issue>
             </Message>
             <Message Id="appDomain" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'appDomain'</Item>
               <Item>'AssemblyHelper.GetLoadedAssemblies(AppDomain)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="AttributeHelper">
          <Members>
           <Member Name="#IsDecoratedWithAttribute`1(System.Reflection.MemberInfo)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'AttributeHelper.IsDecoratedWithAttribute&lt;TAttribute&gt;(MemberInfo)'</Item>
               <Item>'TAttribute'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsDecoratedWithAttribute`1(System.Type)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'AttributeHelper.IsDecoratedWithAttribute&lt;TAttribute&gt;(Type)'</Item>
               <Item>'TAttribute'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BindingFlagsHelper">
          <Messages>
           <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>Flags</Item>
             <Item>'BindingFlagsHelper'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#DefaultBindingFlags">
            <Messages>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flags</Item>
               <Item>'BindingFlagsHelper.DefaultBindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFinalBindingFlags(System.Boolean,System.Boolean,System.Nullable`1&lt;System.Boolean&gt;)">
            <Messages>
             <Message Id="NonPublic" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterShouldBeDiscreteTerm">
               <Item>'BindingFlagsHelper.GetFinalBindingFlags(bool, bool, bool?)'</Item>
               <Item>NonPublic</Item>
               <Item>'allowNonPublicMembers'</Item>
               <Item>Nonpublic</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNoAlternate">
               <Item>Flags</Item>
               <Item>'BindingFlagsHelper.GetFinalBindingFlags(bool, bool, bool?)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CannotGetPropertyValueException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'CannotGetPropertyValueException'</Item>
             <Item>protected CannotGetPropertyValueException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'CannotGetPropertyValueException'</Item>
             <Item>public CannotGetPropertyValueException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'CannotGetPropertyValueException'</Item>
             <Item>public CannotGetPropertyValueException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'CannotGetPropertyValueException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'CannotGetPropertyValueException.CannotGetPropertyValueException(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CannotSetPropertyValueException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'CannotSetPropertyValueException'</Item>
             <Item>protected CannotSetPropertyValueException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'CannotSetPropertyValueException'</Item>
             <Item>public CannotSetPropertyValueException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'CannotSetPropertyValueException'</Item>
             <Item>public CannotSetPropertyValueException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'CannotSetPropertyValueException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'CannotSetPropertyValueException.CannotSetPropertyValueException(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DelegateExtensions">
          <Members>
           <Member Name="#GetMethodInfoEx(System.Delegate)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'DelegateExtensions.GetMethodInfoEx(this Delegate)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MemberInfoExtensions">
          <Members>
           <Member Name="#GetSignature(System.Reflection.ConstructorInfo)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'constructorInfo'</Item>
               <Item>'MemberInfoExtensions.GetSignature(this ConstructorInfo)'</Item>
               <Item>'ConstructorInfo'</Item>
               <Item>'MethodBase'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'MemberInfoExtensions.GetSignature(this ConstructorInfo)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetSignature(System.Reflection.MethodInfo)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'MemberInfoExtensions.GetSignature(this MethodInfo)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyHelper">
          <Members>
           <Member Name="#GetHiddenPropertyValue`1(System.Object,System.String,System.Type)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.GetHiddenPropertyValue&lt;TValue&gt;(object, string, Type)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyName(System.Linq.Expressions.Expression,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'propertyExpression'</Item>
               <Item>'UnaryExpression'</Item>
               <Item>'PropertyHelper.GetPropertyName(Expression, bool, bool)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyName`1(System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyExpression'</Item>
               <Item>'PropertyHelper.GetPropertyName&lt;TValue&gt;(Expression&lt;Func&lt;TValue&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TValue&gt;&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyHelper.GetPropertyName&lt;TValue&gt;(Expression&lt;Func&lt;TValue&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TValue&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyName`2(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyExpression'</Item>
               <Item>'PropertyHelper.GetPropertyName&lt;TModel, TValue&gt;(Expression&lt;Func&lt;TModel, TValue&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyHelper.GetPropertyName&lt;TModel, TValue&gt;(Expression&lt;Func&lt;TModel, TValue&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyValue(System.Object,System.String)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.GetPropertyValue(object, string)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyValue`1(System.Object,System.String)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.GetPropertyValue&lt;TValue&gt;(object, string)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsPropertyAvailable(System.Object,System.String)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.IsPropertyAvailable(object, string)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsPublicProperty(System.Object,System.String)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.IsPublicProperty(object, string)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetPropertyValue(System.Object,System.String,System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.SetPropertyValue(object, string, object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryGetPropertyValue(System.Object,System.String,System.Object&amp;)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.TryGetPropertyValue(object, string, out object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
             <Message TypeName="UseGenericsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1007" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyHelper.TryGetPropertyValue(object, string, out object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TryGetPropertyValue`1(System.Object,System.String,!!0&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyHelper.TryGetPropertyValue&lt;TValue&gt;(object, string, out TValue)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.TryGetPropertyValue&lt;TValue&gt;(object, string, out TValue)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TrySetPropertyValue(System.Object,System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyHelper.TrySetPropertyValue(object, string, object)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'PropertyHelper.TrySetPropertyValue(object, string, object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyNotFoundException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundException'</Item>
             <Item>protected PropertyNotFoundException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundException'</Item>
             <Item>public PropertyNotFoundException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundException'</Item>
             <Item>public PropertyNotFoundException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'PropertyNotFoundException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'PropertyNotFoundException.PropertyNotFoundException(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ReflectionExtensions">
          <Members>
           <Member Name="#GetAssemblyEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetAssemblyEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetAssemblyFullNameEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetAssemblyFullNameEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBaseTypeEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetBaseTypeEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConstructorEx(System.Type,System.Type[])">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetConstructorEx(this Type, Type[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConstructorsEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetConstructorsEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributeEx(System.Reflection.Assembly,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributeEx(this Assembly, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributeEx(System.Reflection.MethodInfo,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributeEx(this MethodInfo, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributeEx(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributeEx(this PropertyInfo, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributeEx(System.Type,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributeEx(this Type, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributesEx(System.Reflection.Assembly,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this Assembly, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributesEx(System.Reflection.MethodInfo,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'methodInfo'</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this MethodInfo, Type, bool)'</Item>
               <Item>'MethodInfo'</Item>
               <Item>'MemberInfo'</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this MethodInfo, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributesEx(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'propertyInfo'</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this PropertyInfo, Type, bool)'</Item>
               <Item>'PropertyInfo'</Item>
               <Item>'MemberInfo'</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this PropertyInfo, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCustomAttributesEx(System.Type,System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'type'</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this Type, Type, bool)'</Item>
               <Item>'Type'</Item>
               <Item>'MemberInfo'</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetCustomAttributesEx(this Type, Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetEventEx(System.Type,System.String,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetEventEx(this Type, string, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetEventEx(System.Type,System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetEventEx(this Type, string, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetEventEx(this Type, string, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetEventsEx(System.Type,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetEventsEx(this Type, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldEx(System.Type,System.String,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetFieldEx(this Type, string, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldEx(System.Type,System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetFieldEx(this Type, string, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetFieldEx(this Type, string, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldsEx(System.Type,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetFieldsEx(this Type, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFieldsEx(System.Type,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetFieldsEx(this Type, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetFieldsEx(this Type, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetGenericArgumentsEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetGenericArgumentsEx(this Type)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ReflectionExtensions.GetGenericArgumentsEx(this Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetGenericTypeDefinitionEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetGenericTypeDefinitionEx(this Type)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ReflectionExtensions.GetGenericTypeDefinitionEx(this Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetInterfacesEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetInterfacesEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodCached(System.Type,System.String)">
            <Messages>
             <Message Id="methodName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'methodName'</Item>
               <Item>'ReflectionExtensions.GetMethodCached(this Type, string)'</Item>
              </Issue>
             </Message>
             <Message Id="type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'type'</Item>
               <Item>'ReflectionExtensions.GetMethodCached(this Type, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodEx(System.Type,System.String,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetMethodEx(this Type, string, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodEx(System.Type,System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetMethodEx(this Type, string, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetMethodEx(this Type, string, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodEx(System.Type,System.String,System.Type[],System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetMethodEx(this Type, string, Type[], bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodEx(System.Type,System.String,System.Type[],System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetMethodEx(this Type, string, Type[], BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetMethodEx(this Type, string, Type[], BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodsEx(System.Type,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetMethodsEx(this Type, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethodsEx(System.Type,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetMethodsEx(this Type, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetMethodsEx(this Type, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertiesEx(System.Type,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetPropertiesEx(this Type, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertiesEx(System.Type,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetPropertiesEx(this Type, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetPropertiesEx(this Type, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyCached(System.Type,System.String)">
            <Messages>
             <Message Id="propertyName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'propertyName'</Item>
               <Item>'ReflectionExtensions.GetPropertyCached(this Type, string)'</Item>
              </Issue>
             </Message>
             <Message Id="type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'type'</Item>
               <Item>'ReflectionExtensions.GetPropertyCached(this Type, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyEx(System.Type,System.String,System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetPropertyEx(this Type, string, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertyEx(System.Type,System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetPropertyEx(this Type, string, BindingFlags)'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'ReflectionExtensions.GetPropertyEx(this Type, string, BindingFlags)'</Item>
               <Item>Flags</Item>
               <Item>'bindingFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypesEx(System.Reflection.Assembly)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.GetTypesEx(this Assembly)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#HasBaseTypeEx(System.Type,System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.HasBaseTypeEx(this Type, Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementsInterfaceEx(System.Type,System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.ImplementsInterfaceEx(this Type, Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsAbstractEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsAbstractEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsAssignableFromEx(System.Type,System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsAssignableFromEx(this Type, Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsCOMObjectEx(System.Type)">
            <Messages>
             <Message Id="COM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>COM</Item>
               <Item>'ReflectionExtensions.IsCOMObjectEx(this Type)'</Item>
               <Item>Com</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsCOMObjectEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsEnumEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsEnumEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsGenericTypeEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsGenericTypeEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsInstanceOfTypeEx(System.Type,System.Object)">
            <Messages>
             <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ReflectionExtensions.IsInstanceOfTypeEx(this Type, object)'</Item>
               <Item>object</Item>
               <Item>'objectToCheck'</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsInstanceOfTypeEx(this Type, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsInterfaceEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsInterfaceEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNestedPublicEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsNestedPublicEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsPublicEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsPublicEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsSerializableEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsSerializableEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsValueTypeEx(System.Type)">
            <Messages>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'ReflectionExtensions.IsValueTypeEx(this Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StaticHelper">
          <Members>
           <Member Name="#GetCallingType()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'StaticHelper.GetCallingType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeCache">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeCache'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetType(System.String,System.String,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeCache.GetType(string, string, bool)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="ToUpperInvariant">
               <Item>'TypeCache.GetType(string, string, bool)'</Item>
               <Item>'string.ToLowerInvariant()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypes(System.Func`2&lt;System.Type,System.Boolean&gt;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeCache.GetTypes(Func&lt;Type, bool&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeTypes(System.Boolean,System.Reflection.Assembly)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeCache.InitializeTypes(bool, Assembly)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="ToUpperInvariant">
               <Item>'TypeCache.InitializeTypes(bool, Assembly)'</Item>
               <Item>'string.ToLowerInvariant()'</Item>
              </Issue>
              <Issue Name="ToUpperInvariant">
               <Item>'TypeCache.InitializeTypes(bool, Assembly)'</Item>
               <Item>'string.ToLowerInvariant()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeTypes(System.Boolean,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeCache.InitializeTypes(bool, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeHelper">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeHelper'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Cast`1(System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'TypeHelper.Cast&lt;TOutput&gt;(object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConvertTypeToVersionIndependentType(System.String)">
            <Messages>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'TypeHelper.ConvertTypeToVersionIndependentType(string)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetInnerTypes(System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeHelper.GetInnerTypes(string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'TypeHelper.GetInnerTypes(string)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetType(System.String,System.Boolean)">
            <Messages>
             <Message Id="ignoreCase" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ignoreCase'</Item>
               <Item>'TypeHelper.GetType(string, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="typeNameWithAssembly" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'typeNameWithAssembly'</Item>
               <Item>'TypeHelper.GetType(string, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypedInstance`1(System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'TypeHelper.GetTypedInstance&lt;TTargetType&gt;(object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypes(System.Func`2&lt;System.Type,System.Boolean&gt;)">
            <Messages>
             <Message Id="predicate" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'predicate'</Item>
               <Item>'TypeHelper.GetTypes(Func&lt;Type, bool&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypesOfAssembly(System.Reflection.Assembly)">
            <Messages>
             <Message Id="assembly" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'assembly'</Item>
               <Item>'TypeHelper.GetTypesOfAssembly(Assembly)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeWithAssembly(System.String,System.String,System.Boolean)">
            <Messages>
             <Message Id="assemblyName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'assemblyName'</Item>
               <Item>'TypeHelper.GetTypeWithAssembly(string, string, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="ignoreCase" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ignoreCase'</Item>
               <Item>'TypeHelper.GetTypeWithAssembly(string, string, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="typeName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'typeName'</Item>
               <Item>'TypeHelper.GetTypeWithAssembly(string, string, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeWithoutAssembly(System.String,System.Boolean)">
            <Messages>
             <Message Id="ignoreCase" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ignoreCase'</Item>
               <Item>'TypeHelper.GetTypeWithoutAssembly(string, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="typeNameWithoutAssembly" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'typeNameWithoutAssembly'</Item>
               <Item>'TypeHelper.GetTypeWithoutAssembly(string, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeTypes(System.Boolean,System.Reflection.Assembly)">
            <Messages>
             <Message Id="assembly" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'assembly'</Item>
               <Item>'TypeHelper.InitializeTypes(bool, Assembly)'</Item>
              </Issue>
             </Message>
             <Message Id="forceFullInitialization" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'forceFullInitialization'</Item>
               <Item>'TypeHelper.InitializeTypes(bool, Assembly)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeTypes(System.Boolean,System.String)">
            <Messages>
             <Message Id="assemblyName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'assemblyName'</Item>
               <Item>'TypeHelper.InitializeTypes(bool, string)'</Item>
              </Issue>
             </Message>
             <Message Id="forceFullInitialization" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'forceFullInitialization'</Item>
               <Item>'TypeHelper.InitializeTypes(bool, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeInfo">
          <Members>
           <Member Name="#DeclaredEvents">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeInfo.DeclaredEvents'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DeclaredFields">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeInfo.DeclaredFields'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DeclaredProperties">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeInfo.DeclaredProperties'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Equals(Catel.Reflection.TypeInfo)">
            <Messages>
             <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'TypeInfo.Equals(TypeInfo)'</Item>
               <Item>'o'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Equals(System.Type)">
            <Messages>
             <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'TypeInfo.Equals(Type)'</Item>
               <Item>'o'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, object)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GenericTypeArguments">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeInfo.GenericTypeArguments'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetArrayRank()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'TypeInfo.GetArrayRank()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[])'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConstructors(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetConstructors(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetElementType()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'TypeInfo.GetElementType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetEvent(System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetEvent(string, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetEvents(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetEvents(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetField(System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetField(string, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFields(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetFields(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetGenericTypeDefinition()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'TypeInfo.GetGenericTypeDefinition()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetIDsOfNames(System.Guid&amp;,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <Messages>
             <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'riid'</Item>
              </Issue>
             </Message>
             <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberAbbreviation">
               <Item>IDs</Item>
               <Item>'TypeInfo.GetIDsOfNames(ref Guid, IntPtr, uint, uint, IntPtr)'</Item>
               <Item>Ids</Item>
              </Issue>
             </Message>
             <Message Id="Disp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetIDsOfNames(ref Guid, IntPtr, uint, uint, IntPtr)'</Item>
               <Item>Disp</Item>
               <Item>'rgDispId'</Item>
              </Issue>
             </Message>
             <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetIDsOfNames(ref Guid, IntPtr, uint, uint, IntPtr)'</Item>
               <Item>c</Item>
               <Item>'cNames'</Item>
              </Issue>
             </Message>
             <Message Id="rg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetIDsOfNames(ref Guid, IntPtr, uint, uint, IntPtr)'</Item>
               <Item>rg</Item>
               <Item>'rgDispId'</Item>
              </Issue>
             </Message>
             <Message Id="rgsz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetIDsOfNames(ref Guid, IntPtr, uint, uint, IntPtr)'</Item>
               <Item>rgsz</Item>
               <Item>'rgszNames'</Item>
              </Issue>
             </Message>
             <Message Id="riid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetIDsOfNames(ref Guid, IntPtr, uint, uint, IntPtr)'</Item>
               <Item>riid</Item>
               <Item>'riid'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMember(System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMember(string, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMember(string, MemberTypes, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMembers(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMembers(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethod(System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMethod(string, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMethod(string, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMethod(string, BindingFlags, Binder, Type[], ParameterModifier[])'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethod(System.String,System.Type[],System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMethod(string, Type[], BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetMethods(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetMethods(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetNestedType(System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetNestedType(string, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetNestedTypes(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetNestedTypes(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetProperties(System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetProperties(BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetProperty(System.String,System.Reflection.BindingFlags)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetProperty(string, BindingFlags)'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetProperty(string, BindingFlags, Binder, Type, Type[], ParameterModifier[])'</Item>
               <Item>Attr</Item>
               <Item>'bindingAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <Messages>
             <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.GetTypeInfo(uint, uint, IntPtr)'</Item>
               <Item>i</Item>
               <Item>'iTInfo'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeInfoCount(System.UInt32&amp;)">
            <Messages>
             <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'pcTInfo'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GUID">
            <Messages>
             <Message Id="GUID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>GUID</Item>
               <Item>'TypeInfo.GUID'</Item>
               <Item>Guid</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ImplementedInterfaces">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TypeInfo.ImplementedInterfaces'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Invoke(System.UInt32,System.Guid&amp;,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <Messages>
             <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'riid'</Item>
              </Issue>
             </Message>
             <Message Id="Disp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>Disp</Item>
               <Item>'pDispParams'</Item>
              </Issue>
             </Message>
             <Message Id="Excep" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>Excep</Item>
               <Item>'pExcepInfo'</Item>
              </Issue>
             </Message>
             <Message Id="Params" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>Params</Item>
               <Item>'pDispParams'</Item>
              </Issue>
             </Message>
             <Message Id="disp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>disp</Item>
               <Item>'dispIdMember'</Item>
              </Issue>
             </Message>
             <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>p</Item>
               <Item>'pDispParams'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>p</Item>
               <Item>'pExcepInfo'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>p</Item>
               <Item>'pVarResult'</Item>
              </Issue>
             </Message>
             <Message Id="pu" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>pu</Item>
               <Item>'puArgErr'</Item>
              </Issue>
             </Message>
             <Message Id="riid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>riid</Item>
               <Item>'riid'</Item>
              </Issue>
             </Message>
             <Message Id="w" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>w</Item>
               <Item>'wFlags'</Item>
              </Issue>
             </Message>
             <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'TypeInfo.Invoke(uint, ref Guid, uint, short, IntPtr, IntPtr, IntPtr, IntPtr)'</Item>
               <Item>Flags</Item>
               <Item>'wFlags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.InvokeMember(string, BindingFlags, Binder, object, object[])'</Item>
               <Item>Attr</Item>
               <Item>'invokeAttr'</Item>
              </Issue>
             </Message>
             <Message Id="System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Type.InvokeMember(string, BindingFlags, Binder, object, object[])'</Item>
               <Item>'TypeInfo.InvokeMember(string, BindingFlags, Binder, object, object[])'</Item>
               <Item>'Type.InvokeMember(string, BindingFlags, Binder, object, object[], CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.InvokeMember(string, BindingFlags, Binder, object, object[], CultureInfo)'</Item>
               <Item>Attr</Item>
               <Item>'invokeAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
            <Messages>
             <Message Id="Attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'TypeInfo.InvokeMember(string, BindingFlags, Binder, object, object[], ParameterModifier[], CultureInfo, string[])'</Item>
               <Item>Attr</Item>
               <Item>'invokeAttr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsAssignableFrom(System.Type)">
            <Messages>
             <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'TypeInfo.IsAssignableFrom(Type)'</Item>
               <Item>'c'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsCOMObject">
            <Messages>
             <Message Id="COM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>COM</Item>
               <Item>'TypeInfo.IsCOMObject'</Item>
               <Item>Com</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsContextful">
            <Messages>
             <Message Id="Contextful" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Contextful</Item>
               <Item>'TypeInfo.IsContextful'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsInstanceOfType(System.Object)">
            <Messages>
             <Message Id="o" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'TypeInfo.IsInstanceOfType(object)'</Item>
               <Item>'o'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNestedFamANDAssem">
            <Messages>
             <Message Id="AND" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>AND</Item>
               <Item>'TypeInfo.IsNestedFamANDAssem'</Item>
               <Item>And</Item>
              </Issue>
             </Message>
             <Message Id="Assem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Assem</Item>
               <Item>'TypeInfo.IsNestedFamANDAssem'</Item>
              </Issue>
             </Message>
             <Message Id="Fam" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Fam</Item>
               <Item>'TypeInfo.IsNestedFamANDAssem'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNestedFamORAssem">
            <Messages>
             <Message Id="Assem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Assem</Item>
               <Item>'TypeInfo.IsNestedFamORAssem'</Item>
              </Issue>
             </Message>
             <Message Id="Fam" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Fam</Item>
               <Item>'TypeInfo.IsNestedFamORAssem'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsSubclassOf(System.Type)">
            <Messages>
             <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'TypeInfo.IsSubclassOf(Type)'</Item>
               <Item>'c'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Runtime.Serialization">
        <Types>
         <Type Name="RedirectDeserializationBinder">
          <Members>
           <Member Name="#ConvertTypeToNewType(System.String)">
            <Messages>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'RedirectDeserializationBinder.ConvertTypeToNewType(string)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Initialize()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'RedirectDeserializationBinder.Initialize()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LoadType(System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'RedirectDeserializationBinder.LoadType(string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="RedirectTypeAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'RedirectTypeAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="SerializationHelper">
          <Members>
           <Member Name="#DeserializeXml`1(System.IO.FileStream)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'fileStream'</Item>
               <Item>'SerializationHelper.DeserializeXml&lt;T&gt;(FileStream)'</Item>
               <Item>'FileStream'</Item>
               <Item>'Stream'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SerializationHelper.DeserializeXml&lt;T&gt;(FileStream)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DeserializeXml`1(System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SerializationHelper.DeserializeXml&lt;T&gt;(string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBool(System.Runtime.Serialization.SerializationInfo,System.String,System.Boolean)">
            <Messages>
             <Message Id="bool" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageSpecificMember">
               <Item>Bool</Item>
               <Item>'SerializationHelper.GetBool(SerializationInfo, string, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDataContractSerializer(System.Type,System.Type,System.String,System.Collections.Generic.List`1&lt;System.Type&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;Type&gt;'</Item>
               <Item>'SerializationHelper.GetDataContractSerializer(Type, Type, string, List&lt;Type&gt;, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDataContractSerializer(System.Type,System.Type,System.String,System.Object,System.Boolean)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'SerializationHelper.GetDataContractSerializer(Type, Type, string, object, bool)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDataContractSerializer(System.Type,System.Type,System.String,System.Object,System.Collections.Generic.List`1&lt;System.Type&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;Type&gt;'</Item>
               <Item>'SerializationHelper.GetDataContractSerializer(Type, Type, string, object, List&lt;Type&gt;, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'SerializationHelper.GetDataContractSerializer(Type, Type, string, object, List&lt;Type&gt;, bool)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'SerializationHelper.GetDataContractSerializer(Type, Type, string, object, List&lt;Type&gt;, bool)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetInt(System.Runtime.Serialization.SerializationInfo,System.String,System.Int32)">
            <Messages>
             <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageSpecificMember">
               <Item>Int</Item>
               <Item>'SerializationHelper.GetInt(SerializationInfo, string, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetKnownTypes(System.Type,System.Collections.Generic.HashSet`1&lt;System.Type&gt;,System.Collections.Generic.HashSet`1&lt;System.Type&gt;)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'SerializationHelper.GetKnownTypes(Type, HashSet&lt;Type&gt;, HashSet&lt;Type&gt;)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetKnownTypesForInstance(System.Object,System.Collections.Generic.HashSet`1&lt;System.Type&gt;,System.Collections.Generic.HashSet`1&lt;System.Type&gt;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SerializationHelper.GetKnownTypesForInstance(object, HashSet&lt;Type&gt;, HashSet&lt;Type&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'SerializationHelper.GetKnownTypesForInstance(object, HashSet&lt;Type&gt;, HashSet&lt;Type&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'SerializationHelper.GetKnownTypesForInstance(object, HashSet&lt;Type&gt;, HashSet&lt;Type&gt;)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetXmlSerializer(System.Type,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'SerializationHelper.GetXmlSerializer(Type, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsSpecialCollectionType(System.Type)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'SerializationHelper.IsSpecialCollectionType(Type)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'SerializationHelper.IsSpecialCollectionType(Type)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SerializeXml(System.IO.FileStream,System.Object)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'fileStream'</Item>
               <Item>'SerializationHelper.SerializeXml(FileStream, object)'</Item>
               <Item>'FileStream'</Item>
               <Item>'Stream'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SerializationHelper.SerializeXml(FileStream, object)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'SerializationHelper.SerializeXml(FileStream, object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SerializeXml(System.String,System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SerializationHelper.SerializeXml(string, object)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'SerializationHelper.SerializeXml(string, object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShouldTypeBeHandled(System.Type,System.Collections.Generic.HashSet`1&lt;System.Type&gt;,System.Collections.Generic.HashSet`1&lt;System.Type&gt;)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'SerializationHelper.ShouldTypeBeHandled(Type, HashSet&lt;Type&gt;, HashSet&lt;Type&gt;)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlSchemaHelper">
          <Members>
           <Member Name="#AddTypeToSchemaSet(System.Type,System.Xml.Schema.XmlSchemaSet)">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'XmlSchemaHelper.AddTypeToSchemaSet(Type, XmlSchemaSet)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateSchemaComplexType(System.Type,System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaSet,System.Boolean)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlSchemaHelper.CreateSchemaComplexType(Type, XmlSchema, XmlSchemaSet, bool)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DefaultNs">
            <Messages>
             <Message Id="Ns" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Ns</Item>
               <Item>'XmlSchemaHelper.DefaultNs'</Item>
               <Item>NS</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPropertiesSequence(System.Type,System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaSet)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlSchemaHelper.GetPropertiesSequence(Type, XmlSchema, XmlSchemaSet)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlSchemaHelper.GetPropertiesSequence(Type, XmlSchema, XmlSchemaSet)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeNameForSchema(System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlSchemaHelper.GetTypeNameForSchema(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'XmlSchemaHelper.GetTypeNameForSchema(Type)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeNamespaceForSchema(System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlSchemaHelper.GetTypeNamespaceForSchema(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetXmlSchema(System.Type,System.Xml.Schema.XmlSchemaSet,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'x'</Item>
               <Item>'XmlSchemaComplexType'</Item>
               <Item>'XmlSchemaHelper.GetXmlSchema(Type, XmlSchemaSet, bool)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlSchemaHelper.GetXmlSchema(Type, XmlSchemaSet, bool)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNullable(System.Type,System.Type&amp;)">
            <Messages>
             <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'valueType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Log">
            <Messages>
             <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'XmlSchemaHelper.Log'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlSchemaManager">
          <Messages>
           <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'XmlSchemaManager'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Services">
        <Types>
         <Type Name="ServiceBase">
          <Members>
           <Member Name="#GetService`1(System.Object)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ServiceBase.GetService&lt;TService&gt;(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Test">
        <Types>
         <Type Name="ExceptionTester">
          <Members>
           <Member Name="#CallMethodAndExpectException`1(System.Action,System.Func`2&lt;!!0,System.Boolean&gt;)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'ExceptionTester.CallMethodAndExpectException&lt;TException&gt;(Action, Func&lt;TException, bool&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue Name="TooGeneric">
               <Item>'ExceptionTester.CallMethodAndExpectException&lt;TException&gt;(Action, Func&lt;TException, bool&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue Name="TooGeneric">
               <Item>'ExceptionTester.CallMethodAndExpectException&lt;TException&gt;(Action, Func&lt;TException, bool&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ExceptionTester.CallMethodAndExpectException&lt;TException&gt;(Action, Func&lt;TException, bool&gt;)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ExceptionTester.CallMethodAndExpectException&lt;TException&gt;(Action, Func&lt;TException, bool&gt;)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'ExceptionTester.CallMethodAndExpectException&lt;TException&gt;(Action, Func&lt;TException, bool&gt;)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Text">
        <Types>
         <Type Name="StringBuilderExtensions">
          <Members>
           <Member Name="#AppendLine(System.Text.StringBuilder,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'StringBuilderExtensions.AppendLine(this StringBuilder, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="System.ComponentModel">
        <Types>
         <Type Name="PropertyChangedEventArgsExtensions">
          <Members>
           <Member Name="#HasPropertyChanged`1(System.ComponentModel.PropertyChangedEventArgs,System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;!!0&gt;&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyChangedEventArgsExtensions.HasPropertyChanged&lt;TValue&gt;(this PropertyChangedEventArgs, Expression&lt;Func&lt;TValue&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TValue&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#HasPropertyChanged`2(System.ComponentModel.PropertyChangedEventArgs,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PropertyChangedEventArgsExtensions.HasPropertyChanged&lt;TModel, TValue&gt;(this PropertyChangedEventArgs, Expression&lt;Func&lt;TModel, TValue&gt;&gt;, bool)'</Item>
               <Item>'Expression&lt;Func&lt;TModel, TValue&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.Controls/Catel.Extensions.Controls.dll">
    <Modules>
     <Module Name="catel.extensions.controls.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel.Diagnostics">
        <Types>
         <Type Name="OutputTraceListener">
          <Members>
           <Member Name="#WrittenLine" Kind="Event">
            <Messages>
             <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="First">
               <Item>'OutputTraceListener.WrittenLineDelegate'</Item>
              </Issue>
              <Issue Name="Second">
               <Item>'OutputTraceListener.WrittenLineDelegate'</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'OutputTraceListener.WrittenLineDelegate'</Item>
               <Item>EventHandler</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="OutputTraceListener+WrittenLineDelegate">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'OutputTraceListener.WrittenLineDelegate'</Item>
             <Item>Delegate</Item>
            </Issue>
           </Message>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'OutputTraceListener.WrittenLineDelegate'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="TraceListenerBase">
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceListenerBase.TraceListenerBase(string)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;TraceListenerBase..ctor(String)&#xD;&#xA;TraceListener.set_Name(String):Void</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceListenerBase.TraceListenerBase(string)'</Item>
               <Item>'TraceSource.Listeners.get()'</Item>
               <Item>&#xD;&#xA;   -&gt;'TraceListenerBase.TraceListenerBase(string)'&#xD;&#xA;   -&gt;'TraceListenerBase.TraceListenerBase(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'TraceListenerBase.TraceEvent(TraceEventCache, string, TraceEventType, int, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows">
        <Types>
         <Type Name="EffectsHelper">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'EffectsHelper'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Blur(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="System.Windows.Media.Effects.BlurEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'EffectsHelper.Blur(this FrameworkElement, Action)'</Item>
               <Item>'BlurEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.UIElement.#set_Effect(System.Windows.Media.Effects.Effect)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'EffectsHelper.Blur(this FrameworkElement, Action)'</Item>
               <Item>'UIElement.Effect.set(Effect)'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Dimm(System.Windows.FrameworkElement)">
            <Messages>
             <Message Id="Dimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Dimm</Item>
               <Item>'EffectsHelper.Dimm(this FrameworkElement)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Dimm(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="Dimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Dimm</Item>
               <Item>'EffectsHelper.Dimm(this FrameworkElement, Action)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Unblur(System.Windows.FrameworkElement)">
            <Messages>
             <Message Id="Unblur" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Unblur</Item>
               <Item>'EffectsHelper.Unblur(this FrameworkElement)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Unblur(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="Unblur" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Unblur</Item>
               <Item>'EffectsHelper.Unblur(this FrameworkElement, Action)'</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.UIElement.#set_Effect(System.Windows.Media.Effects.Effect)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'EffectsHelper.Unblur(this FrameworkElement, Action)'</Item>
               <Item>'UIElement.Effect.set(Effect)'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Undimm(System.Windows.FrameworkElement)">
            <Messages>
             <Message Id="Undimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Undimm</Item>
               <Item>'EffectsHelper.Undimm(this FrameworkElement)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Undimm(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="Undimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Undimm</Item>
               <Item>'EffectsHelper.Undimm(this FrameworkElement, Action)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MultiLineInputWindow">
          <Messages>
           <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>MultiLine</Item>
             <Item>'MultiLineInputWindow'</Item>
             <Item>Multiline</Item>
            </Issue>
           </Message>
           <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Multi</Item>
             <Item>'MultiLineInputWindow'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MultiLineInputWindow'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MultipleChoiceWindow">
          <Members>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MultipleChoiceWindow'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StyleHelper">
          <Members>
           <Member Name="#CreateStyleForwardersForDefaultStyles(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary,System.Windows.ResourceDictionary,System.Boolean,System.String)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'string'</Item>
               <Item>'StyleHelper.CreateStyleForwardersForDefaultStyles(ResourceDictionary, ResourceDictionary, ResourceDictionary, bool, string)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'string'</Item>
               <Item>'StyleHelper.CreateStyleForwardersForDefaultStyles(ResourceDictionary, ResourceDictionary, ResourceDictionary, bool, string)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'StyleHelper.CreateStyleForwardersForDefaultStyles(ResourceDictionary, ResourceDictionary, ResourceDictionary, bool, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'StyleHelper.CreateStyleForwardersForDefaultStyles(ResourceDictionary, ResourceDictionary, ResourceDictionary, bool, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.EndsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="StringComparison">
               <Item>'StyleHelper.CreateStyleForwardersForDefaultStyles(ResourceDictionary, ResourceDictionary, ResourceDictionary, bool, string)'</Item>
               <Item>StringComparison.InvariantCulture</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="StringComparison">
               <Item>'StyleHelper.CreateStyleForwardersForDefaultStyles(ResourceDictionary, ResourceDictionary, ResourceDictionary, bool, string)'</Item>
               <Item>StringComparison.InvariantCulture</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#EnsureApplicationResourcesAndCreateStyleForwarders(System.Uri,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'StyleHelper.EnsureApplicationResourcesAndCreateStyleForwarders(Uri, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Application" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="ObjectCreation">
               <Item>'StyleHelper.EnsureApplicationResourcesAndCreateStyleForwarders(Uri, string)'</Item>
               <Item>'Application'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindDefaultStyles(System.Windows.ResourceDictionary,System.String)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'string'</Item>
               <Item>'StyleHelper.FindDefaultStyles(ResourceDictionary, string)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'string'</Item>
               <Item>'StyleHelper.FindDefaultStyles(ResourceDictionary, string)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'StyleHelper.FindDefaultStyles(ResourceDictionary, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.EndsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="StringComparison">
               <Item>'StyleHelper.FindDefaultStyles(ResourceDictionary, string)'</Item>
               <Item>StringComparison.InvariantCulture</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="StringComparison">
               <Item>'StyleHelper.FindDefaultStyles(ResourceDictionary, string)'</Item>
               <Item>StringComparison.InvariantCulture</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindFrameworkElementStyleIsBasedOn(System.Uri,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'StyleHelper.FindFrameworkElementStyleIsBasedOn(Uri, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'StyleHelper.FindFrameworkElementStyleIsBasedOn(Uri, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'StyleHelper.FindFrameworkElementStyleIsBasedOn(Uri, string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FindResourceDictionaryDeclaringType(System.Windows.ResourceDictionary,System.Type)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'Type'</Item>
               <Item>'StyleHelper.FindResourceDictionaryDeclaringType(ResourceDictionary, Type)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#PixelShaderMode">
            <Messages>
             <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'StyleHelper.PixelShaderMode'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RecreateDefaultStylesBasedOnTheme(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary,System.String)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'string'</Item>
               <Item>'StyleHelper.RecreateDefaultStylesBasedOnTheme(ResourceDictionary, ResourceDictionary, string)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'key'</Item>
               <Item>'string'</Item>
               <Item>'StyleHelper.RecreateDefaultStylesBasedOnTheme(ResourceDictionary, ResourceDictionary, string)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.String.EndsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="StringComparison">
               <Item>'StyleHelper.RecreateDefaultStylesBasedOnTheme(ResourceDictionary, ResourceDictionary, string)'</Item>
               <Item>StringComparison.InvariantCulture</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="StringComparison">
               <Item>'StyleHelper.RecreateDefaultStylesBasedOnTheme(ResourceDictionary, ResourceDictionary, string)'</Item>
               <Item>StringComparison.InvariantCulture</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Controls">
        <Types>
         <Type Name="AnimatedGif">
          <Members>
           <Member Name="#DeleteObject(System.IntPtr)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'AnimatedGif.DeleteObject(IntPtr)'</Item>
              </Issue>
             </Message>
             <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'AnimatedGif.DeleteObject(IntPtr)'</Item>
               <Item>8</Item>
               <Item>64-bit</Item>
               <Item>4</Item>
               <Item>'IntPtr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DropDownButton">
          <Members>
           <Member Name="#OnDropDownContentChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <Messages>
             <Message Id="sender" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'sender'</Item>
               <Item>'DropDownButton.OnDropDownContentChanged(DependencyObject, DependencyPropertyChangedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LinkLabel">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LinkLabel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OpenBrowserBehaviorImpl(System.Object,System.Windows.RoutedEventArgs)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LinkLabel.OpenBrowserBehaviorImpl(object, RoutedEventArgs)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LoadTabItemsBehavior">
          <Members>
           <Member Name="#AllOnStartUp">
            <Messages>
             <Message Id="StartUp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>StartUp</Item>
               <Item>'LoadTabItemsBehavior.AllOnStartUp'</Item>
               <Item>Startup</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MultiLineInput">
          <Messages>
           <Message Id="MultiLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>MultiLine</Item>
             <Item>'MultiLineInput'</Item>
             <Item>Multiline</Item>
            </Issue>
           </Message>
           <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Multi</Item>
             <Item>'MultiLineInput'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MultiLineInput'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="RadioButtonEx">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNewerVersion">
             <Item>Ex</Item>
             <Item>'RadioButtonEx'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="RichToolTip">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'RichToolTip'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CloseCommand">
            <Messages>
             <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'RichToolTip.CloseCommand'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TabControl">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TabControl'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateChildContentPresenter(System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'item'</Item>
               <Item>'TabItem'</Item>
               <Item>'TabControl.CreateChildContentPresenter(object)'</Item>
               <Item>isint</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'item'</Item>
               <Item>'TabItem'</Item>
               <Item>'TabControl.CreateChildContentPresenter(object)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Controls.ContentPresenter.#set_ContentStringFormat(System.String)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'TabControl.CreateChildContentPresenter(object)'</Item>
               <Item>'ContentPresenter.ContentStringFormat.set(string)'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Controls.TabControl.#get_SelectedContentStringFormat()" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'TabControl.CreateChildContentPresenter(object)'</Item>
               <Item>'TabControl.SelectedContentStringFormat.get()'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetSelectedTabItem()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'TabControl.GetSelectedTabItem()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TraceOutputControl">
          <Members>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceOutputControl'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TraceOutputViewModel">
          <Messages>
           <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
            <Issue Name="DependsOnFix">
             <Item>'TraceOutputViewModel'</Item>
             <Item>'OutputTraceListener'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#AvailableTraceLevels">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceOutputViewModel.AvailableTraceLevels'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AvailableTraceLevelsProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceOutputViewModel.AvailableTraceLevelsProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SelectedTraceEntryCollection">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceOutputViewModel.SelectedTraceEntryCollection'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;TraceEntry&gt;'</Item>
               <Item>'TraceOutputViewModel.SelectedTraceEntryCollection'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SelectedTraceEntryCollectionProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceOutputViewModel.SelectedTraceEntryCollectionProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SelectedTraceLevelProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TraceOutputViewModel.SelectedTraceLevelProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TraceEntriesToString(System.Collections.Generic.IEnumerable`1&lt;Catel.Windows.Controls.TraceEntry&gt;)">
            <Messages>
             <Message Id="System.DateTime.ToString(System.IFormatProvider)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="UICultureString">
               <Item>'TraceOutputViewModel.TraceEntriesToString(IEnumerable&lt;TraceEntry&gt;)'</Item>
               <Item>'CultureInfo.CurrentUICulture'</Item>
               <Item>'DateTime.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.Text.StringBuilder.AppendFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'StringBuilder.AppendFormat(string, params object[])'</Item>
               <Item>'TraceOutputViewModel.TraceEntriesToString(IEnumerable&lt;TraceEntry&gt;)'</Item>
               <Item>'StringBuilder.AppendFormat(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternate">
               <Item>'StringBuilder.AppendFormat(string, params object[])'</Item>
               <Item>'TraceOutputViewModel.TraceEntriesToString(IEnumerable&lt;TraceEntry&gt;)'</Item>
               <Item>'StringBuilder.AppendFormat(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WatermarkTextBox">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WatermarkTextBox'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Data.Converters">
        <Types>
         <Type Name="OutputTypeConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'OutputTypeConverter.Convert(object, Type, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'OutputTypeConverter.Convert(object, Type, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Markup">
        <Types>
         <Type Name="XamlTypeResolver">
          <Members>
           <Member Name="#ResolveDotNetFrameworkType(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XamlTypeResolver.ResolveDotNetFrameworkType(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Media">
        <Types>
         <Type Name="ImageSourceExtensions">
          <Members>
           <Member Name="#ConvertByteArrayToImageSource(System.Byte[])">
            <Messages>
             <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ImageSourceExtensions.ConvertByteArrayToImageSource(this byte[])'</Item>
               <Item>bytes</Item>
               <Item>'bytes'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConvertImageSourceToByteArray(System.Windows.Media.ImageSource)">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ImageSourceExtensions.ConvertImageSourceToByteArray(this ImageSource)'</Item>
               <Item>'BitmapEncoder.Save(Stream)'</Item>
               <Item>&#xD;&#xA;   -&gt;'ImageSourceExtensions.ConvertImageSourceToByteArray(this ImageSource)'&#xD;&#xA;   -&gt;'ImageSourceExtensions.ConvertImageSourceToByteArray(this ImageSource)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="VisualExtensions">
          <Members>
           <Member Name="#GetParentWindow(System.Windows.Media.Visual)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'visualObject'</Item>
               <Item>'VisualExtensions.GetParentWindow(this Visual)'</Item>
               <Item>'Visual'</Item>
               <Item>'DependencyObject'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Media.Effects">
        <Types>
         <Type Name="EmptyEffect">
          <Members>
           <Member Name="#CreatePixelShader()">
            <Messages>
             <Message Id="System.Windows.Media.Effects.PixelShader" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'EmptyEffect.CreatePixelShader()'</Item>
               <Item>'PixelShader'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="GrayscaleEffect">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message Id="System.Windows.Media.Effects.ShaderEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'GrayscaleEffect.GrayscaleEffect()'</Item>
               <Item>'ShaderEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor()">
            <Messages>
             <Message Id="System.Windows.Media.Effects.ShaderEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'GrayscaleEffect.GrayscaleEffect()'</Item>
               <Item>'ShaderEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreatePixelShader()">
            <Messages>
             <Message Id="System.Windows.Media.Effects.PixelShader" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'GrayscaleEffect.CreatePixelShader()'</Item>
               <Item>'PixelShader'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ShaderEffectBase">
          <Messages>
           <Message Id="System.Windows.Media.Effects.ShaderEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeReferencesType">
             <Item>'ShaderEffectBase'</Item>
             <Item>'ShaderEffect'</Item>
             <Item>.NET Framework 3.0 Service Pack 2</Item>
             <Item>.NET Framework 3.5</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ShaderEffectBase'</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Media.Effects.PixelShader" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase.ShaderEffectBase()'</Item>
               <Item>'PixelShader'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Media.Effects.ShaderEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase.ShaderEffectBase()'</Item>
               <Item>'ShaderEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor()">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ShaderEffectBase.ShaderEffectBase()'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;ShaderEffectBase..ctor()&#xD;&#xA;ShaderEffectBase.InitializePixelShader():Void&#xD;&#xA;ShaderEffectBase.CreatePixelShader():PixelShader</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ShaderEffectBase.ShaderEffectBase()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Media.Effects.ShaderEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase.ShaderEffectBase()'</Item>
               <Item>'ShaderEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#_pixelShader">
            <Messages>
             <Message Id="System.Windows.Media.Effects.PixelShader" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase._pixelShader'</Item>
               <Item>'PixelShader'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreatePixelShader()">
            <Messages>
             <Message Id="System.Windows.Media.Effects.PixelShader" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase.CreatePixelShader()'</Item>
               <Item>'PixelShader'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializePixelShader()">
            <Messages>
             <Message Id="System.Windows.Media.Effects.PixelShader" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase.InitializePixelShader()'</Item>
               <Item>'PixelShader'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Media.Effects.ShaderEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'ShaderEffectBase.InitializePixelShader()'</Item>
               <Item>'ShaderEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsEnabled">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ShaderEffectBase.IsEnabled'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Media.Imaging">
        <Types>
         <Type Name="ImagingExtensions">
          <Members>
           <Member Name="#ConvertBitmapToBitmapSource(System.Drawing.Bitmap)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ImagingExtensions.ConvertBitmapToBitmapSource(this Bitmap)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ImagingExtensions.ConvertBitmapToBitmapSource(this Bitmap)'</Item>
               <Item>'Bitmap.GetHbitmap()'</Item>
               <Item>&#xD;&#xA;   -&gt;'ImagingExtensions.ConvertBitmapToBitmapSource(this Bitmap)'&#xD;&#xA;   -&gt;'ImagingExtensions.ConvertBitmapToBitmapSource(this Bitmap)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConvertToImage(System.Windows.Media.Imaging.BitmapImage)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'bitmap'</Item>
               <Item>'ImagingExtensions.ConvertToImage(this BitmapImage)'</Item>
               <Item>'BitmapImage'</Item>
               <Item>'BitmapSource'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ImagingExtensions.ConvertToImage(this BitmapImage)'</Item>
               <Item>'BitmapEncoder.Save(Stream)'</Item>
               <Item>&#xD;&#xA;   -&gt;'ImagingExtensions.ConvertToImage(this BitmapImage)'&#xD;&#xA;   -&gt;'ImagingExtensions.ConvertToImage(this BitmapImage)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Ricciolo.StylesExplorer.MarkupReflection">
        <Types>
         <Type Name="AppDomainTypeResolver">
          <Members>
           <Member Name="#GetDependencyPropertyDescriptor(System.String,Ricciolo.StylesExplorer.MarkupReflection.IType,Ricciolo.StylesExplorer.MarkupReflection.IType)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'AppDomainTypeResolver.GetDependencyPropertyDescriptor(string, IType, IType)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LoadAssembly(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'AppDomainTypeResolver.LoadAssembly(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AssemblyResolve" Kind="Event">
            <Messages>
             <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="First">
               <Item>'AssemblyResolveEventHandler'</Item>
              </Issue>
              <Issue Name="Second">
               <Item>'AssemblyResolveEventHandler'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="AssemblyResolveEventArgs">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'AssemblyResolveEventArgs'</Item>
             <Item>EventArgs</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="AssemblyResolveEventHandler">
          <Messages>
           <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="DelegateParameterMoreMeaningfulName">
             <Item>'AssemblyResolveEventHandler'</Item>
             <Item>'e'</Item>
            </Issue>
           </Message>
           <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="DelegateParameterMoreMeaningfulName">
             <Item>'AssemblyResolveEventHandler'</Item>
             <Item>'s'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="BamlAssembly">
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'BamlAssembly.BamlAssembly(string)'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'BamlAssembly.BamlAssembly(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetAssemblyResourceUri(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'BamlAssembly.GetAssemblyResourceUri(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadBaml()">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'BamlAssembly.ReadBaml()'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'BamlAssembly.ReadBaml()'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'BamlAssembly.ReadBaml()'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'BamlAssembly.ReadBaml()'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BamlFile">
          <Members>
           <Member Name="#.ctor(System.Uri,System.IO.Stream)">
            <Messages>
             <Message Id="System.ArgumentNullException" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="ObjectCreation">
               <Item>'BamlFile.BamlFile(Uri, Stream)'</Item>
               <Item>'ArgumentNullException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BamlFileList">
          <Messages>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'BamlFileList'</Item>
             <Item>Collection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="DotNetType">
          <Members>
           <Member Name="#Equals(Ricciolo.StylesExplorer.MarkupReflection.IType)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'type'</Item>
               <Item>'DotNetType'</Item>
               <Item>'DotNetType.Equals(IType)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IncorrectMessage">
               <Item>'DotNetType.Equals(IType)'</Item>
               <Item>type</Item>
               <Item>'message'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsSubclassOf(Ricciolo.StylesExplorer.MarkupReflection.IType)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'type'</Item>
               <Item>'DotNetType'</Item>
               <Item>'DotNetType.IsSubclassOf(IType)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IncorrectMessage">
               <Item>'DotNetType.IsSubclassOf(IType)'</Item>
               <Item>type</Item>
               <Item>'message'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="BaseType">
               <Item>'DotNetType.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="KeyMapping">
          <Members>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'KeyMapping.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="KnownInfo">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'KnownInfo'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TypeDeclaration">
          <Messages>
           <Message TypeName="OverrideGetHashCodeOnOverridingEquals" Category="Microsoft.Usage" CheckId="CA2218" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'TypeDeclaration'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(Ricciolo.StylesExplorer.MarkupReflection.XmlBamlReader,Ricciolo.StylesExplorer.MarkupReflection.ITypeResolver,System.String,System.String,System.Int16,System.Boolean)">
            <Messages>
             <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.EndsWith(string)'</Item>
               <Item>'TypeDeclaration.TypeDeclaration(XmlBamlReader, ITypeResolver, string, string, short, bool)'</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Type">
            <Accessors>
             <Accessor Name="#get_Type()">
              <Messages>
               <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="IFormatProviderAlternateString">
                 <Item>'string.Format(string, object, object, object)'</Item>
                 <Item>'TypeDeclaration.Type.get()'</Item>
                 <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
                 <Item>'CultureInfo.CurrentCulture'</Item>
                 <Item>'CultureInfo.InvariantCulture'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlBamlElement">
          <Members>
           <Member Name="#_arguments">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'XmlBamlElement._arguments'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#_keysResources">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'XmlBamlElement._keysResources'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlBamlElement.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlBamlEndElement">
          <Members>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlBamlEndElement.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlBamlPropertyElement">
          <Members>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlBamlPropertyElement.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlBamlReader">
          <Members>
           <Member Name="#AttributeCount">
            <Accessors>
             <Accessor Name="#get_AttributeCount()">
              <Messages>
               <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Created="2013-02-14 16:04:57Z" FixCategory="Breaking" BreaksBuild="True">
                <Issue Name="PropertyGetter" Level="Warning">
                 <Item>'XmlBamlReader.AttributeCount.get()'</Item>
                 <Item>'NotImplementedException'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Deserialize3DPoints()">
            <Messages>
             <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'double.ToString()'</Item>
               <Item>'XmlBamlReader.Deserialize3DPoints()'</Item>
               <Item>'double.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'StringWriter.StringWriter()'</Item>
               <Item>'XmlBamlReader.Deserialize3DPoints()'</Item>
               <Item>'StringWriter.StringWriter(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DeserializeInt32CollectionFrom(System.IO.BinaryReader)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="NoArguments">
               <Item>'ArgumentException'</Item>
              </Issue>
              <Issue Name="NoArguments">
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DeserializePoints()">
            <Messages>
             <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'double.ToString()'</Item>
               <Item>'XmlBamlReader.DeserializePoints()'</Item>
               <Item>'double.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'StringWriter.StringWriter()'</Item>
               <Item>'XmlBamlReader.DeserializePoints()'</Item>
               <Item>'StringWriter.StringWriter(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FormatElementExtension(Ricciolo.StylesExplorer.MarkupReflection.XmlBamlElement,System.Text.StringBuilder)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Local">
               <Item>'node'</Item>
               <Item>'XmlBamlElement'</Item>
               <Item>'XmlBamlReader.FormatElementExtension(XmlBamlElement, StringBuilder)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Local">
               <Item>'node'</Item>
               <Item>'XmlBamlElement'</Item>
               <Item>'XmlBamlReader.FormatElementExtension(XmlBamlElement, StringBuilder)'</Item>
               <Item>isint</Item>
              </Issue>
              <Issue Name="Local">
               <Item>'node'</Item>
               <Item>'XmlBamlProperty'</Item>
               <Item>'XmlBamlReader.FormatElementExtension(XmlBamlElement, StringBuilder)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Local">
               <Item>'node'</Item>
               <Item>'XmlBamlPropertyElement'</Item>
               <Item>'XmlBamlReader.FormatElementExtension(XmlBamlElement, StringBuilder)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Local">
               <Item>'node'</Item>
               <Item>'XmlBamlText'</Item>
               <Item>'XmlBamlReader.FormatElementExtension(XmlBamlElement, StringBuilder)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FormatTypeDeclaration(Ricciolo.StylesExplorer.MarkupReflection.TypeDeclaration)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlBamlReader.FormatTypeDeclaration(TypeDeclaration)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.EndsWith(string)'</Item>
               <Item>'XmlBamlReader.FormatTypeDeclaration(TypeDeclaration)'</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetExtension(Ricciolo.StylesExplorer.MarkupReflection.TypeDeclaration,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlBamlReader.GetExtension(TypeDeclaration, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetStaticExtension(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlBamlReader.GetStaticExtension(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlBamlReader.GetStaticExtension(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTemplateBindingExtension(Ricciolo.StylesExplorer.MarkupReflection.PropertyDeclaration)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlBamlReader.GetTemplateBindingExtension(PropertyDeclaration)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetTypeExtension(System.Int16)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'XmlBamlReader.GetTypeExtension(short)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlBamlReader.GetTypeExtension(short)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsExtension(System.Collections.IEnumerator)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Local">
               <Item>'node'</Item>
               <Item>'XmlBamlElement'</Item>
               <Item>'XmlBamlReader.IsExtension(IEnumerator)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LocalName">
            <Accessors>
             <Accessor Name="#get_LocalName()">
              <Messages>
               <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlElement'</Item>
                 <Item>'XmlBamlReader.LocalName.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlProperty'</Item>
                 <Item>'XmlBamlReader.LocalName.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlPropertyElement'</Item>
                 <Item>'XmlBamlReader.LocalName.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
               </Message>
               <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="IFormatProviderAlternateString">
                 <Item>'string.Format(string, object, object)'</Item>
                 <Item>'XmlBamlReader.LocalName.get()'</Item>
                 <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
                 <Item>'CultureInfo.CurrentCulture'</Item>
                 <Item>'CultureInfo.InvariantCulture'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Mappings">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;XmlPIMapping&gt;'</Item>
               <Item>'XmlBamlReader.Mappings'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#NamespaceURI">
            <Accessors>
             <Accessor Name="#get_NamespaceURI()">
              <Messages>
               <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlElement'</Item>
                 <Item>'XmlBamlReader.NamespaceURI.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlProperty'</Item>
                 <Item>'XmlBamlReader.NamespaceURI.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#ReadPropertyCustom()">
            <Messages>
             <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'uint.ToString()'</Item>
               <Item>'XmlBamlReader.ReadPropertyCustom()'</Item>
               <Item>'uint.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPropertyWithExtension()">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Local">
               <Item>'resource'</Item>
               <Item>'PropertyDeclaration'</Item>
               <Item>'XmlBamlReader.ReadPropertyWithExtension()'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Local">
               <Item>'resource'</Item>
               <Item>'ResourceName'</Item>
               <Item>'XmlBamlReader.ReadPropertyWithExtension()'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadPropertyWithStaticResourceIdentifier()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'XmlBamlReader.ReadPropertyWithStaticResourceIdentifier()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReadXmlnsProperty()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'XmlBamlReader.ReadXmlnsProperty()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'XmlBamlReader.ReadXmlnsProperty()'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'XmlBamlReader.ReadXmlnsProperty()'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'XmlBamlReader'</Item>
               <Item>'IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'XmlBamlReader'</Item>
               <Item>'IXmlNamespaceResolver.LookupPrefix(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Value">
            <Accessors>
             <Accessor Name="#get_Value()">
              <Messages>
               <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlProperty'</Item>
                 <Item>'XmlBamlReader.Value.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
                <Issue Name="Local">
                 <Item>'node'</Item>
                 <Item>'XmlBamlText'</Item>
                 <Item>'XmlBamlReader.Value.get()'</Item>
                 <Item>castclass</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlNamespace">
          <Members>
           <Member Name="#Equals(System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'obj'</Item>
               <Item>'XmlNamespace'</Item>
               <Item>'XmlNamespace.Equals(object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XmlPIMapping">
          <Members>
           <Member Name="#McNamespace">
            <Messages>
             <Message Id="Mc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Mc</Item>
               <Item>'XmlPIMapping.McNamespace'</Item>
               <Item>MC</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.CSLA/Catel.Extensions.CSLA.dll">
    <Modules>
     <Module Name="catel.extensions.csla.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
       <Message Id="CSLA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue Name="Assembly">
         <Item>CSLA</Item>
         <Item>'Catel.Extensions.CSLA.dll'</Item>
         <Item>Csla</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel.MVVM.CSLA">
        <Types>
         <Type Name="ViewModelBase`1">
          <Members>
           <Member Name="#Catel.MVVM.IViewModel.CancelAndCloseViewModel()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.CancelAndCloseViewModel()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.CancelViewModel()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.CancelViewModel()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.CloseViewModel(System.Nullable`1&lt;System.Boolean&gt;)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.CloseViewModel(bool?)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.HasDirtyModel">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.get_HasDirtyModel()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.HasDirtyModel.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.HasErrors">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.get_HasErrors()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.HasErrors.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.HasWarnings">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.get_HasWarnings()">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.HasWarnings.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.InitializeViewModel()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.InitializeViewModel()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.SaveAndCloseViewModel()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.SaveAndCloseViewModel()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.SaveViewModel()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.SaveViewModel()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.ValidateViewModel(System.Boolean,System.Boolean)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase&lt;TModel&gt;'</Item>
               <Item>'IViewModel.ValidateViewModel(bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterViewModelServices(Catel.IoC.IServiceLocator)">
            <Messages>
             <Message Id="serviceLocator" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'serviceLocator'</Item>
               <Item>'ViewModelBase&lt;TModel&gt;.RegisterViewModelServices(IServiceLocator)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Canceled" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Canceled(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Canceled.add(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Canceled(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Canceled.remove(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Canceling" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Canceling(System.EventHandler`1&lt;Catel.MVVM.CancelingEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Canceling.add(EventHandler&lt;CancelingEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Canceling(System.EventHandler`1&lt;Catel.MVVM.CancelingEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Canceling.remove(EventHandler&lt;CancelingEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Closed" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Closed(System.EventHandler`1&lt;Catel.MVVM.ViewModelClosedEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Closed.add(EventHandler&lt;ViewModelClosedEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Closed(System.EventHandler`1&lt;Catel.MVVM.ViewModelClosedEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Closed.remove(EventHandler&lt;ViewModelClosedEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Closing" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Closing(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Closing.add(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Closing(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Closing.remove(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.CommandExecuted" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_CommandExecuted(System.EventHandler`1&lt;Catel.MVVM.CommandExecutedEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.CommandExecuted.add(EventHandler&lt;CommandExecutedEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_CommandExecuted(System.EventHandler`1&lt;Catel.MVVM.CommandExecutedEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.CommandExecuted.remove(EventHandler&lt;CommandExecutedEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Initialized" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Initialized(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Initialized.add(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Initialized(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Initialized.remove(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Saved" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Saved(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Saved.add(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Saved(System.EventHandler`1&lt;System.EventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Saved.remove(EventHandler&lt;EventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Catel.MVVM.IViewModel.Saving" Kind="Event">
            <Accessors>
             <Accessor Name="#Catel.MVVM.IViewModel.add_Saving(System.EventHandler`1&lt;Catel.MVVM.SavingEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Saving.add(EventHandler&lt;SavingEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
             <Accessor Name="#Catel.MVVM.IViewModel.remove_Saving(System.EventHandler`1&lt;Catel.MVVM.SavingEventArgs&gt;)">
              <Messages>
               <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'ViewModelBase&lt;TModel&gt;'</Item>
                 <Item>'IViewModel.Saving.remove(EventHandler&lt;SavingEventArgs&gt;)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.Data/Catel.Extensions.Data.dll">
    <Modules>
     <Module Name="catel.extensions.data.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel.Data.Expressions">
        <Types>
         <Type Name="ExpressionExtensions">
          <Members>
           <Member Name="#And`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExpressionExtensions.And&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
              <Issue>
               <Item>'ExpressionExtensions.And&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
              <Issue>
               <Item>'ExpressionExtensions.And&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Compose`1(System.Linq.Expressions.Expression`1&lt;!!0&gt;,System.Linq.Expressions.Expression`1&lt;!!0&gt;,System.Func`3&lt;System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression&gt;)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'first'</Item>
               <Item>'ExpressionExtensions.Compose&lt;T&gt;(this Expression&lt;T&gt;, Expression&lt;T&gt;, Func&lt;Expression, Expression, Expression&gt;)'</Item>
               <Item>'Expression&lt;T&gt;'</Item>
               <Item>'LambdaExpression'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Or`1(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ExpressionExtensions.Or&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
              <Issue>
               <Item>'ExpressionExtensions.Or&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
              <Issue>
               <Item>'ExpressionExtensions.Or&lt;T&gt;(this Expression&lt;Func&lt;T, bool&gt;&gt;, Expression&lt;Func&lt;T, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;T, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ParameterRebinder">
          <Messages>
           <Message Id="Rebinder" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Rebinder</Item>
             <Item>'ParameterRebinder'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ParameterRebinder.VisitParameter(ParameterExpression)'</Item>
               <Item>'parameterExpression'</Item>
               <Item>'node'</Item>
               <Item>'ExpressionVisitor.VisitParameter(ParameterExpression)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Data.Repositories">
        <Types>
         <Type Name="CachedRepositoryBase`1">
          <Messages>
           <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
            <Issue Name="DependsOnFix">
             <Item>'CachedRepositoryBase&lt;TModel&gt;'</Item>
             <Item>'Timer'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#_timer">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CachedRepositoryBase&lt;TModel&gt;._timer'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RetrieveData(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;!0&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CachedRepositoryBase&lt;TModel&gt;.RetrieveData(Action&lt;IEnumerable&lt;TModel&gt;&gt;)'</Item>
               <Item>'Action&lt;IEnumerable&lt;TModel&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IRepository`1">
          <Members>
           <Member Name="#GetData(System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;!0&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IRepository&lt;TModel&gt;.GetData(Action&lt;IEnumerable&lt;TModel&gt;&gt;)'</Item>
               <Item>'Action&lt;IEnumerable&lt;TModel&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Data.Specifications">
        <Types>
         <Type Name="CompositeSpecification`1">
          <Members>
           <Member Name="#.ctor(Catel.Data.Specifications.Specification`1&lt;!0&gt;,Catel.Data.Specifications.Specification`1&lt;!0&gt;,System.Func`1&lt;System.Func`2&lt;!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CompositeSpecification&lt;TEntity&gt;.CompositeSpecification(Specification&lt;TEntity&gt;, Specification&lt;TEntity&gt;, Func&lt;Func&lt;TEntity, bool&gt;&gt;)'</Item>
               <Item>'Func&lt;Func&lt;TEntity, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Implicit(Catel.Data.Specifications.CompositeSpecification`1&lt;!0&gt;):System.Func`2&lt;!0,System.Boolean&gt;">
            <Messages>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Multiple">
               <Item>ToXXX</Item>
               <Item>FromXXX</Item>
               <Item>'CompositeSpecification&lt;TEntity&gt;.implicit operator Func&lt;TEntity, bool&gt;(CompositeSpecification&lt;TEntity&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Specification`1">
          <Members>
           <Member Name="#.ctor(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Specification&lt;TEntity&gt;.Specification(Expression&lt;Func&lt;TEntity, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TEntity, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#And(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Specification&lt;TEntity&gt;.And(Expression&lt;Func&lt;TEntity, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TEntity, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#op_Implicit(Catel.Data.Specifications.Specification`1&lt;!0&gt;):System.Func`2&lt;!0,System.Boolean&gt;">
            <Messages>
             <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Multiple">
               <Item>ToXXX</Item>
               <Item>FromXXX</Item>
               <Item>'Specification&lt;TEntity&gt;.implicit operator Func&lt;TEntity, bool&gt;(Specification&lt;TEntity&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Or(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!0,System.Boolean&gt;&gt;)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Specification&lt;TEntity&gt;.Or(Expression&lt;Func&lt;TEntity, bool&gt;&gt;)'</Item>
               <Item>'Expression&lt;Func&lt;TEntity, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Predicate">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Specification&lt;TEntity&gt;.Predicate'</Item>
               <Item>'Expression&lt;Func&lt;TEntity, bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.FluentValidation/Catel.Extensions.FluentValidation.dll">
    <Modules>
     <Module Name="catel.extensions.fluentvalidation.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel">
        <Types>
         <Type Name="DisplayNameAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'DisplayNameAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ValidatorDescriptionAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ValidatorDescriptionAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Extensions.Prism/Catel.Extensions.Prism.dll">
    <Modules>
     <Module Name="catel.extensions.prism.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel">
        <Types>
         <Type Name="BootstrapperBase">
          <Members>
           <Member Name="#InitializeModules()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'BootstrapperBase.InitializeModules()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterModule(Microsoft.Practices.Prism.Modularity.ModuleInfo)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'BootstrapperBase.RegisterModule(ModuleInfo)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'BootstrapperBase.RegisterModule(ModuleInfo)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RunWithSplashScreen`1(System.Boolean)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:28Z" BreaksBuild="True">
              <Issue>
               <Item>'BootstrapperBase.RunWithSplashScreen&lt;TViewModel&gt;(bool)'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BootstrapperBase+LoggerFacadeAdapter">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:28Z" BreaksBuild="True">
            <Issue>
             <Item>'BootstrapperBase.LoggerFacadeAdapter'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Microsoft.Practices.Prism.Logging.ILoggerFacade.Log(System.String,Microsoft.Practices.Prism.Logging.Category,Microsoft.Practices.Prism.Logging.Priority)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:28Z" BreaksBuild="True">
              <Issue>
               <Item>'BootstrapperBase.LoggerFacadeAdapter'</Item>
               <Item>'ILoggerFacade.Log(string, Category, Priority)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ILogExtensions">
          <Members>
           <Member Name="#Debug(Catel.Logging.ILog,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Debug(this ILog, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Debug(Catel.Logging.ILog,System.Exception,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Debug(this ILog, Exception, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Error(Catel.Logging.ILog,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Error(this ILog, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Error(Catel.Logging.ILog,System.Exception,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Error(this ILog, Exception, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Info(Catel.Logging.ILog,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Info(this ILog, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Info(Catel.Logging.ILog,System.Exception,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Info(this ILog, Exception, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Warning(Catel.Logging.ILog,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Warning(this ILog, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Warning(Catel.Logging.ILog,System.Exception,Microsoft.Practices.Prism.Logging.Priority,System.String,System.Object[])">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ILogExtensions.Warning(this ILog, Exception, Priority, string, params object[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IUIVisualizerServiceExtensions">
          <Messages>
           <Message Id="IUI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>IUI</Item>
             <Item>'IUIVisualizerServiceExtensions'</Item>
             <Item>Iui</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Activate(Catel.MVVM.Services.IUIVisualizerService,Catel.MVVM.IViewModel,Catel.MVVM.IViewModel,System.String)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'parentViewModel'</Item>
               <Item>'IRelationalViewModel'</Item>
               <Item>'IUIVisualizerServiceExtensions.Activate(this IUIVisualizerService, IViewModel, IViewModel, string)'</Item>
               <Item>isint</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'viewModel'</Item>
               <Item>'IRelationalViewModel'</Item>
               <Item>'IUIVisualizerServiceExtensions.Activate(this IUIVisualizerService, IViewModel, IViewModel, string)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Deactivate(Catel.MVVM.Services.IUIVisualizerService,Catel.MVVM.IViewModel)">
            <Messages>
             <Message Id="this" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'this'</Item>
               <Item>'IUIVisualizerServiceExtensions.Deactivate(this IUIVisualizerService, IViewModel)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Show(Catel.MVVM.Services.IUIVisualizerService,Catel.MVVM.IViewModel,System.Action,System.EventHandler`1&lt;Catel.MVVM.Services.UICompletedEventArgs&gt;,System.UInt32)">
            <Messages>
             <Message Id="timeOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterShouldBeDiscreteTerm">
               <Item>'IUIVisualizerServiceExtensions.Show(this IUIVisualizerService, IViewModel, Action, EventHandler&lt;UICompletedEventArgs&gt;, uint)'</Item>
               <Item>timeOut</Item>
               <Item>'timeOutInMilliseconds'</Item>
               <Item>timeout</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IViewModelExtensions">
          <Members>
           <Member Name="#GetService`1(Catel.MVVM.IViewModel,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'this'</Item>
               <Item>'ViewModelBase'</Item>
               <Item>'IViewModelExtensions.GetService&lt;T&gt;(this IViewModel, object)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Modules">
        <Types>
         <Type Name="ModuleCatalog">
          <Members>
           <Member Name="#_synchronizationContext">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleCatalog._synchronizationContext'</Item>
               <Item>'SynchronizationContext'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleCatalog._synchronizationContext'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AddGroup(Microsoft.Practices.Prism.Modularity.InitializationMode,System.String,Microsoft.Practices.Prism.Modularity.ModuleInfo[])">
            <Messages>
             <Message Id="Infos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameter">
               <Item>'ModuleCatalog.AddGroup(InitializationMode, string, params ModuleInfo[])'</Item>
               <Item>Infos</Item>
               <Item>'moduleInfos'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateFromXaml(System.Uri)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ModuleCatalog.CreateFromXaml(Uri)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'ModuleCatalog.CreateFromXaml(Uri)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GrouplessModules">
            <Messages>
             <Message Id="Groupless" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Groupless</Item>
               <Item>'ModuleCatalog.GrouplessModules'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Modules.ModuleManager">
        <Types>
         <Type Name="ModuleManagerView">
          <Members>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleManagerView'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Modules.ModuleManager.Models">
        <Types>
         <Type Name="ModuleTemplate">
          <Messages>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ModuleTemplate'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleTemplate.ModuleTemplate()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'DateTime.ToString(string)'</Item>
               <Item>'ModuleTemplate.ModuleTemplate()'</Item>
               <Item>'DateTime.ToString(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ModuleTemplate.ModuleTemplate()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#EnabledProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleTemplate.EnabledProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ModuleNameProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleTemplate.ModuleNameProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#StateProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleTemplate.StateProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TimeProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleTemplate.TimeProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Modules.ModuleManager.ViewModels">
        <Types>
         <Type Name="ModuleManagerViewModel">
          <Members>
           <Member Name="#.ctor()">
            <Messages>
             <Message Id="System.Collections.ObjectModel.ObservableCollection`1&lt;Catel.Modules.ModuleManager.Models.ModuleTemplate&gt;.#.ctor(System.Collections.Generic.IEnumerable`1&lt;Catel.Modules.ModuleManager.Models.ModuleTemplate&gt;)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'ModuleManagerViewModel.ModuleManagerViewModel()'</Item>
               <Item>'ObservableCollection&lt;ModuleTemplate&gt;.ObservableCollection(IEnumerable&lt;ModuleTemplate&gt;)'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ApplicationModules">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleManagerViewModel.ApplicationModules'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ApplicationModulesProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ModuleManagerViewModel.ApplicationModulesProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.Mvc/Catel.Mvc.dll">
    <Modules>
     <Module Name="catel.mvc.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
       <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue Name="Assembly">
         <Item>Mvc</Item>
         <Item>'Catel.Mvc.dll'</Item>
        </Issue>
       </Message>
      </Messages>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../output/release/NET40/Catel.MVVM/Catel.MVVM.dll">
    <Modules>
     <Module Name="catel.mvvm.dll">
      <Messages>
       <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue>
         <Item>'AssemblyInformationalVersionAttribute'</Item>
         <Item>'informationalVersion'</Item>
         <Item>3.5, Nightly, Released on 2013-02-13 21:17</Item>
         <Item>'Version'</Item>
        </Issue>
       </Message>
       <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
        <Issue Name="Assembly">
         <Item>MVVM</Item>
         <Item>'Catel.MVVM.dll'</Item>
         <Item>Mvvm</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Catel">
        <Types>
         <Type Name="Environment">
          <Members>
           <Member Name="#BypassDevEnvCheck">
            <Messages>
             <Message Id="Env" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Env</Item>
               <Item>'Environment.BypassDevEnvCheck'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DefaultMultiLingualDependencyPropertyValue">
            <Messages>
             <Message Id="MultiLingual" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>MultiLingual</Item>
               <Item>'Environment.DefaultMultiLingualDependencyPropertyValue'</Item>
               <Item>Multilingual</Item>
              </Issue>
             </Message>
             <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Multi</Item>
               <Item>'Environment.DefaultMultiLingualDependencyPropertyValue'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MainWindow">
            <Accessors>
             <Accessor Name="#get_MainWindow()">
              <Messages>
               <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'Environment.MainWindow.get()'</Item>
                 <Item>'Exception'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="NavigationEventArgsExtensions">
          <Members>
           <Member Name="#GetSafeUriString(System.Uri)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'NavigationEventArgsExtensions.GetSafeUriString(Uri)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetUriWithoutQueryInfo(System.Windows.Navigation.NavigatingCancelEventArgs)">
            <Messages>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'NavigationEventArgsExtensions.GetUriWithoutQueryInfo(this NavigatingCancelEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetUriWithoutQueryInfo(System.Windows.Navigation.NavigationEventArgs)">
            <Messages>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'NavigationEventArgsExtensions.GetUriWithoutQueryInfo(this NavigationEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsNavigationForView(System.String,System.Type)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'viewType'</Item>
               <Item>'NavigationEventArgsExtensions.IsNavigationForView(string, Type)'</Item>
               <Item>'Type'</Item>
               <Item>'MemberInfo'</Item>
              </Issue>
             </Message>
             <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'NavigationEventArgsExtensions.IsNavigationForView(string, Type)'</Item>
               <Item>String</Item>
               <Item>'uriString'</Item>
              </Issue>
             </Message>
             <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="ToUpperInvariant">
               <Item>'NavigationEventArgsExtensions.IsNavigationForView(string, Type)'</Item>
               <Item>'string.ToLowerInvariant()'</Item>
              </Issue>
              <Issue Name="ToUpperInvariant">
               <Item>'NavigationEventArgsExtensions.IsNavigationForView(string, Type)'</Item>
               <Item>'string.ToLowerInvariant()'</Item>
              </Issue>
             </Message>
             <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'uriString'</Item>
               <Item>'NavigationEventArgsExtensions.IsNavigationForView(string, Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Data">
        <Types>
         <Type Name="DispatcherObservableObject">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DispatcherObservableObject'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM">
        <Types>
         <Type Name="AsynchronousCommand`2">
          <Members>
           <Member Name="#IsCancelationRequested">
            <Messages>
             <Message Id="Cancelation" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Cancelation</Item>
               <Item>'AsynchronousCommand&lt;TExecuteParameter, TCanExecuteParameter&gt;.IsCancelationRequested'</Item>
               <Item>Cancellation</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CancellableEventArgs">
          <Messages>
           <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'CancellableEventArgs'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="Command`2">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Command&lt;TExecuteParameter, TCanExecuteParameter&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaiseExecuted(System.Object)">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Command&lt;TExecuteParameter, TCanExecuteParameter&gt;.RaiseExecuted(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CommandHelper">
          <Members>
           <Member Name="#CreateCommand(System.Action,System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;Catel.Data.IValidationSummary&gt;&gt;,System.Object)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandHelper.CreateCommand(Action, Expression&lt;Func&lt;IValidationSummary&gt;&gt;, object)'</Item>
               <Item>'Expression&lt;Func&lt;IValidationSummary&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateCommand`1(System.Action`1&lt;!!0&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;Catel.Data.IValidationSummary&gt;&gt;,System.Object)">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandHelper.CreateCommand&lt;TExecuteParameter&gt;(Action&lt;TExecuteParameter&gt;, Expression&lt;Func&lt;IValidationSummary&gt;&gt;, object)'</Item>
               <Item>'Expression&lt;Func&lt;IValidationSummary&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExposeAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ExposeAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ICatelCommand">
          <Members>
           <Member Name="#RaiseCanExecuteChanged()">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ICatelCommand.RaiseCanExecuteChanged()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ILocator">
          <Members>
           <Member Name="#NamingConventions">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'ILocator.NamingConventions'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="INotifyableViewModel">
          <Messages>
           <Message Id="Notifyable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Notifyable</Item>
             <Item>'INotifyableViewModel'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#ViewModelEvent(Catel.MVVM.IViewModel,Catel.MVVM.ViewModelEvent,System.EventArgs)">
            <Messages>
             <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'viewModelEvent'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="InterestedInAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'InterestedInAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="InvalidViewModelException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'InvalidViewModelException'</Item>
             <Item>protected InvalidViewModelException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidViewModelException'</Item>
             <Item>public InvalidViewModelException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'InvalidViewModelException'</Item>
             <Item>public InvalidViewModelException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'InvalidViewModelException'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IProgressNotifyableViewModel">
          <Messages>
           <Message Id="Notifyable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Notifyable</Item>
             <Item>'IProgressNotifyableViewModel'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IUrlLocator">
          <Members>
           <Member Name="#Register(System.Type,System.String)">
            <Messages>
             <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'url'</Item>
               <Item>'IUrlLocator.Register(Type, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ResolveUrl(System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IUrlLocator.ResolveUrl(Type, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IViewModelCommandManager">
          <Members>
           <Member Name="#AddHandler(System.Action`4&lt;Catel.MVVM.IViewModel,System.String,System.Windows.Input.ICommand,System.Object&gt;)">
            <Messages>
             <Message Id="AddHandler" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'IViewModelCommandManager.AddHandler(Action&lt;IViewModel, string, ICommand, object&gt;)'</Item>
               <Item>AddHandler</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IViewModelManager">
          <Members>
           <Member Name="#GetFirstOrDefaultInstance`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IViewModelManager.GetFirstOrDefaultInstance&lt;TViewModel&gt;()'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LocatorBase">
          <Members>
           <Member Name="#.ctor()">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LocatorBase.LocatorBase()'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;LocatorBase..ctor()&#xD;&#xA;LocatorBase.GetDefaultNamingConventions():IEnumerable&lt;String&gt;</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDefaultNamingConventions()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'LocatorBase.GetDefaultNamingConventions()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#NamingConventions">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'LocatorBase.NamingConventions'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ManagedViewModel">
          <Members>
           <Member Name="#NotifyViewModelsOfEvent(Catel.MVVM.IViewModel,Catel.MVVM.ViewModelEvent,System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ManagedViewModel.NotifyViewModelsOfEvent(IViewModel, ViewModelEvent, EventArgs)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnViewModelCommandExecuted(System.Object,Catel.MVVM.CommandExecutedEventArgs)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ManagedViewModel.OnViewModelCommandExecuted(object, CommandExecutedEventArgs)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnViewModelPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ManagedViewModel.OnViewModelPropertyChanged(object, PropertyChangedEventArgs)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ModelAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ModelAttribute'</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Level="Error">
             <Item>'ModelAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ModelErrorInfo">
          <Members>
           <Member Name="#GetValidationString(System.Object)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'ModelErrorInfo.GetValidationString(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ModelNotRegisteredException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'ModelNotRegisteredException'</Item>
             <Item>protected ModelNotRegisteredException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ModelNotRegisteredException'</Item>
             <Item>public ModelNotRegisteredException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ModelNotRegisteredException'</Item>
             <Item>public ModelNotRegisteredException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ModelNotRegisteredException'</Item>
             <Item>public ModelNotRegisteredException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'ModelNotRegisteredException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ModelNotRegisteredException.ModelNotRegisteredException(string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PropertyNotFoundInModelException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundInModelException'</Item>
             <Item>protected PropertyNotFoundInModelException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundInModelException'</Item>
             <Item>public PropertyNotFoundInModelException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundInModelException'</Item>
             <Item>public PropertyNotFoundInModelException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PropertyNotFoundInModelException'</Item>
             <Item>public PropertyNotFoundInModelException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'PropertyNotFoundInModelException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String,System.String,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'PropertyNotFoundInModelException.PropertyNotFoundInModelException(string, string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UrlLocator">
          <Members>
           <Member Name="#GetDefaultNamingConventions()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UrlLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ResolveUrl(System.Type,System.Boolean)">
            <Messages>
             <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UrlLocator.ResolveUrl(Type, bool)'</Item>
               <Item>'ResourceHelper.XamlPageExists(Uri)'</Item>
               <Item>'ResourceHelper.XamlPageExists(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidationToViewModelAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ValidationToViewModelAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ViewHelper">
          <Members>
           <Member Name="#ConstructViewWithViewModel(System.Type,System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewHelper.ConstructViewWithViewModel(Type, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewLocator">
          <Members>
           <Member Name="#GetDefaultNamingConventions()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelBase">
          <Messages>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ViewModelBase'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.INotifyableViewModel.ViewModelCommandExecuted(Catel.MVVM.IViewModel,Catel.MVVM.ICatelCommand,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'INotifyableViewModel.ViewModelCommandExecuted(IViewModel, ICatelCommand, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.INotifyableViewModel.ViewModelEvent(Catel.MVVM.IViewModel,Catel.MVVM.ViewModelEvent,System.EventArgs)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'INotifyableViewModel.ViewModelEvent(IViewModel, ViewModelEvent, EventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.INotifyableViewModel.ViewModelPropertyChanged(Catel.MVVM.IViewModel,System.String)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'INotifyableViewModel.ViewModelPropertyChanged(IViewModel, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IRelationalViewModel.RegisterChildViewModel(Catel.MVVM.IViewModel)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'IRelationalViewModel.RegisterChildViewModel(IViewModel)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IRelationalViewModel.SetParentViewModel(Catel.MVVM.IViewModel)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'IRelationalViewModel.SetParentViewModel(IViewModel)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Catel.MVVM.IRelationalViewModel.UnregisterChildViewModel(Catel.MVVM.IViewModel)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'IRelationalViewModel.UnregisterChildViewModel(IViewModel)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeViewModelMetaData(System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewModelBase.InitializeViewModelMetaData(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelBase.InitializeViewModelMetaData(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelBase.InitializeViewModelMetaData(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterViewModelServices(Catel.IoC.IServiceLocator)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase.RegisterViewModelServices(IServiceLocator)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetAttributes()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetAttributes()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetClassName()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetClassName()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetComponentName()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetComponentName()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetConverter()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetConverter()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetDefaultEvent()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetDefaultProperty()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetEditor(Type)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetEvents()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetEvents()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetEvents(Attribute[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetProperties()">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetProperties()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetProperties(Attribute[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase'</Item>
               <Item>'ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UninitializeModel(System.String,System.Object,Catel.MVVM.ViewModelBase+ModelCleanUpMode)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase.UninitializeModel(string, object, ViewModelBase.ModelCleanUpMode)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'ViewModelBase.UninitializeModel(string, object, ViewModelBase.ModelCleanUpMode)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ViewModelManager">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelBase.ViewModelManager'</Item>
               <Item>'ViewModelManager'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelCommandManager">
          <Members>
           <Member Name="#DisposeCommands()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelCommandManager.DisposeCommands()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisterCommands(System.Boolean)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelCommandManager.RegisterCommands(bool)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelLocator">
          <Members>
           <Member Name="#GetDefaultNamingConventions()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ViewModelLocator.GetDefaultNamingConventions()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelManager">
          <Members>
           <Member Name="#GetFirstOrDefaultInstance`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelManager.GetFirstOrDefaultInstance&lt;TViewModel&gt;()'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelNotRegisteredException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'ViewModelNotRegisteredException'</Item>
             <Item>protected ViewModelNotRegisteredException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ViewModelNotRegisteredException'</Item>
             <Item>public ViewModelNotRegisteredException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ViewModelNotRegisteredException'</Item>
             <Item>public ViewModelNotRegisteredException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'ViewModelNotRegisteredException'</Item>
             <Item>public ViewModelNotRegisteredException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'ViewModelNotRegisteredException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewModelNotRegisteredException.ViewModelNotRegisteredException(Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelPropertyDescriptor">
          <Members>
           <Member Name="#GetValue(System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewModelPropertyDescriptor.GetValue(object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetValue(System.Object,System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ViewModelPropertyDescriptor.SetValue(object, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelServiceHelper">
          <Members>
           <Member Name="#RegisterDefaultViewModelServices(Catel.IoC.IServiceLocator)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'ViewModelServiceHelper.RegisterDefaultViewModelServices(IServiceLocator)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelToModelAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ViewModelToModelAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="WrongViewModelTypeException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'WrongViewModelTypeException'</Item>
             <Item>protected WrongViewModelTypeException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'WrongViewModelTypeException'</Item>
             <Item>public WrongViewModelTypeException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'WrongViewModelTypeException'</Item>
             <Item>public WrongViewModelTypeException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'WrongViewModelTypeException'</Item>
             <Item>public WrongViewModelTypeException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'WrongViewModelTypeException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.Type,System.Type)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'WrongViewModelTypeException.WrongViewModelTypeException(Type, Type)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM.Auditing">
        <Types>
         <Type Name="AuditorBase">
          <Members>
           <Member Name="#PropertiesToIgnore">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'AuditorBase.PropertiesToIgnore'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IAuditor">
          <Members>
           <Member Name="#PropertiesToIgnore">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;string&gt;'</Item>
               <Item>'IAuditor.PropertiesToIgnore'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM.Services">
        <Types>
         <Type Name="CameraType">
          <Messages>
           <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'CameraType'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="DispatcherService">
          <Members>
           <Member Name="#BeginInvoke(System.Action,System.Boolean)">
            <Messages>
             <Message Id="System.Windows.Threading.Dispatcher.#BeginInvoke(System.Delegate,System.Object[])" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'DispatcherService.BeginInvoke(Action, bool)'</Item>
               <Item>'Dispatcher.BeginInvoke(Delegate, params object[])'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Invoke(System.Action)">
            <Messages>
             <Message Id="System.Windows.Threading.Dispatcher.#Invoke(System.Delegate,System.Object[])" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'DispatcherService.Invoke(Action)'</Item>
               <Item>'Dispatcher.Invoke(Delegate, params object[])'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Invoke(System.Delegate,System.Object[])">
            <Messages>
             <Message Id="System.Windows.Threading.Dispatcher.#Invoke(System.Delegate,System.Object[])" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'DispatcherService.Invoke(Delegate, params object[])'</Item>
               <Item>'Dispatcher.Invoke(Delegate, params object[])'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FlashMode">
          <Messages>
           <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'FlashMode'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#RedEyeReduction">
            <Messages>
             <Message Id="RedEye" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>RedEye</Item>
               <Item>'FlashMode.RedEyeReduction'</Item>
               <Item>Redeye</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IAccelerometerService">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'IAccelerometerService'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="IAccelerometerValue">
          <Members>
           <Member Name="#X">
            <Messages>
             <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'IAccelerometerValue.X'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Y">
            <Messages>
             <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'IAccelerometerValue.Y'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Z">
            <Messages>
             <Message Id="Z" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberMoreMeaningfulName">
               <Item>'IAccelerometerValue.Z'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ICameraService">
          <Members>
           <Member Name="#FocusAtPoint(System.Double,System.Double)">
            <Messages>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'ICameraService.FocusAtPoint(double, double)'</Item>
               <Item>'x'</Item>
              </Issue>
             </Message>
             <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'ICameraService.FocusAtPoint(double, double)'</Item>
               <Item>'y'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPreviewBufferArgb32(System.Int32[])">
            <Messages>
             <Message Id="Argb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Argb</Item>
               <Item>'ICameraService.GetPreviewBufferArgb32(int[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetPreviewBufferYCbCr(System.Byte[])">
            <Messages>
             <Message Id="Cb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Cb</Item>
               <Item>'ICameraService.GetPreviewBufferYCbCr(byte[])'</Item>
               <Item>CB</Item>
              </Issue>
             </Message>
             <Message Id="Cr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Cr</Item>
               <Item>'ICameraService.GetPreviewBufferYCbCr(byte[])'</Item>
               <Item>CR</Item>
              </Issue>
             </Message>
             <Message Id="Cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Cb</Item>
               <Item>'ICameraService.GetPreviewBufferYCbCr(byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Stop()">
            <Messages>
             <Message Id="Stop" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'ICameraService.Stop()'</Item>
               <Item>Stop</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#AutoFocusCompleted" Kind="Event">
            <Messages>
             <Message Id="AutoFocus" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>AutoFocus</Item>
               <Item>'ICameraService.AutoFocusCompleted'</Item>
               <Item>Autofocus</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ILocationService">
          <Members>
           <Member Name="#CurrentLocation">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="SameType">
               <Item>'ILocationService.CurrentLocation'</Item>
               <Item>'ILocationService.GetCurrentLocation()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCurrentLocation()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'ILocationService.GetCurrentLocation()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Stop()">
            <Messages>
             <Message Id="Stop" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'ILocationService.Stop()'</Item>
               <Item>Stop</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="INavigationService">
          <Members>
           <Member Name="#GetBackStackCount()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'INavigationService.GetBackStackCount()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Navigate(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)">
            <Messages>
             <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'uri'</Item>
               <Item>'INavigationService.Navigate(string, Dictionary&lt;string, object&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Navigate`1(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'INavigationService.Navigate&lt;TViewModelType&gt;(Dictionary&lt;string, object&gt;)'</Item>
               <Item>'TViewModelType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IOpenFileService">
          <Members>
           <Member Name="#FileNames">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'IOpenFileService.FileNames'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMultiSelect">
            <Messages>
             <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Multi</Item>
               <Item>'IOpenFileService.IsMultiSelect'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ISensorService`2">
          <Members>
           <Member Name="#CurrentValue">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="SameType">
               <Item>'ISensorService&lt;TValueInterface, TEventArgs&gt;.CurrentValue'</Item>
               <Item>'ISensorService&lt;TValueInterface, TEventArgs&gt;.GetCurrentValue()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCurrentValue()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'ISensorService&lt;TValueInterface, TEventArgs&gt;.GetCurrentValue()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Stop()">
            <Messages>
             <Message Id="Stop" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'ISensorService&lt;TValueInterface, TEventArgs&gt;.Stop()'</Item>
               <Item>Stop</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ISplashScreenService">
          <Members>
           <Member Name="#Commit`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ISplashScreenService.Commit&lt;TViewModel&gt;()'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CommitAsync`1(System.Action)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ISplashScreenService.CommitAsync&lt;TViewModel&gt;(Action)'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IVibrateService">
          <Members>
           <Member Name="#Stop()">
            <Messages>
             <Message Id="Stop" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>'IVibrateService.Stop()'</Item>
               <Item>Stop</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IViewModelService">
          <Messages>
           <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'IViewModelService'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="MessageButton">
          <Messages>
           <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'MessageButton'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#OK">
            <Messages>
             <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberAbbreviation">
               <Item>OK</Item>
               <Item>'MessageButton.OK'</Item>
               <Item>Ok</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OKCancel">
            <Messages>
             <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberAbbreviation">
               <Item>OK</Item>
               <Item>'MessageButton.OKCancel'</Item>
               <Item>Ok</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MessageResult">
          <Members>
           <Member Name="#OK">
            <Messages>
             <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberAbbreviation">
               <Item>OK</Item>
               <Item>'MessageResult.OK'</Item>
               <Item>Ok</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NamingConvention">
          <Members>
           <Member Name="#RemoveAllPostfixes(System.String,System.String[])">
            <Messages>
             <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.EndsWith(string)'</Item>
               <Item>'NamingConvention.RemoveAllPostfixes(string, string[])'</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ResolveNamingConvention(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.String,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'NamingConvention.ResolveNamingConvention(Dictionary&lt;string, string&gt;, string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.LastIndexOf(string)'</Item>
               <Item>'NamingConvention.ResolveNamingConvention(Dictionary&lt;string, string&gt;, string, string)'</Item>
               <Item>'string.LastIndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NavigationService">
          <Members>
           <Member Name="#GetApplicationRootFrame()">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'NavigationService.GetApplicationRootFrame()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Navigate`1(System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'NavigationService.Navigate&lt;TViewModelType&gt;(Dictionary&lt;string, object&gt;)'</Item>
               <Item>'TViewModelType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Register(System.String,System.Uri)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'NavigationService.Register(string, Uri)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PageNotRegisteredException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'PageNotRegisteredException'</Item>
             <Item>protected PageNotRegisteredException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PageNotRegisteredException'</Item>
             <Item>public PageNotRegisteredException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'PageNotRegisteredException'</Item>
             <Item>public PageNotRegisteredException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'PageNotRegisteredException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'PageNotRegisteredException.PageNotRegisteredException(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PleaseWaitWorkDelegate">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'PleaseWaitWorkDelegate'</Item>
             <Item>Delegate</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ProcessCompletedDelegate">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'ProcessCompletedDelegate'</Item>
             <Item>Delegate</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ProcessService">
          <Members>
           <Member Name="#StartProcess(System.String,System.String,Catel.MVVM.Services.ProcessCompletedDelegate)">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
               <Item>'Process.EnableRaisingEvents.set(bool)'</Item>
               <Item>&#xD;&#xA;   -&gt;'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'&#xD;&#xA;   -&gt;'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
              </Issue>
              <Issue>
               <Item>'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
               <Item>'Process.Exited.add(EventHandler)'</Item>
               <Item>&#xD;&#xA;   -&gt;'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'&#xD;&#xA;   -&gt;'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
              </Issue>
              <Issue>
               <Item>'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
               <Item>'Process.Start(string, string)'</Item>
               <Item>&#xD;&#xA;   -&gt;'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'&#xD;&#xA;   -&gt;'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SplashScreenService">
          <Members>
           <Member Name="#Commit`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SplashScreenService.Commit&lt;TViewModel&gt;()'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CommitAsync`1(System.Action)">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SplashScreenService.CommitAsync&lt;TViewModel&gt;(Action)'</Item>
               <Item>'TViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Execute()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SplashScreenService.Execute()'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'SplashScreenService.Execute()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'SplashScreenService.Execute()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'SplashScreenService.Execute()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UIVisualizerService">
          <Members>
           <Member Name="#GetActiveWindow()">
            <Messages>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'UIVisualizerService.GetActiveWindow()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RegisteredWindows">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIVisualizerService.RegisteredWindows'</Item>
               <Item>'Dictionary&lt;string, Type&gt;'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIVisualizerService.RegisteredWindows'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShowWindow(System.Windows.FrameworkElement,System.Boolean)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'UIVisualizerService.ShowWindow(FrameworkElement, bool)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'UIVisualizerService.ShowWindow(FrameworkElement, bool)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ViewModelServiceBase">
          <Members>
           <Member Name="#Dispatcher">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'ViewModelServiceBase.Dispatcher'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WindowNotRegisteredException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="MissingConstructor">
             <Item>'WindowNotRegisteredException'</Item>
             <Item>protected WindowNotRegisteredException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'WindowNotRegisteredException'</Item>
             <Item>public WindowNotRegisteredException()</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'WindowNotRegisteredException'</Item>
             <Item>public WindowNotRegisteredException(String, Exception)</Item>
            </Issue>
           </Message>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Certainty="95" Level="Error">
             <Item>'WindowNotRegisteredException'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'WindowNotRegisteredException.WindowNotRegisteredException(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM.Services.Test">
        <Types>
         <Type Name="MessageService">
          <Members>
           <Member Name="#Show(System.String,System.String,Catel.MVVM.Services.MessageButton,Catel.MVVM.Services.MessageImage)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'MessageService.Show(string, string, MessageButton, MessageImage)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="OpenFileService">
          <Members>
           <Member Name="#DetermineFile()">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'OpenFileService.DetermineFile()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ExpectedResults">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'OpenFileService.ExpectedResults'</Item>
               <Item>'Queue&lt;Func&lt;bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ProcessService">
          <Members>
           <Member Name="#StartProcess(System.String,System.String,Catel.MVVM.Services.ProcessCompletedDelegate)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'ProcessService.StartProcess(string, string, ProcessCompletedDelegate)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SaveFileService">
          <Members>
           <Member Name="#DetermineFile()">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'SaveFileService.DetermineFile()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ExpectedResults">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'SaveFileService.ExpectedResults'</Item>
               <Item>'Queue&lt;Func&lt;bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UIVisualizerService">
          <Members>
           <Member Name="#ExpectedShowDialogResults">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIVisualizerService.ExpectedShowDialogResults'</Item>
               <Item>'Queue&lt;Func&lt;bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ExpectedShowResults">
            <Messages>
             <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIVisualizerService.ExpectedShowResults'</Item>
               <Item>'Queue&lt;Func&lt;bool&gt;&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Show(System.String,System.Object,System.EventHandler`1&lt;Catel.MVVM.Services.UICompletedEventArgs&gt;)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'UIVisualizerService.Show(string, object, EventHandler&lt;UICompletedEventArgs&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShowDialog(System.String,System.Object,System.EventHandler`1&lt;Catel.MVVM.Services.UICompletedEventArgs&gt;)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TooGeneric">
               <Item>'UIVisualizerService.ShowDialog(string, object, EventHandler&lt;UICompletedEventArgs&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM.Tasks">
        <Types>
         <Type Name="TaskBase">
          <Messages>
           <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'TaskBase'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#MessageProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TaskBase.MessageProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#NameProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TaskBase.NameProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#PercentageProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'TaskBase.PercentageProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM.ViewModels">
        <Types>
         <Type Name="ProgressNotifyableViewModel">
          <Messages>
           <Message Id="Notifyable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Notifyable</Item>
             <Item>'ProgressNotifyableViewModel'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#DetailedMessageProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ProgressNotifyableViewModel.DetailedMessageProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnTaskMessageChanged()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ProgressNotifyableViewModel.OnTaskMessageChanged()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TaskMessageProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ProgressNotifyableViewModel.TaskMessageProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TaskNameProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ProgressNotifyableViewModel.TaskNameProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TaskPercentageProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ProgressNotifyableViewModel.TaskPercentageProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TaskProperty">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ProgressNotifyableViewModel.TaskProperty'</Item>
               <Item>'PropertyData'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.MVVM.Views">
        <Types>
         <Type Name="ViewToViewModelAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'ViewToViewModelAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ViewToViewModelMappingHelper">
          <Members>
           <Member Name="#.ctor(Catel.MVVM.IViewModelContainer)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'viewModelContainer'</Item>
               <Item>'DependencyObject'</Item>
               <Item>'ViewToViewModelMappingHelper.ViewToViewModelMappingHelper(IViewModelContainer)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IncorrectParameterName">
               <Item>'ViewToViewModelMappingHelper.ViewToViewModelMappingHelper(IViewModelContainer)'</Item>
               <Item>ViewModelContainer</Item>
               <Item>'paramName'</Item>
               <Item>'ArgumentException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeViewModel(Catel.MVVM.IViewModel)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ViewToViewModelMappingHelper.InitializeViewModel(IViewModel)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows">
        <Types>
         <Type Name="AutoDisposeAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'AutoDisposeAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="AutoDisposeHelper">
          <Members>
           <Member Name="#AutoDisposeProperties(System.Object)">
            <Messages>
             <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'AutoDisposeHelper.AutoDisposeProperties(object)'</Item>
               <Item>obj</Item>
               <Item>'obj'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DataWindow">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DataWindow'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor(Catel.MVVM.IViewModel,Catel.Windows.DataWindowMode,System.Collections.Generic.IEnumerable`1&lt;Catel.Windows.DataWindowButton&gt;,Catel.Windows.DataWindowDefaultButton,System.Boolean,Catel.Windows.InfoBarMessageControlGenerationMode)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DataWindow.DataWindow(IViewModel, DataWindowMode, IEnumerable&lt;DataWindowButton&gt;, DataWindowDefaultButton, bool, InfoBarMessageControlGenerationMode)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;DataWindow..ctor(IViewModel, DataWindowMode, IEnumerable&lt;DataWindowButton&gt;, DataWindowDefaultButton, Boolean, InfoBarMessageControlGenerationMode)&#xD;&#xA;FrameworkElement.SetResourceReference(DependencyProperty, Object):Void&#xD;&#xA;Window.set_SizeToContent(SizeToContent):Void&#xD;&#xA;Window.set_ShowInTaskbar(Boolean):Void&#xD;&#xA;Window.set_ResizeMode(ResizeMode):Void&#xD;&#xA;Window.set_WindowStartupLocation(WindowStartupLocation):Void&#xD;&#xA;UIElement.set_SnapsToDevicePixels(Boolean):Void&#xD;&#xA;DataWindow.GetViewModelType():Type</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#EnableWindowOffset(System.EventArgs)">
            <Messages>
             <Message Id="e" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'e'</Item>
               <Item>'DataWindow.EnableWindowOffset(EventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnApplyExcute()">
            <Messages>
             <Message Id="Excute" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Excute</Item>
               <Item>'DataWindow.OnApplyExcute()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnContentChanged(System.Object,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'newContent'</Item>
               <Item>'FrameworkElement'</Item>
               <Item>'DataWindow.OnContentChanged(object, object)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'obj'</Item>
               <Item>'FrameworkElement'</Item>
               <Item>'DataWindow.OnContentChanged(object, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnLoaded(System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DataWindow.OnLoaded(EventArgs)'</Item>
               <Item>'FrameworkElement.OnLoaded(RoutedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnUnloaded(System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DataWindow.OnUnloaded(EventArgs)'</Item>
               <Item>'FrameworkElement.OnUnloaded(RoutedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ViewModelType">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="SameType">
               <Item>'DataWindow.ViewModelType'</Item>
               <Item>'DataWindow.GetViewModelType()'</Item>
              </Issue>
              <Issue Name="SameType">
               <Item>'DataWindow.ViewModelType'</Item>
               <Item>'DataWindow.GetViewModelType(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DataWindowDefaultButton">
          <Members>
           <Member Name="#OK">
            <Messages>
             <Message Id="OK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberAbbreviation">
               <Item>OK</Item>
               <Item>'DataWindowDefaultButton.OK'</Item>
               <Item>Ok</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DependencyObjectExtensions">
          <Members>
           <Member Name="#FindLogicalOrVisualAncestor(System.Windows.DependencyObject,System.Predicate`1&lt;System.Object&gt;,System.Int32)">
            <Messages>
             <Message Id="maxDepth" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'maxDepth'</Item>
               <Item>'DependencyObjectExtensions.FindLogicalOrVisualAncestor(this DependencyObject, Predicate&lt;object&gt;, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="EffectsHelper">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'EffectsHelper'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Blur(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="System.Windows.Media.Effects.BlurEffect" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'EffectsHelper.Blur(this FrameworkElement, Action)'</Item>
               <Item>'BlurEffect'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.UIElement.#set_Effect(System.Windows.Media.Effects.Effect)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'EffectsHelper.Blur(this FrameworkElement, Action)'</Item>
               <Item>'UIElement.Effect.set(Effect)'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Dimm(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="Dimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Dimm</Item>
               <Item>'EffectsHelper.Dimm(this FrameworkElement, Action)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Unblur(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="Unblur" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Unblur</Item>
               <Item>'EffectsHelper.Unblur(this FrameworkElement, Action)'</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.UIElement.#set_Effect(System.Windows.Media.Effects.Effect)" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'EffectsHelper.Unblur(this FrameworkElement, Action)'</Item>
               <Item>'UIElement.Effect.set(Effect)'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Undimm(System.Windows.FrameworkElement,System.Action)">
            <Messages>
             <Message Id="Undimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Undimm</Item>
               <Item>'EffectsHelper.Undimm(this FrameworkElement, Action)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FrameworkElementExtensions">
          <Members>
           <Member Name="#AttachThreadInput(System.IntPtr,System.IntPtr,System.Boolean)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'fAttach'</Item>
               <Item>'FrameworkElementExtensions.AttachThreadInput(IntPtr, IntPtr, bool)'</Item>
              </Issue>
              <Issue Name="Return">
               <Item>'FrameworkElementExtensions.AttachThreadInput(IntPtr, IntPtr, bool)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.AttachThreadInput(IntPtr, IntPtr, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BringWindowToTop(System.IntPtr)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'FrameworkElementExtensions.BringWindowToTop(IntPtr)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.BringWindowToTop(IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BringWindowToTop(System.Runtime.InteropServices.HandleRef)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.BringWindowToTop(HandleRef)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'FrameworkElementExtensions.BringWindowToTop(HandleRef)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.BringWindowToTop(HandleRef)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#BringWindowToTop(System.Windows.FrameworkElement)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'</Item>
               <Item>'Process.GetCurrentProcess()'</Item>
               <Item>&#xD;&#xA;   -&gt;'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'&#xD;&#xA;   -&gt;'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'</Item>
              </Issue>
              <Issue>
               <Item>'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'</Item>
               <Item>'Process.MainWindowHandle.get()'</Item>
               <Item>&#xD;&#xA;   -&gt;'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'&#xD;&#xA;   -&gt;'FrameworkElementExtensions.BringWindowToTop(this FrameworkElement)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCurrentThreadId()">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.GetCurrentThreadId()'</Item>
              </Issue>
             </Message>
             <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'FrameworkElementExtensions.GetCurrentThreadId()'</Item>
               <Item>8</Item>
               <Item>64-bit</Item>
               <Item>4</Item>
               <Item>'IntPtr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetForegroundWindow()">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.GetForegroundWindow()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetLastActivePopup(System.IntPtr)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.GetLastActivePopup(IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetParentBindingGroup(System.Windows.FrameworkElement)">
            <Messages>
             <Message Id="System.Windows.Data.BindingGroup" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'FrameworkElementExtensions.GetParentBindingGroup(this FrameworkElement)'</Item>
               <Item>'BindingGroup'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.FrameworkElement.#get_BindingGroup()" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'FrameworkElementExtensions.GetParentBindingGroup(this FrameworkElement)'</Item>
               <Item>'FrameworkElement.BindingGroup.get()'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWindowThreadProcessId(System.IntPtr,System.IntPtr)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.GetWindowThreadProcessId(IntPtr, IntPtr)'</Item>
              </Issue>
             </Message>
             <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'FrameworkElementExtensions.GetWindowThreadProcessId(IntPtr, IntPtr)'</Item>
               <Item>8</Item>
               <Item>64-bit</Item>
               <Item>4</Item>
               <Item>'IntPtr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWindowThreadProcessId(System.IntPtr,System.UInt32&amp;)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.GetWindowThreadProcessId(IntPtr, out uint)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.GetWindowThreadProcessId(IntPtr, out uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetActiveWindow(System.IntPtr)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'FrameworkElementExtensions.SetActiveWindow(IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LoaderAnimation">
          <Members>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LoaderAnimation'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PleaseWaitHelper">
          <Members>
           <Member Name="#HideWindow()">
            <Messages>
             <Message Id="System.Windows.Threading.Dispatcher.#Invoke(System.Delegate,System.Object[])" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'PleaseWaitHelper.HideWindow()'</Item>
               <Item>'Dispatcher.Invoke(Delegate, params object[])'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UpdateStatus(System.String,System.Int32,System.Int32)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'PleaseWaitHelper.UpdateStatus(string, int, int)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UpdateStatusText(System.String,System.Double)">
            <Messages>
             <Message Id="System.Windows.Threading.Dispatcher.#Invoke(System.Delegate,System.Object[])" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'PleaseWaitHelper.UpdateStatusText(string, double)'</Item>
               <Item>'Dispatcher.Invoke(Delegate, params object[])'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PleaseWaitHelper+HideWindowDelegate">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeNoAlternate">
             <Item>'PleaseWaitHelper.HideWindowDelegate'</Item>
             <Item>Delegate</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="PleaseWaitMode">
          <Members>
           <Member Name="#Dimm">
            <Messages>
             <Message Id="Dimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Dimm</Item>
               <Item>'PleaseWaitMode.Dimm'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PleaseWaitWindow">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PleaseWaitWindow'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ChangeMode(System.Collections.Generic.IEnumerable`1&lt;System.Windows.FrameworkElement&gt;,System.Boolean)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DoNotDimmPopups">
            <Messages>
             <Message Id="Dimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Dimm</Item>
               <Item>'PleaseWaitWindow.DoNotDimmPopups'</Item>
              </Issue>
             </Message>
             <Message Id="Popups" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Popups</Item>
               <Item>'PleaseWaitWindow.DoNotDimmPopups'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnlyDimmOwnerWindow">
            <Messages>
             <Message Id="Dimm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Dimm</Item>
               <Item>'PleaseWaitWindow.OnlyDimmOwnerWindow'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PleaseWaitWindow'</Item>
               <Item>'IComponentConnector.Connect(int, object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#WorkerThread(System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'PleaseWaitWindow.WorkerThread(object)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PopupHelper">
          <Members>
           <Member Name="#GetAllPopups()">
            <Messages>
             <Message Id="Popups" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Popups</Item>
               <Item>'PopupHelper.GetAllPopups()'</Item>
              </Issue>
             </Message>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Certainty="50">
               <Item>'PopupHelper.GetAllPopups()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Popups">
            <Messages>
             <Message Id="Popups" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Member">
               <Item>Popups</Item>
               <Item>'PopupHelper.Popups'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ResourceHelper">
          <Members>
           <Member Name="#GetResourceUri(System.String,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ResourceHelper.GetResourceUri(string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'ResourceHelper.GetResourceUri(string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'ResourceHelper.GetResourceUri(string, string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'resourceUri'</Item>
               <Item>'ResourceHelper.GetResourceUri(string, string)'</Item>
              </Issue>
             </Message>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ResourceHelper.GetResourceUri(string, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#XamlPageExists(System.String)">
            <Messages>
             <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'ResourceHelper.XamlPageExists(string)'</Item>
               <Item>String</Item>
               <Item>'uriString'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#XamlPageExists(System.Uri)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ResourceHelper.XamlPageExists(Uri)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UIElementExtensions">
          <Members>
           <Member Name="#ClientToScreen(System.IntPtr,Catel.Windows.UIElementExtensions+POINT&amp;)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIElementExtensions.ClientToScreen(IntPtr, ref UIElementExtensions.POINT)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'UIElementExtensions.ClientToScreen(IntPtr, ref UIElementExtensions.POINT)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIElementExtensions.ClientToScreen(IntPtr, ref UIElementExtensions.POINT)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InvalidateRect(System.IntPtr,System.IntPtr,System.Boolean)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'bErase'</Item>
               <Item>'UIElementExtensions.InvalidateRect(IntPtr, IntPtr, bool)'</Item>
              </Issue>
              <Issue Name="Return">
               <Item>'UIElementExtensions.InvalidateRect(IntPtr, IntPtr, bool)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIElementExtensions.InvalidateRect(IntPtr, IntPtr, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InvalidateRect(System.Windows.UIElement)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'element'</Item>
               <Item>'UIElementExtensions.InvalidateRect(this UIElement)'</Item>
               <Item>'UIElement'</Item>
               <Item>'Visual'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ScreenToClient(System.IntPtr,Catel.Windows.UIElementExtensions+POINT&amp;)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIElementExtensions.ScreenToClient(IntPtr, ref UIElementExtensions.POINT)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'UIElementExtensions.ScreenToClient(IntPtr, ref UIElementExtensions.POINT)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UIElementExtensions.ScreenToClient(IntPtr, ref UIElementExtensions.POINT)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="VisualExtensions">
          <Members>
           <Member Name="#DisableHardwareAcceleration(System.Windows.Media.Visual)">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'VisualExtensions.DisableHardwareAcceleration(this Visual)'</Item>
               <Item>'HwndSource.CompositionTarget.get()'</Item>
               <Item>&#xD;&#xA;   -&gt;'VisualExtensions.DisableHardwareAcceleration(this Visual)'&#xD;&#xA;   -&gt;'VisualExtensions.DisableHardwareAcceleration(this Visual)'</Item>
              </Issue>
              <Issue>
               <Item>'VisualExtensions.DisableHardwareAcceleration(this Visual)'</Item>
               <Item>'HwndTarget.RenderMode.set(RenderMode)'</Item>
               <Item>&#xD;&#xA;   -&gt;'VisualExtensions.DisableHardwareAcceleration(this Visual)'&#xD;&#xA;   -&gt;'VisualExtensions.DisableHardwareAcceleration(this Visual)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="VisualTargetPresentationSource">
          <Messages>
           <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
            <Issue Name="DependsOnFix">
             <Item>'VisualTargetPresentationSource'</Item>
             <Item>'VisualTarget'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="WindowExtensions">
          <Members>
           <Member Name="#BringWindowToTop(System.IntPtr)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'WindowExtensions.BringWindowToTop(IntPtr)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.BringWindowToTop(IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetProcessMainWindowHandle()">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.GetProcessMainWindowHandle()'</Item>
               <Item>'Process.GetCurrentProcess()'</Item>
               <Item>&#xD;&#xA;   -&gt;'WindowExtensions.GetProcessMainWindowHandle()'&#xD;&#xA;   -&gt;'WindowExtensions.GetProcessMainWindowHandle()'&#xD;&#xA;   -&gt;'WindowExtensions.SetOwnerWindow(this Window, bool, bool)'</Item>
              </Issue>
              <Issue>
               <Item>'WindowExtensions.GetProcessMainWindowHandle()'</Item>
               <Item>'Process.MainWindowHandle.get()'</Item>
               <Item>&#xD;&#xA;   -&gt;'WindowExtensions.GetProcessMainWindowHandle()'&#xD;&#xA;   -&gt;'WindowExtensions.GetProcessMainWindowHandle()'&#xD;&#xA;   -&gt;'WindowExtensions.SetOwnerWindow(this Window, bool, bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWindowLong(System.IntPtr,System.Int32)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.GetWindowLong(IntPtr, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetWindowRect(System.IntPtr,Catel.Windows.WindowExtensions+RECT&amp;)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.GetWindowRect(IntPtr, out WindowExtensions.RECT)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RemoveIcon(System.Windows.Window)">
            <Messages>
             <Message Id="Catel.Windows.WindowExtensions.SetWindowLong(System.IntPtr,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="HResultOrErrorCode">
               <Item>'WindowExtensions.RemoveIcon(this Window)'</Item>
               <Item>'WindowExtensions.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.SendMessage(IntPtr, uint, IntPtr, IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Return">
               <Item>'WindowExtensions.SetWindowPos(IntPtr, IntPtr, int, int, int, int, uint)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.SetWindowPos(IntPtr, IntPtr, int, int, int, int, uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WindowExtensions+RECT">
          <Messages>
           <Message Id="RECT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>RECT</Item>
             <Item>'WindowExtensions.RECT'</Item>
             <Item>Rect</Item>
            </Issue>
           </Message>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'WindowExtensions.RECT'</Item>
            </Issue>
           </Message>
           <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Equals">
             <Item>'WindowExtensions.RECT'</Item>
            </Issue>
            <Issue Name="op_Equality">
             <Item>'WindowExtensions.RECT'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Bottom">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.RECT.Bottom'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Left">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.RECT.Left'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Right">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.RECT.Right'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Top">
            <Messages>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'WindowExtensions.RECT.Top'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WrapControlHelper">
          <Members>
           <Member Name="#GetWrappedElement(System.Windows.Controls.Grid,System.String)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'wrappedGrid'</Item>
               <Item>'WrapControlHelper.GetWrappedElement(Grid, string)'</Item>
               <Item>'Grid'</Item>
               <Item>'DependencyObject'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Wrap(System.Windows.FrameworkElement,Catel.Windows.WrapOptions,System.Windows.Controls.UserControl)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'parentContentControl'</Item>
               <Item>'WrapControlHelper.Wrap(FrameworkElement, WrapOptions, UserControl)'</Item>
               <Item>'UserControl'</Item>
               <Item>'ContentControl'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Controls">
        <Types>
         <Type Name="InfoBarMessageControl">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'InfoBarMessageControl'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetBindingObject(System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'bindingObject'</Item>
               <Item>'BindingExpression'</Item>
               <Item>'InfoBarMessageControl.GetBindingObject(object)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'bindingObject'</Item>
               <Item>'BindingGroup'</Item>
               <Item>'InfoBarMessageControl.GetBindingObject(object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Data.BindingGroup" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesType">
               <Item>'InfoBarMessageControl.GetBindingObject(object)'</Item>
               <Item>'BindingGroup'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnApplyTemplate()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'InfoBarMessageControl.OnApplyTemplate()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="InfoBarMessageControlVisibilityConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'parameter'</Item>
               <Item>'string'</Item>
               <Item>'InfoBarMessageControlVisibilityConverter.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="Catel.Enum`1&lt;Catel.Windows.Controls.InfoBarMessageControlMode&gt;.TryParse(System.String,Catel.Windows.Controls.InfoBarMessageControlMode@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TryParse">
               <Item>'InfoBarMessageControlVisibilityConverter.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>'Enum&lt;InfoBarMessageControlMode&gt;.TryParse(string, out InfoBarMessageControlMode)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Page">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Page'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor()">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Page.Page()'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;Page..ctor()&#xD;&#xA;Page.GetViewModelType():Type</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnLoaded(System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Page.OnLoaded(EventArgs)'</Item>
               <Item>'FrameworkElement.OnLoaded(RoutedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnUnloaded(System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'Page.OnUnloaded(EventArgs)'</Item>
               <Item>'FrameworkElement.OnUnloaded(RoutedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ViewModelType">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="SameType">
               <Item>'Page.ViewModelType'</Item>
               <Item>'Page.GetViewModelType()'</Item>
              </Issue>
              <Issue Name="SameType">
               <Item>'Page.ViewModelType'</Item>
               <Item>'Page.GetViewModelType(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UserControl">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UserControl'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor(Catel.MVVM.IViewModel)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UserControl.UserControl(IViewModel)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;UserControl..ctor(IViewModel)&#xD;&#xA;UserControl.GetViewModelType():Type</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnLoaded(System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UserControl.OnLoaded(EventArgs)'</Item>
               <Item>'FrameworkElement.OnLoaded(RoutedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnUnloaded(System.EventArgs)">
            <Messages>
             <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UserControl.OnUnloaded(EventArgs)'</Item>
               <Item>'FrameworkElement.OnUnloaded(RoutedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ViewModelType">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="SameType">
               <Item>'UserControl.ViewModelType'</Item>
               <Item>'UserControl.GetViewModelType()'</Item>
              </Issue>
              <Issue Name="SameType">
               <Item>'UserControl.ViewModelType'</Item>
               <Item>'UserControl.GetViewModelType(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValidationEventArgs">
          <Members>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="BaseType">
               <Item>'ValidationEventArgs.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WarningAndErrorValidator">
          <Members>
           <Member Name="#CheckObjectValidationForFields(System.Object,System.String,System.Collections.ObjectModel.ObservableCollection`1&lt;Catel.Windows.Controls.FieldWarningOrErrorInfo&gt;,Catel.Windows.Controls.ValidationType)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.Compare(string, string)'</Item>
               <Item>'WarningAndErrorValidator.CheckObjectValidationForFields(object, string, ObservableCollection&lt;FieldWarningOrErrorInfo&gt;, ValidationType)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CleanUp()">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Local">
               <Item>'obj'</Item>
               <Item>'IEnumerable'</Item>
               <Item>'WarningAndErrorValidator.CleanUp()'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Controls.MVVMProviders">
        <Types>
         <Type Name="MVVMBehaviorBase`2">
          <Messages>
           <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>MVVM</Item>
             <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;'</Item>
             <Item>Mvvm</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#DesignTimeViewModelTypeProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;.DesignTimeViewModelTypeProperty'</Item>
               <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InjectedViewModel">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;.InjectedViewModel'</Item>
               <Item>'IViewModel'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;.InjectedViewModel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ViewModelTypeProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;.ViewModelTypeProperty'</Item>
               <Item>'MVVMBehaviorBase&lt;TAttachedType, TLogicType&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WindowBehavior+EventTarget">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue>
             <Item>'WindowBehavior.EventTarget'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.Windows.FrameworkElement,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'WindowBehavior.EventTarget.EventTarget(FrameworkElement, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'WindowBehavior.EventTarget.EventTarget(FrameworkElement, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnEvent`1(System.Object,!!0)">
            <Messages>
             <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'WindowBehavior.EventTarget.OnEvent&lt;TEventArgs&gt;(object, TEventArgs)'</Item>
               <Item>'e'</Item>
              </Issue>
             </Message>
             <Message Id="e" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'e'</Item>
               <Item>'WindowBehavior.EventTarget.OnEvent&lt;TEventArgs&gt;(object, TEventArgs)'</Item>
              </Issue>
             </Message>
             <Message Id="sender" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'sender'</Item>
               <Item>'WindowBehavior.EventTarget.OnEvent&lt;TEventArgs&gt;(object, TEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Controls.MVVMProviders.Logic">
        <Types>
         <Type Name="LogicBase">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LogicBase'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#.ctor(System.Windows.FrameworkElement,System.Type,Catel.MVVM.IViewModel)">
            <Messages>
             <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'LogicBase.LogicBase(FrameworkElement, Type, IViewModel)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;LogicBase..ctor(FrameworkElement, Type, IViewModel)&#xD;&#xA;Object.GetType():Type&#xD;&#xA;LogicBase.set_ViewModel(IViewModel):Void&#xD;&#xA;LogicBase.OnViewModelChanged():Void</Item>
              </Issue>
              <Issue>
               <Item>'LogicBase.LogicBase(FrameworkElement, Type, IViewModel)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;LogicBase..ctor(FrameworkElement, Type, IViewModel)&#xD;&#xA;Object.GetType():Type&#xD;&#xA;LogicBase.set_ViewModel(IViewModel):Void&#xD;&#xA;LogicBase.OnViewModelChanging():Void</Item>
              </Issue>
              <Issue>
               <Item>'LogicBase.LogicBase(FrameworkElement, Type, IViewModel)'</Item>
               <Item>&#xD;&#xA;&#xD;&#xA;LogicBase..ctor(FrameworkElement, Type, IViewModel)&#xD;&#xA;Object.GetType():Type&#xD;&#xA;LogicBase.set_ViewModel(IViewModel):Void&#xD;&#xA;LogicBase.SetDataContext(Object):Void</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConstructViewModelUsingArgumentOrDefaultConstructor(System.Object)">
            <Messages>
             <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'LogicBase.ConstructViewModelUsingArgumentOrDefaultConstructor(object)'</Item>
               <Item>Object</Item>
               <Item>'injectionObject'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnTargetControlLoadedInternal(System.Object,System.EventArgs)">
            <Messages>
             <Message Id="System.Windows.Threading.Dispatcher.#BeginInvoke(System.Delegate,System.Object[])" TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="MemberReferencesMember">
               <Item>'LogicBase.OnTargetControlLoadedInternal(object, EventArgs)'</Item>
               <Item>'Dispatcher.BeginInvoke(Delegate, params object[])'</Item>
               <Item>.NET Framework 3.0 Service Pack 2</Item>
               <Item>.NET Framework 3.5</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ViewModel">
            <Accessors>
             <Accessor Name="#set_ViewModel(Catel.MVVM.IViewModel)">
              <Messages>
               <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue>
                 <Item>'LogicBase.ViewModel.set(IViewModel)'</Item>
                 <Item>'Exception'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="NavigationLogicBase`1">
          <Members>
           <Member Name="#GetUriWithoutParameters(System.String)">
            <Messages>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'NavigationLogicBase&lt;T&gt;.GetUriWithoutParameters(string)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UserControlLogic">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UserControlLogic'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetParent(System.Windows.FrameworkElement)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'UserControlLogic.GetParent(FrameworkElement)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WindowLogic">
          <Members>
           <Member Name="#InvokeCloseDynamically()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'WindowLogic.InvokeCloseDynamically()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Data">
        <Types>
         <Type Name="DataResourceBindingExtension">
          <Members>
           <Member Name="#Convert(System.Object,System.Type)">
            <Messages>
             <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'Convert.ChangeType(object, Type)'</Item>
               <Item>'DataResourceBindingExtension.Convert(object, Type)'</Item>
               <Item>'Convert.ChangeType(object, Type, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DependencyPropertyChangedHelper">
          <Members>
           <Member Name="#GetHandlerDependencyPropertyName(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'DependencyPropertyChangedHelper.GetHandlerDependencyPropertyName(string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsRealDependencyProperty(System.Windows.FrameworkElement,System.String)">
            <Messages>
             <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.EndsWith(string)'</Item>
               <Item>'DependencyPropertyChangedHelper.IsRealDependencyProperty(this FrameworkElement, string)'</Item>
               <Item>'string.EndsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DependencyPropertyHelper">
          <Members>
           <Member Name="#EnsureItemInCache(System.Windows.FrameworkElement)">
            <Messages>
             <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'string.LastIndexOf(string)'</Item>
               <Item>'DependencyPropertyHelper.EnsureItemInCache(this FrameworkElement)'</Item>
               <Item>'string.LastIndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDependencyProperties(System.Windows.FrameworkElement)">
            <Messages>
             <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'List&lt;DependencyProperty&gt;'</Item>
               <Item>'DependencyPropertyHelper.GetDependencyProperties(this FrameworkElement)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetDependencyPropertyCacheKey(System.Windows.FrameworkElement,System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'DependencyPropertyHelper.GetDependencyPropertyCacheKey(FrameworkElement, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Data.Converters">
        <Types>
         <Type Name="AreEqualMultiValueConverter">
          <Messages>
           <Message Id="MultiValue" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>MultiValue</Item>
             <Item>'AreEqualMultiValueConverter'</Item>
             <Item>Multivalue</Item>
            </Issue>
           </Message>
           <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="Type">
             <Item>Multi</Item>
             <Item>'AreEqualMultiValueConverter'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="CountCollapsedConverter">
          <Members>
           <Member Name="#IsVisible(System.Object,System.Type,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'value'</Item>
               <Item>'ICollection'</Item>
               <Item>'CountCollapsedConverter.IsVisible(object, Type, object)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'value'</Item>
               <Item>'string'</Item>
               <Item>'CountCollapsedConverter.IsVisible(object, Type, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FormattingConverter">
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'FormattingConverter.FormattingConverter(string)'</Item>
               <Item>String</Item>
               <Item>'defaultFormatString'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Convert(System.Object,System.Type,System.Object)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'FormattingConverter.Convert(object, Type, object)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IsSelectedConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'parameter'</Item>
               <Item>'string'</Item>
               <Item>'IsSelectedConverter.Convert(object, Type, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.Boolean.TryParse(System.String,System.Boolean@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TryParse">
               <Item>'IsSelectedConverter.Convert(object, Type, object)'</Item>
               <Item>'bool.TryParse(string, out bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConvertBack(System.Object,System.Type,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'parameter'</Item>
               <Item>'string'</Item>
               <Item>'IsSelectedConverter.ConvertBack(object, Type, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.Boolean.TryParse(System.String,System.Boolean@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="TryParse">
               <Item>'IsSelectedConverter.ConvertBack(object, Type, object)'</Item>
               <Item>'bool.TryParse(string, out bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="IsSelectedValueConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'parameter'</Item>
               <Item>'string'</Item>
               <Item>'IsSelectedValueConverter.Convert(object, Type, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'IsSelectedValueConverter.Convert(object, Type, object)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConvertBack(System.Object,System.Type,System.Object)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="Parameter">
               <Item>'parameter'</Item>
               <Item>'string'</Item>
               <Item>'IsSelectedValueConverter.ConvertBack(object, Type, object)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'IsSelectedValueConverter.ConvertBack(object, Type, object)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NullableValueConverter">
          <Members>
           <Member Name="#ConvertBack(System.Object,System.Type,System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'NullableValueConverter.ConvertBack(object, Type, object)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValueConverterBase">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message Id="Catel.Windows.Data.Converters.ValueConverterBase.Convert(System.Object,System.Type,System.Object)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ValueConverterBase.Convert(object, Type, object)'</Item>
               <Item>'ValueConverterBase.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>'ValueConverterBase.Convert(object, Type, object, CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message Id="Catel.Windows.Data.Converters.ValueConverterBase.ConvertBack(System.Object,System.Type,System.Object)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ValueConverterBase.ConvertBack(object, Type, object)'</Item>
               <Item>'ValueConverterBase.ConvertBack(object, Type, object, CultureInfo)'</Item>
               <Item>'ValueConverterBase.ConvertBack(object, Type, object, CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ValueConverterGroup">
          <Members>
           <Member Name="#System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ValueConverterGroup'</Item>
               <Item>'IValueConverter.Convert(object, Type, object, CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'ValueConverterGroup'</Item>
               <Item>'IValueConverter.ConvertBack(object, Type, object, CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Interactivity">
        <Types>
         <Type Name="Authentication">
          <Messages>
           <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
            <Issue Name="System">
             <Item>'Authentication'</Item>
             <Item>System.Security.Authentication</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#OnAssociatedObjectLoaded(System.Object,System.EventArgs)">
            <Messages>
             <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="NoArguments">
               <Item>'ArgumentOutOfRangeException'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CommandBehaviorBase`1">
          <Members>
           <Member Name="#CommandParameterProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandBehaviorBase&lt;T&gt;.CommandParameterProperty'</Item>
               <Item>'CommandBehaviorBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CommandProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandBehaviorBase&lt;T&gt;.CommandProperty'</Item>
               <Item>'CommandBehaviorBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ModifiersProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandBehaviorBase&lt;T&gt;.ModifiersProperty'</Item>
               <Item>'CommandBehaviorBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CommandEventTriggerBase`1">
          <Members>
           <Member Name="#CommandParameterProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandEventTriggerBase&lt;T&gt;.CommandParameterProperty'</Item>
               <Item>'CommandEventTriggerBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CommandProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandEventTriggerBase&lt;T&gt;.CommandProperty'</Item>
               <Item>'CommandEventTriggerBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ModifiersProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandEventTriggerBase&lt;T&gt;.ModifiersProperty'</Item>
               <Item>'CommandEventTriggerBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CommandTriggerActionBase`1">
          <Members>
           <Member Name="#CommandParameterProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandTriggerActionBase&lt;T&gt;.CommandParameterProperty'</Item>
               <Item>'CommandTriggerActionBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CommandProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandTriggerActionBase&lt;T&gt;.CommandProperty'</Item>
               <Item>'CommandTriggerActionBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ModifiersProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandTriggerActionBase&lt;T&gt;.ModifiersProperty'</Item>
               <Item>'CommandTriggerActionBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CommandTriggerBase`1">
          <Members>
           <Member Name="#CommandParameterProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandTriggerBase&lt;T&gt;.CommandParameterProperty'</Item>
               <Item>'CommandTriggerBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CommandProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandTriggerBase&lt;T&gt;.CommandProperty'</Item>
               <Item>'CommandTriggerBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ModifiersProperty">
            <Messages>
             <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'CommandTriggerBase&lt;T&gt;.ModifiersProperty'</Item>
               <Item>'CommandTriggerBase&lt;T&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DelayBindingUpdate">
          <Members>
           <Member Name="#GetDependencyProperty()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'DelayBindingUpdate.GetDependencyProperty()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UsedDependencyPropertyName">
            <Accessors>
             <Accessor Name="#get_UsedDependencyPropertyName()">
              <Messages>
               <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
                <Issue Name="IFormatProviderAlternateString">
                 <Item>'string.Format(string, object)'</Item>
                 <Item>'DelayBindingUpdate.UsedDependencyPropertyName.get()'</Item>
                 <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
                 <Item>'CultureInfo.CurrentCulture'</Item>
                 <Item>'CultureInfo.InvariantCulture'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="DragDrop">
          <Messages>
           <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
            <Issue Name="DependsOnFix">
             <Item>'DragDrop'</Item>
             <Item>'DragAdorner', 'DropAdorner'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Dispose()">
            <Messages>
             <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="OutsideDispose">
               <Item>'DragDrop.Dispose()'</Item>
               <Item>'GC.SuppressFinalize(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NumericTextBox">
          <Members>
           <Member Name="#GetKeyValue(System.Windows.Input.KeyEventArgs)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'NumericTextBox.GetKeyValue(KeyEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsDigit(System.Windows.Input.Key)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'NumericTextBox.IsDigit(Key)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UpdateBindingOnPasswordChanged">
          <Members>
           <Member Name="#OnPasswordChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <Messages>
             <Message Id="e" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="NonBreaking" BreaksBuild="True">
              <Issue>
               <Item>'e'</Item>
               <Item>'UpdateBindingOnPasswordChanged.OnPasswordChanged(DependencyPropertyChangedEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WindowEventToCommand">
          <Members>
           <Member Name="#UnregisterEventHandler(System.Windows.Window)">
            <Messages>
             <Message Id="window" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-02-14 16:04:57Z" FixCategory="DependsOnFix" BreaksBuild="True">
              <Issue>
               <Item>'window'</Item>
               <Item>'WindowEventToCommand.UnregisterEventHandler(Window)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Markup">
        <Types>
         <Type Name="ServiceDependencyExtension">
          <Members>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue Name="BaseType">
               <Item>'ServiceDependencyExtension.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Catel.Windows.Threading">
        <Types>
         <Type Name="DispatcherHelper">
          <Members>
           <Member Name="#DoEvents()">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
              <Issue>
               <Item>'DispatcherHelper.DoEvents()'</Item>
               <Item>'Dispatcher.PushFrame(DispatcherFrame)'</Item>
               <Item>&#xD;&#xA;   -&gt;'DispatcherHelper.DoEvents()'&#xD;&#xA;   -&gt;'DispatcherHelper.DoEvents()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
      <Resources>
       <Resource Name="Catel.Properties.Exceptions.resources">
        <Messages>
         <Message Id="viewmodel" TypeName="ResourceStringsShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1703" Created="2013-02-14 16:04:57Z" BreaksBuild="True">
          <Issue Name="StringResource">
           <Item>'Catel.Properties.Exceptions.resx'</Item>
           <Item>PropertyNotFoundInModel</Item>
           <Item>viewmodel</Item>
           <Item>Mapped viewmodel property '{0}' to model property '{1}' is invalid because property '{1}' is not found on the model '{2}'&lt;/value&gt;&#xD;&#xA;    &lt;comment&gt;{0} = view model property name&#xD;&#xA;{1} = model property name&#xD;&#xA;{2} = model name</Item>
          </Issue>
         </Message>
        </Messages>
       </Resource>
      </Resources>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
    <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   </Rule>
   <Rule TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243">
    <Resolution Name="Default">In the constructor of {0}, change the value of argument {1}, which is currently "{2}", to something that can be correctly parsed as {3}.</Resolution>
   </Rule>
   <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
    <Resolution Name="Default">Define a custom attribute to replace {0}.</Resolution>
   </Rule>
   <Rule TypeName="AvoidExcessiveParametersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1005">
    <Resolution Name="Default">Consider a design where {0} has no more than 2 type parameters.</Resolution>
   </Rule>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
    <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
    <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
    <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   </Rule>
   <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
    <Resolution Name="OutsideDispose">{0} calls {1}, a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Resolution>
   </Rule>
   <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
    <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   </Rule>
   <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
    <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
    <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
    <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   </Rule>
   <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
    <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
    <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
    <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
    <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
    <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
    <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
    <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   </Rule>
   <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
    <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   </Rule>
   <Rule TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061">
    <Resolution Name="Default">Change or remove {0} because it hides a more specific base class method: {1}.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
    <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
    <Resolution Name="ObjectCreation">{0} creates a new instance of {1} which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Resolution>
    <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
    <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   </Rule>
   <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
    <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   </Rule>
   <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
    <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
    <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
    <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   </Rule>
   <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
    <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
    <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
    <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
    <Resolution Name="DelegateParameterMoreMeaningfulName">In delegate {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
    <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
    <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
    <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
    <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
    <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
    <Resolution Name="MemberNewerVersion">Either replace the suffix '{0}' in member name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the member it replaces.</Resolution>
    <Resolution Name="TypeNewerVersion">Either replace the suffix '{0}' in type name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the type it replaces.</Resolution>
    <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
    <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
    <Resolution Name="MemberParameter">In virtual/interface member {0}, rename parameter {1} so that it no longer conflicts with the reserved language keyword '{2}'. Using a reserved keyword as the name of a parameter on a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
    <Resolution Name="Type">Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Resolution>
   </Rule>
   <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
    <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
    <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
    <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
    <Resolution Name="NoArguments">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>
   </Rule>
   <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
    <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   </Rule>
   <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
    <Resolution Name="Default">Specify AttributeUsage on {0}.</Resolution>
   </Rule>
   <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
    <Resolution Name="Default">Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
    <Resolution Name="Return">Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   </Rule>
   <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
    <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
    <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   </Rule>
   <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
    <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   </Rule>
   <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
    <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   </Rule>
   <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
    <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   </Rule>
   <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
    <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   </Rule>
   <Rule TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225">
    <Resolution Name="Multiple">Provide a method named '{0}' or '{1}' as an alternate for operator {2}.</Resolution>
   </Rule>
   <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
    <Resolution Name="Equals">{0} should override Equals.</Resolution>
    <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   </Rule>
   <Rule TypeName="OverrideGetHashCodeOnOverridingEquals" Category="Microsoft.Usage" CheckId="CA2218">
    <Resolution Name="Default">Since {0} redefines Equals, it should also redefine GetHashCode.</Resolution>
   </Rule>
   <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
    <Resolution Name="Return">As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</Resolution>
   </Rule>
   <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
    <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   </Rule>
   <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
    <Resolution Name="Default">Change either member or parameter name {0} so that one differs from the other.</Resolution>
   </Rule>
   <Rule TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234">
    <Resolution Name="Default">Modify {0} to call {1} instead of {2}.</Resolution>
   </Rule>
   <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
    <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   </Rule>
   <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
    <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
    <Resolution Name="SameType">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>
   </Rule>
   <Rule TypeName="ResourceStringsShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1703">
    <Resolution Name="StringResource">In resource {0}, referenced by name '{1}', correct the spelling of '{2}' in string value '{3}'.</Resolution>
   </Rule>
   <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
    <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
    <Resolution Name="UICultureString">{0} passes {1} as the 'IFormatProvider' parameter to {2}. This property returns a culture that is inappropriate for formatting methods. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   </Rule>
   <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
    <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   </Rule>
   <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
    <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   </Rule>
   <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
    <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   </Rule>
   <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
    <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   </Rule>
   <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
    <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   </Rule>
   <Rule TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030">
    <Resolution Name="Default">Consider making {0} an event.</Resolution>
   </Rule>
   <Rule TypeName="UseGenericsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1007">
    <Resolution Name="Default">Consider using generics instead of a reference to System.Object in {0}.</Resolution>
   </Rule>
   <Rule TypeName="UseOnlyApiFromTargetedFramework" Category="Microsoft.Portability" CheckId="CA1903">
    <Resolution Name="MemberReferencesMember">Member {0} uses member {1}. Because this member was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed.</Resolution>
    <Resolution Name="MemberReferencesType">Member {0} uses type {1}. Because this type was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed.</Resolution>
    <Resolution Name="TypeReferencesType">Type {0} uses type {1}. Because this type was introduced in {2}, which was not included in the project's target framework, {3}, your application may fail to run on systems without this service pack installed.</Resolution>
   </Rule>
   <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
    <Resolution Name="StringComparison">{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Resolution>
   </Rule>
   <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
    <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
    <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
    <Resolution Name="MemberParameterNoAlternate">In member {0}, replace the term '{1}' in parameter name {2} with an appropriate alternate or remove it entirely.</Resolution>
    <Resolution Name="TypeNoAlternate">Replace the term '{0}' in type name {1} with an appropriate alternate or remove it entirely.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
